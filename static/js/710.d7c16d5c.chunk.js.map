{"version":3,"file":"static/js/710.d7c16d5c.chunk.js","mappings":"8JAGA,MAgIA,EAhIkBA,IAAmB,IAAlB,SAAEC,GAAUD,EAC7B,MAAOE,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,IAClCC,EAAUC,IAAeF,EAAAA,EAAAA,WAAS,GAqGzC,OAnGAG,EAAAA,EAAAA,WAAU,KACWC,WACjB,MAAMC,EAAS,CAEb,6BACA,6BACA,2DACA,+EAGA,sCACA,sCACA,sCACA,sCACA,6CAGA,8BACA,gCAGA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBAGA,+OAGIC,EAAcD,EAAOE,OAC3B,IAAIC,EAAe,EAEnB,MAAMC,EAAeJ,EAAOK,IAAIN,SACvB,IAAIO,QAAQ,CAACC,EAASC,KAC3B,GAAIC,EAAMC,SAAS,SAAWD,EAAMC,SAAS,SAAU,CAErD,MAAMC,EAAQC,SAASC,cAAc,SACrCF,EAAMG,QAAU,WAChBH,EAAMI,iBAAmB,KACvBZ,IACAT,EAAaS,EAAeF,EAAe,KAC3CM,KAEFI,EAAMK,QAAUR,EAChBG,EAAMM,IAAMR,CACd,KAAO,CAEL,MAAMS,EAAM,IAAIC,MAChBD,EAAIE,OAAS,KACXjB,IACAT,EAAaS,EAAeF,EAAe,KAC3CM,KAEFW,EAAIF,QAAUR,EACdU,EAAID,IAAMR,CACZ,KAIJ,UACQH,QAAQe,IAAIjB,GAClBP,GAAY,GACZyB,WAAW,KACL9B,GAAgC,oBAAbA,GACrBA,KAED,IACL,CAAE,MAAO+B,GAGP1B,GAAY,GACZyB,WAAW,KACL9B,GAAgC,oBAAbA,GACrBA,KAED,IACL,GAGFgC,IACC,CAAChC,KAGFiC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,aAAAC,OAAe/B,EAAW,WAAa,IAAKgC,UACxDC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,oBAAmBE,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,UAASE,SAAA,EACtBH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAEjBG,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qBAAoBE,SAAA,EACjCH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcE,UAC3BH,EAAAA,EAAAA,KAAA,OACEC,UAAU,gBACVI,MAAO,CAAEC,MAAM,GAADJ,OAAKlC,EAAQ,WAG/BoC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeE,SAAA,CAAEI,KAAKC,MAAMxC,GAAU,e","sources":["components/Preloader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Preloader.css';\r\n\r\nconst Preloader = ({ onLoaded }) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadAssets = async () => {\r\n      const assets = [\r\n        // Videos\r\n        './components/Home/0829.mp4',\r\n        './components/Home/0827.mp4',\r\n        './components/Home/PinDown.io_@eplerkirill_1756479385.mp4',\r\n        './components/Home/ssvid.net--Dark-Substance-Moving-Slow-and-Wavy_486x864.mp4',\r\n\r\n        // Team images\r\n        './components/Team/Teamletters/A.png',\r\n        './components/Team/Teamletters/E.png',\r\n        './components/Team/Teamletters/M.png',\r\n        './components/Team/Teamletters/T.png',\r\n        './components/Team/Teamletters/Arrowuni.png',\r\n\r\n        // Other images\r\n        './components/Home/icon1.png',\r\n        './components/Home/Tagline.svg',\r\n\r\n        // Gallery images (first 20 for faster loading)\r\n        '/images/DSC_0014.JPG',\r\n        '/images/DSC_0016.JPG',\r\n        '/images/DSC_0022.JPG',\r\n        '/images/DSC_0023.JPG',\r\n        '/images/DSC_0024.JPG',\r\n        '/images/DSC_0025.JPG',\r\n        '/images/DSC_0026.JPG',\r\n        '/images/DSC_0027.JPG',\r\n        '/images/DSC_0028.JPG',\r\n        '/images/DSC_0029.JPG',\r\n        '/images/DSC_0030.JPG',\r\n        '/images/DSC_0031.JPG',\r\n        '/images/DSC_0032.JPG',\r\n        '/images/DSC_0033.JPG',\r\n        '/images/DSC_0034.JPG',\r\n        '/images/DSC_0035.JPG',\r\n        '/images/DSC_0036.JPG',\r\n        '/images/DSC_0038.JPG',\r\n        '/images/DSC_0039.JPG',\r\n        '/images/DSC_0040.JPG',\r\n\r\n        // External images\r\n        'https://media.discordapp.net/attachments/1403761173752451203/1409843541143715941/image.png?ex=68aeda9d&is=68ad891d&hm=235d8dd2132a2935eeffe3ca4e83b7ab22431d36d7096f72fb937eef37d58eb2&=&format=webp&quality=lossless&width=1860&height=365'\r\n      ];\r\n\r\n      const totalAssets = assets.length;\r\n      let loadedAssets = 0;\r\n\r\n      const loadPromises = assets.map(async (asset) => {\r\n        return new Promise((resolve, reject) => {\r\n          if (asset.endsWith('.mp4') || asset.endsWith('.webm')) {\r\n            // Load video\r\n            const video = document.createElement('video');\r\n            video.preload = 'metadata';\r\n            video.onloadedmetadata = () => {\r\n              loadedAssets++;\r\n              setProgress((loadedAssets / totalAssets) * 100);\r\n              resolve();\r\n            };\r\n            video.onerror = reject;\r\n            video.src = asset;\r\n          } else {\r\n            // Load image\r\n            const img = new Image();\r\n            img.onload = () => {\r\n              loadedAssets++;\r\n              setProgress((loadedAssets / totalAssets) * 100);\r\n              resolve();\r\n            };\r\n            img.onerror = reject;\r\n            img.src = asset;\r\n          }\r\n        });\r\n      });\r\n\r\n      try {\r\n        await Promise.all(loadPromises);\r\n        setIsLoaded(true);\r\n        setTimeout(() => {\r\n          if (onLoaded && typeof onLoaded === 'function') {\r\n            onLoaded();\r\n          }\r\n        }, 1000); // Small delay for smooth transition\r\n      } catch (error) {\r\n        // Still proceed even if some assets fail to load\r\n        // Cleaned up: Removed console.error for production-ready code\r\n        setIsLoaded(true);\r\n        setTimeout(() => {\r\n          if (onLoaded && typeof onLoaded === 'function') {\r\n            onLoaded();\r\n          }\r\n        }, 1000);\r\n      }\r\n    };\r\n\r\n    loadAssets();\r\n  }, [onLoaded]);\r\n\r\n  return (\r\n    <div className={`preloader ${isLoaded ? 'fade-out' : ''}`}>\r\n      <div className=\"preloader-content\">\r\n        <div className=\"wrapper\">\r\n          <div className=\"circle\"></div>\r\n          <div className=\"circle\"></div>\r\n          <div className=\"circle\"></div>\r\n          <div className=\"shadow\"></div>\r\n          <div className=\"shadow\"></div>\r\n          <div className=\"shadow\"></div>\r\n        </div>\r\n        <div className=\"progress-container\">\r\n          <div className=\"progress-bar\">\r\n            <div\r\n              className=\"progress-fill\"\r\n              style={{ width: `${progress}%` }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"progress-text\">{Math.round(progress)}%</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n"],"names":["_ref","onLoaded","progress","setProgress","useState","isLoaded","setIsLoaded","useEffect","async","assets","totalAssets","length","loadedAssets","loadPromises","map","Promise","resolve","reject","asset","endsWith","video","document","createElement","preload","onloadedmetadata","onerror","src","img","Image","onload","all","setTimeout","error","loadAssets","_jsx","className","concat","children","_jsxs","style","width","Math","round"],"sourceRoot":""}