{"version":3,"file":"static/js/633.f4831cee.chunk.js","mappings":"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","sources":["components/Navbar.js"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport \"./Navbar.css\"\r\nimport Register from \"./Register\"\r\n\r\nconst navigationLinks = [\r\n  { id: 'home', label: \"Home\" },\r\n  { id: 'events', label: \"Events\" },\r\n  { id: 'team', label: \"Team\" },\r\n  { id: 'timeline', label: \"Timeline\" }\r\n  // { id: 'gallery', label: \"Gallery\" }\r\n]\r\n\r\nconst events = [\r\n  { id: \"code-unlocked\", title: \"Code Unlocked\" },\r\n  { id: \"think-build-create\", title: \"Think. Build. Create.\" },\r\n  { id: \"digital-playground\", title: \"The Digital Playground\" },\r\n  { id: \"stories-in-motion\", title: \"Stories in Motion\" },\r\n  { id: \"lens-on-life\", title: \"Lens on Life\" },\r\n  { id: \"design-for-impact\", title: \"Design for Impact\" },\r\n  { id: \"voices-of-change\", title: \"Voices of Change\" },\r\n  { id: \"human-dimensions\", title: \"Human Dimensions\" },\r\n  { id: \"aidbots\", title: \"AidBots\" },\r\n];\r\n\r\n\r\nexport default function Navbar({ setActiveTab, setSelectedEventIndex , setShowRegister}) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\r\n  const [isEventsDropdownOpen, setIsEventsDropdownOpen] = useState(false)\r\n  const [isMobileEventsOpen, setIsMobileEventsOpen] = useState(false)\r\n\r\n  const handleNavClick = (id) => {\r\n    setActiveTab(id);\r\n    setIsMobileMenuOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <header className=\"navbar\">\r\n        <div className=\"navbar-container\">\r\n          {/* Logo */}\r\n          <a href=\"#\" className=\"logocyfernode\" onClick={() => handleNavClick('home')}>CYFERNODE</a>\r\n\r\n          {/* Desktop Navigation */}\r\n          <nav className=\"nav-links\">\r\n            {navigationLinks.map((link) => (\r\n              link.id === 'events' ? (\r\n                <div\r\n                  key={link.id}\r\n                  className=\"dropdown\"\r\n                  onMouseEnter={() => setIsEventsDropdownOpen(true)}\r\n                  onMouseLeave={() => setIsEventsDropdownOpen(false)}\r\n                >\r\n                  <a href=\"#\" onClick={() => {\r\n                    handleNavClick(link.id)\r\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n                  }}>{link.label}</a>\r\n                  {isEventsDropdownOpen && (\r\n                    <div className=\"dropdown-content\">\r\n                      {events.map((event, index) => (\r\n<a\r\n  key={event.eventName}\r\n  href=\"#\"\r\n  className=\"dropdown-link\"   // add back your styling hook\r\n  onClick={(e) => {\r\n    e.preventDefault();\r\n    setSelectedEventIndex(index);\r\n    setActiveTab(\"events\");\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  }}\r\n>\r\n  {event.title}\r\n</a>\r\n\r\n))}\r\n\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <a key={link.id} href=\"#\" onClick={() => handleNavClick(link.id)}>{link.label}</a>\r\n              )\r\n            ))}\r\n          </nav>\r\n\r\n          {/* Right buttons */}\r\n          <div className=\"navbar-right\">\r\n\r\n            <button className=\"button type1 registerbtn\" onClick={() => setShowRegister(true)}>\r\n              <span className=\"btn-txt\">Register</span>\r\n            </button>\r\n\r\n\r\n          </div>\r\n\r\n          {/* Mobile menu toggle */}\r\n          <button\r\n            className={`menu-btn ${isMobileMenuOpen ? \"open\" : \"\"}`}\r\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\r\n            aria-label=\"Toggle menu\"\r\n          >\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Mobile Navigation Overlay */}\r\n      <div className={`mobile-menu-overlay ${isMobileMenuOpen ? \"open\" : \"\"}`}>\r\n        <div className=\"mobile-menu\">\r\n          <div className=\"mobile-menu-header\">\r\n            <a href=\"#\" className=\"logocyfernode mobile-logo\">CYFERNODE</a>\r\n            <button\r\n              className=\"close-btn\"\r\n              onClick={() => setIsMobileMenuOpen(false)}\r\n              aria-label=\"Close menu\"\r\n            >\r\n              ✕\r\n            </button>\r\n          </div>\r\n          <nav className=\"mobile-nav\">\r\n            {navigationLinks.map((link) => (\r\n              <a key={link.id} href=\"#\" onClick={() => handleNavClick(link.id)}>\r\n                {link.label}\r\n              </a>\r\n            ))}\r\n          </nav>\r\n          {/* Events in mobile menu */}\r\n          <div className=\"mobile-events\">\r\n            <button\r\n              className={`mobile-events-toggle ${isMobileEventsOpen ? 'open' : ''}`}\r\n              onClick={() => setIsMobileEventsOpen(!isMobileEventsOpen)}\r\n              aria-expanded={isMobileEventsOpen}\r\n              aria-controls=\"mobile-events-list\"\r\n            >\r\n              Events\r\n              <span className=\"toggle-arrow\">{isMobileEventsOpen ? '▲' : '▼'}</span>\r\n            </button>\r\n            {isMobileEventsOpen && (\r\n              <div id=\"mobile-events-list\" className=\"mobile-events-list\">\r\n{events.map((event, index) => (\r\n  <a\r\n    key={event.id}\r\n    href=\"#\"\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      setSelectedEventIndex(index);   // same as desktop\r\n      setActiveTab(\"events\");         // force tab to \"events\"\r\n      setIsMobileMenuOpen(false); \r\n      window.scrollTo({ top: 0, behavior: 'smooth' });    // close menu after click\r\n    }}\r\n  >\r\n    {event.title}\r\n  </a>\r\n))}\r\n\r\n\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n"],"names":["navigationLinks","id","label","events","title","Navbar","_ref","setActiveTab","setSelectedEventIndex","setShowRegister","showModal","setShowModal","useState","isMobileMenuOpen","setIsMobileMenuOpen","isEventsDropdownOpen","setIsEventsDropdownOpen","isMobileEventsOpen","setIsMobileEventsOpen","handleNavClick","_jsxs","_Fragment","children","_jsx","className","href","onClick","map","link","onMouseEnter","onMouseLeave","window","scrollTo","top","behavior","event","index","e","preventDefault","eventName","concat"],"sourceRoot":""}