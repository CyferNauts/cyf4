{"version":3,"file":"static/js/266.06bd22d7.chunk.js","mappings":"oKAIe,SAASA,EAAQC,GAA2B,IAA1B,QAAEC,EAAO,WAAEC,GAAYF,EACtD,OAAKC,GAGHE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAgBC,QAASA,IAAMH,GAAW,GAAOI,UAC9DC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAgBC,QAAUG,GAAMA,EAAEC,kBAAkBH,SAAA,EACjEH,EAAAA,EAAAA,KAAA,UAAQC,UAAU,YAAYC,QAASA,IAAMH,GAAW,GAAOI,UAC7DH,EAAAA,EAAAA,KAAA,OAAKO,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA4BR,UAC5FH,EAAAA,EAAAA,KAAA,QAAMY,EAAE,uBAAuBC,OAAO,eAAeC,YAAY,IAAIC,cAAc,eAIvFf,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaE,SAAC,YAI5BH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,SACzBa,EAAAA,GAAkBC,IAAI,CAACC,EAAOC,KAC7Bf,EAAAA,EAAAA,MAAA,OAAiBH,UAAU,cAAaE,SAAA,CACrCe,EAAME,QACLhB,EAAAA,EAAAA,MAAA,OAAKH,UAAU,cAAcoB,MAAO,CAAEC,YAAaJ,EAAMK,OAAS,WAAYpB,SAAA,EAC5EH,EAAAA,EAAAA,KAAA,OAAKwB,IAAKN,EAAME,MAAOK,IAAKP,EAAMQ,UAAWC,QAAQ,UACrD3B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAgBoB,MAAO,CAAEO,WAAW,2BAADC,OAA6BX,EAAMK,OAAS,UAAS,2BAG3GnB,EAAAA,EAAAA,MAAA,OAAKH,UAAU,cAAaE,SAAA,EAC1BH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaE,SAAEe,EAAMQ,aAEnCtB,EAAAA,EAAAA,MAAA,OAAKH,UAAU,cAAaE,SAAA,CACzBe,EAAMY,OACL1B,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWE,SAAA,EACxBH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYE,SAAC,UAC7BH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYE,SAAEe,EAAMY,UAGvCZ,EAAMa,cACL3B,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWE,SAAA,EACxBH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYE,SAAC,iBAC7BH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYE,SAAEe,EAAMa,qBAK1C3B,EAAAA,EAAAA,MAAA,UACEH,UAAU,gBACVC,QAASA,KACP8B,OAAOC,KAAKf,EAAMgB,KAAM,UACxBnC,GAAW,IAEbsB,MAAO,CACL,iBAAkBH,EAAMK,OAAS,WACjCpB,SAAA,EAEFH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,kBACNH,EAAAA,EAAAA,KAAA,OAAKO,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA4BR,UAC5FH,EAAAA,EAAAA,KAAA,QAAMY,EAAE,iBAAiBC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQoB,eAAe,oBArClGhB,WAjBC,IAgEvB,C","sources":["components/Register.js"],"sourcesContent":["import React from \"react\";\r\nimport eventsData from \"../data/events.json\";\r\nimport \"./Register.css\";\r\n\r\nexport default function Register({ trigger, setTrigger }) {\r\n  if (!trigger) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={() => setTrigger(false)}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <button className=\"close-btn\" onClick={() => setTrigger(false)}>\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M15 5L5 15M5 5L15 15\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n          </svg>\r\n        </button>\r\n\r\n        <h2 className=\"modal-title\">\r\n          Events\r\n        </h2>\r\n\r\n        <div className=\"revent-grid\">\r\n          {eventsData.events.map((event, index) => (\r\n            <div key={index} className=\"revent-card\">\r\n              {event.image && (\r\n                <div className=\"event-media\" style={{ borderColor: event.color || \"#3b82f6\" }}>\r\n                  <img src={event.image} alt={event.eventName} loading=\"lazy\" />\r\n                  <div className=\"image-overlay\" style={{ background: `linear-gradient(to top, ${event.color || \"#3b82f6\"}15, transparent)` }}></div>\r\n                </div>\r\n              )}\r\n              <div className=\"revent-body\">\r\n                <h3 className=\"revent-name\">{event.eventName}</h3>\r\n\r\n                <div className=\"revent-info\">\r\n                  {event.mode && (\r\n                    <div className=\"info-item\">\r\n                      <span className=\"info-label\">Mode</span>\r\n                      <span className=\"info-value\">{event.mode}</span>\r\n                    </div>\r\n                  )}\r\n                  {event.eligibility && (\r\n                    <div className=\"info-item\">\r\n                      <span className=\"info-label\">Eligibility</span>\r\n                      <span className=\"info-value\">{event.eligibility}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <button\r\n                  className=\"rregister-btn\"\r\n                  onClick={() => {\r\n                    window.open(event.link, \"_blank\");\r\n                    setTrigger(false);\r\n                  }}\r\n                  style={{ \r\n                    '--accent-color': event.color || '#3b82f6'\r\n                  }}\r\n                >\r\n                  <span>Register Now</span>\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M6 3L11 8L6 13\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":["Register","_ref","trigger","setTrigger","_jsx","className","onClick","children","_jsxs","e","stopPropagation","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","eventsData","map","event","index","image","style","borderColor","color","src","alt","eventName","loading","background","concat","mode","eligibility","window","open","link","strokeLinejoin"],"sourceRoot":""}