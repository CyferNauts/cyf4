{"version":3,"file":"static/js/569.558179c1.chunk.js","mappings":"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","sources":["components/EventLineUp.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./EventLineUp.css\";\r\n// https://i.pinimg.com/1200x/db/e2/b6/dbe2b6eeb24a7718c0397f901138cf0d.jpg\r\nconst events = [\r\n  { \r\n    title: \"Code Unlocked\", \r\n    description: \"Cryptic programming challenge testing logic, coding, and problem-solving skills.\", \r\n    color: \"#FF6B6B\", \r\n    image: \"https://i.pinimg.com/736x/5d/c6/db/5dc6db4cc96ae17513dad05ec9ff62ee.jpg\" \r\n  },\r\n  { \r\n    title: \"Think. Build. Create.\", \r\n    description: \"Two-stage hackathon with AI pitches, live finals, and surprise adaptability tests.\", \r\n    color: \"#4ECDC4\", \r\n    image: \"https://i.pinimg.com/1200x/06/c1/03/06c10303dffb586d5bac86f119dc781b.jpg\" \r\n  },\r\n  { \r\n    title: \"The Digital Playground\", \r\n    description: \"Online knockout gaming tournament testing teamwork, adaptability, and skill.\", \r\n    color: \"#FFD93D\", \r\n    image: \"https://i.pinimg.com/1200x/5c/45/a6/5c45a6b23447a2ad2755c0768fd9de46.jpg\" \r\n  },\r\n  { \r\n    title: \"Stories in Motion\", \r\n    description: \"Short film contest exploring tech and humanity with creative storytelling twists.\", \r\n    color: \"#6A5ACD\", \r\n    image: \"https://i.pinimg.com/736x/eb/36/3f/eb363f9c05cdd3653c23da0980524092.jpg\" \r\n  },\r\n  { \r\n    title: \"Lens on Life\", \r\n    description: \"Photography series capturing humanity and technology’s future through visuals.\", \r\n    color: \"#20B2AA\", \r\n    image: \"https://i.pinimg.com/736x/82/cd/bd/82cdbd706b93b0afa7c5f7c19898a4b8.jpg\" \r\n  },\r\n  { \r\n    title: \"Design for Impact\", \r\n    description: \"Poster design challenge sparking conversations on empathy and responsible tech.\", \r\n    color: \"#FF8C00\", \r\n    image: \"https://i.pinimg.com/1200x/2a/68/1d/2a681dc4a5e84e72d27cd5cd6b974bdb.jpg\" \r\n  },\r\n  { \r\n    title: \"Voices of Change\", \r\n    description: \"On-the-spot talks blending tech, ethics, and creativity into persuasive speeches.\", \r\n    color: \"#FF1493\", \r\n    image: \"https://i.pinimg.com/1200x/ec/86/3e/ec863e4edea157169949686e08507fc9.jpg\" \r\n  },\r\n  { \r\n    title: \"Human Dimensions\", \r\n    description: \"3D modeling contest showcasing tech’s role in shaping better human futures.\", \r\n    color: \"#32CD32\", \r\n    image: \"https://i.pinimg.com/736x/70/86/28/7086285e30da4d224fb6f1d679f7d8db.jpg\" \r\n  },\r\n  { \r\n    title: \"AidBots\", \r\n    description: \"Robotics challenge building disaster relief or assistive healthcare innovations.\", \r\n    color: \"#1E90FF\", \r\n    image: \"https://i.pinimg.com/1200x/44/d3/14/44d314c021dd33630aba32fe93265065.jpg\" \r\n  },\r\n];\r\n\r\nexport default function EventLineUp({onInfoClick}) {\r\n  const [current, setCurrent] = useState(0);\r\n  const [direction, setDirection] = useState(1);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const slideshowRef = useRef(null);\r\n  const intervalRef = useRef(null);\r\n\r\n  // Auto slide\r\n  const startAutoSlide = () => {\r\n    if (isHovered) return; // do not start if hovered\r\n    stopAutoSlide();\r\n    intervalRef.current = setInterval(() => {\r\n      setCurrent((prev) => (prev + 1) % events.length);\r\n    }, 3000);\r\n  };\r\n\r\n  const stopAutoSlide = () => {\r\n    if (intervalRef.current) clearInterval(intervalRef.current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    startAutoSlide();\r\n    return () => stopAutoSlide();\r\n  }, [direction, isHovered]);\r\n\r\n  // Dragging logic\r\n  useEffect(() => {\r\n    const slider = slideshowRef.current;\r\n    if (!slider) return;\r\n\r\n    let isDown = false;\r\n    let startX = 0;\r\n    let scrollLeft = 0;\r\n\r\n    const mouseDown = (e) => {\r\n      isDown = true;\r\n      startX = e.pageX || e.touches?.[0].pageX;\r\n      scrollLeft = slider.scrollLeft;\r\n      stopAutoSlide(); // pause while dragging\r\n    };\r\n\r\n    const mouseMove = (e) => {\r\n      if (!isDown) return;\r\n      e.preventDefault();\r\n      const x = e.pageX || e.touches?.[0].pageX;\r\n      const walk = (x - startX) * 1.2; // scroll speed\r\n      slider.scrollLeft = scrollLeft - walk;\r\n    };\r\n\r\n    const mouseUp = () => {\r\n      if (isDown) {\r\n        isDown = false;\r\n        startAutoSlide(); // resume auto\r\n      }\r\n    };\r\n\r\n    slider.addEventListener(\"mousedown\", mouseDown);\r\n    slider.addEventListener(\"mousemove\", mouseMove);\r\n    slider.addEventListener(\"mouseup\", mouseUp);\r\n    slider.addEventListener(\"mouseleave\", mouseUp);\r\n\r\n    // Touch support\r\n    slider.addEventListener(\"touchstart\", mouseDown);\r\n    slider.addEventListener(\"touchmove\", mouseMove);\r\n    slider.addEventListener(\"touchend\", mouseUp);\r\n\r\n    return () => {\r\n      slider.removeEventListener(\"mousedown\", mouseDown);\r\n      slider.removeEventListener(\"mousemove\", mouseMove);\r\n      slider.removeEventListener(\"mouseup\", mouseUp);\r\n      slider.removeEventListener(\"mouseleave\", mouseUp);\r\n      slider.removeEventListener(\"touchstart\", mouseDown);\r\n      slider.removeEventListener(\"touchmove\", mouseMove);\r\n      slider.removeEventListener(\"touchend\", mouseUp);\r\n    };\r\n  }, []);\r\n\r\n  // Keep current slide centered\r\n  useEffect(() => {\r\n    if (slideshowRef.current) {\r\n      const slideWidth = slideshowRef.current.children[0].offsetWidth + 10;\r\n      const offset = (slideshowRef.current.offsetWidth - slideWidth) / 2;\r\n      slideshowRef.current.style.transform = `translateX(${\r\n        -current * slideWidth + offset\r\n      }px)`;\r\n    }\r\n  }, [current]);\r\n\r\n  const goToPrev = () => {\r\n    setCurrent((prev) => (prev - 1 + events.length) % events.length);\r\n  };\r\n\r\n  const goToNext = () => {\r\n    setCurrent((prev) => (prev + 1) % events.length);\r\n  };\r\n\r\n  const handleMouseEnter = () => {\r\n    setIsHovered(true);\r\n    stopAutoSlide();\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setIsHovered(false);\r\n    startAutoSlide();\r\n  };\r\n\r\n  return (\r\n    <section className={`event-line-up${isHovered ? ' dark-background' : ''}`}>\r\n      <h1 className=\"eventlineup-heading\">EVENT LINE UP</h1>\r\n      <h5 className=\"eventlineup-des\">The complete line‑up at a glance</h5>\r\n      <div className=\"slideshow-wrapper\">\r\n        <button className=\"arrow left-arrow\" onClick={goToPrev}>\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M15 18L9 12L15 6\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n          </svg>\r\n        </button>\r\n        <div className=\"slideshow\" ref={slideshowRef}>\r\n          {events.map((event, index) => (\r\n            <div\r\n              key={index}\r\n              className={`slide ${index === current ? \"active\" : \"inactive\"}${index === current && isHovered ? \" hovered\" : \"\"}`}\r\n              style={{ backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.57), rgba(0, 0, 0, 0.7)), url(${event.image})`, backgroundSize: 'cover', backgroundRepeat: 'no-repeat', backgroundPosition: 'center' }}\r\n              onMouseEnter={index === current ? handleMouseEnter : undefined}\r\n              onMouseLeave={index === current ? handleMouseLeave : undefined}\r\n            >\r\n              <h3>{event.title}</h3>\r\n              <p>{event.description}</p>\r\n                          <button\r\n              className=\"info-button\"\r\n              onClick={() => onInfoClick(index)} // send event index\r\n            >\r\n              info →\r\n            </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button className=\"arrow right-arrow\" onClick={goToNext}>\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M9 18L15 12L9 6\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n}\r\n"],"names":["events","title","description","color","image","EventLineUp","_ref","onInfoClick","current","setCurrent","useState","direction","setDirection","isHovered","setIsHovered","slideshowRef","useRef","intervalRef","startAutoSlide","stopAutoSlide","setInterval","prev","length","clearInterval","useEffect","slider","isDown","startX","scrollLeft","mouseDown","e","_e$touches","pageX","touches","mouseMove","_e$touches2","preventDefault","walk","mouseUp","addEventListener","removeEventListener","slideWidth","children","offsetWidth","offset","style","transform","concat","handleMouseEnter","handleMouseLeave","_jsxs","className","_jsx","onClick","goToPrev","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ref","map","event","index","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","onMouseEnter","undefined","onMouseLeave","goToNext"],"sourceRoot":""}