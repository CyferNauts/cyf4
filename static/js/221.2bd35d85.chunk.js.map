{"version":3,"file":"static/js/221.2bd35d85.chunk.js","mappings":"qIAEA,SAASA,EAAcC,GACrB,IAAIC,ECFN,SAAqBD,EAAGE,GACtB,GAAI,WAAY,OAAQF,KAAOA,EAAG,OAAOA,EACzC,IAAIG,EAAIH,EAAEI,OAAOC,aACjB,QAAI,IAAWF,EAAG,CAChB,IAAIF,EAAIE,EAAEG,KAAKN,EAAGE,GAAK,WACvB,GAAI,WAAY,OAAQD,GAAI,OAAOA,EACnC,MAAM,IAAIM,UAAU,+CACtB,CACA,OAAQ,WAAaL,EAAIM,OAASC,QAAQT,EAC5C,CDPUK,CAAYL,EAAG,UACvB,MAAO,WAAY,OAAQC,GAAKA,EAAIA,EAAI,EAC1C,CEJA,SAASS,EAAgBP,EAAGD,EAAGF,GAC7B,OAAQE,EAAIH,EAAcG,MAAOC,EAAIQ,OAAOC,eAAeT,EAAGD,EAAG,CAC/DW,MAAOb,EACPc,YAAY,EACZC,cAAc,EACdC,UAAU,IACPb,EAAED,GAAKF,EAAGG,CACjB,CCPA,SAASc,EAAQd,EAAGD,GAClB,IAAIF,EAAIW,OAAOO,KAAKf,GACpB,GAAIQ,OAAOQ,sBAAuB,CAChC,IAAIC,EAAIT,OAAOQ,sBAAsBhB,GACrCD,IAAMkB,EAAIA,EAAEC,OAAO,SAAUnB,GAC3B,OAAOS,OAAOW,yBAAyBnB,EAAGD,GAAGY,UAC/C,IAAKd,EAAEuB,KAAKC,MAAMxB,EAAGoB,EACvB,CACA,OAAOpB,CACT,CACA,SAASyB,EAAetB,GACtB,IAAK,IAAID,EAAI,EAAGA,EAAIwB,UAAUC,OAAQzB,IAAK,CACzC,IAAIF,EAAI,MAAQ0B,UAAUxB,GAAKwB,UAAUxB,GAAK,CAAC,EAC/CA,EAAI,EAAIe,EAAQN,OAAOX,IAAI,GAAI4B,QAAQ,SAAU1B,GAC/C,EAAeC,EAAGD,EAAGF,EAAEE,GACzB,GAAKS,OAAOkB,0BAA4BlB,OAAOmB,iBAAiB3B,EAAGQ,OAAOkB,0BAA0B7B,IAAMiB,EAAQN,OAAOX,IAAI4B,QAAQ,SAAU1B,GAC7IS,OAAOC,eAAeT,EAAGD,EAAGS,OAAOW,yBAAyBtB,EAAGE,GACjE,EACF,CACA,OAAOC,CACT,C,+CClBA,MAAM4B,E,QAA4BC,EAAYC,EAAAA,gBAAkBC,EAAAA,S,kCCGhE,MAAMC,GAAsBC,E,QAAAA,eAAc,CACtCC,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,S,kCCNnB,MAAMC,GAAqBL,E,QAAAA,eAAc,CAAC,E,iBCH1C,SAASM,EAAQtB,GAGf,OAAOsB,EAAU,mBAAqBtC,QAAU,iBAAmBA,OAAOuC,SAAW,SAAUvB,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAK,mBAAqBhB,QAAUgB,EAAEwB,cAAgBxC,QAAUgB,IAAMhB,OAAOyC,UAAY,gBAAkBzB,CACpH,EAAGsB,EAAQtB,EACb,C,2ICGA,MAAM0B,UAAwBC,EAAAA,UAC1BC,uBAAAA,CAAwBC,GACpB,MAAMC,EAAUC,KAAKC,MAAMC,SAASC,QACpC,GAAIJ,GAAWD,EAAUM,YAAcJ,KAAKC,MAAMG,UAAW,CACzD,MAAMC,EAASN,EAAQO,aACjBC,GAAcC,EAAAA,EAAAA,GAAcH,IAC5BA,EAAOI,aACP,EACAC,EAAOV,KAAKC,MAAMU,QAAQR,QAChCO,EAAKE,OAASb,EAAQc,cAAgB,EACtCH,EAAKI,MAAQf,EAAQU,aAAe,EACpCC,EAAKK,IAAMhB,EAAQiB,UACnBN,EAAKO,KAAOlB,EAAQmB,WACpBR,EAAKS,MAAQZ,EAAcG,EAAKI,MAAQJ,EAAKO,IACjD,CACA,OAAO,IACX,CAIAG,kBAAAA,GAAuB,CACvBC,MAAAA,GACI,OAAOrB,KAAKC,MAAMqB,QACtB,EAEJ,SAASC,EAAQC,GAAyC,IAAxC,SAAEF,EAAQ,UAAElB,EAAS,QAAEqB,EAAO,KAAEC,GAAMF,EACpD,MAAMG,GAAKC,EAAAA,EAAAA,SACLC,GAAMC,EAAAA,EAAAA,QAAO,MACbpB,GAAOoB,EAAAA,EAAAA,QAAO,CAChBhB,MAAO,EACPF,OAAQ,EACRG,IAAK,EACLE,KAAM,EACNE,MAAO,KAEL,MAAEY,IAAUC,EAAAA,EAAAA,YAAWhD,EAAAA,GAsC7B,OA5BAiD,EAAAA,EAAAA,oBAAmB,KACf,MAAM,MAAEnB,EAAK,OAAEF,EAAM,IAAEG,EAAG,KAAEE,EAAI,MAAEE,GAAUT,EAAKP,QACjD,GAAIC,IAAcyB,EAAI1B,UAAYW,IAAUF,EACxC,OACJ,MAAMsB,EAAgB,SAAZT,EAAqB,SAAHU,OAAYlB,GAAI,UAAAkB,OAAehB,GAC3DU,EAAI1B,QAAQiC,QAAQC,YAAcV,EAClC,MAAMW,EAAQC,SAASC,cAAc,SACjCT,IACAO,EAAMP,MAAQA,GAClB,MAAM1B,EAAa,OAAJqB,QAAI,IAAJA,EAAAA,EAAQa,SAASE,KAahC,OAZApC,EAAOqC,YAAYJ,GACfA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCAADT,OACDR,EAAE,yEAAAQ,OAEdrB,EAAK,wCAAAqB,OACJvB,EAAM,gCAAAuB,OACdD,EAAC,qCAAAC,OACIpB,EAAG,0CAIP,KACCV,EAAOwC,SAASP,IAChBjC,EAAOyC,YAAYR,KAG5B,CAAClC,KACI2C,EAAAA,EAAAA,KAAIpD,EAAiB,CAAES,UAAWA,EAAWF,SAAU2B,EAAKlB,QAASD,EAAMY,SAAU1B,EAAAA,aAAmB0B,EAAU,CAAEO,SAChI,CC7EA,MAAMmB,EAAgBxB,IAA0G,IAAzG,SAAEF,EAAQ,QAAE2B,EAAO,UAAE7C,EAAS,eAAE8C,EAAc,OAAEC,EAAM,sBAAEC,EAAqB,KAAEC,EAAI,QAAE5B,EAAO,KAAEC,GAAMF,EACvH,MAAM8B,GAAmBC,EAAAA,EAAAA,GAAYC,GAC/B7B,GAAKC,EAAAA,EAAAA,SACX,IAAI6B,GAAkB,EAClBC,GAAUC,EAAAA,EAAAA,SAAQ,KAClBF,GAAkB,EACX,CACH9B,KACAsB,UACA7C,YACA+C,SACAD,eAAiBU,IACbN,EAAiBO,IAAID,GAAS,GAC9B,IAAK,MAAME,KAAcR,EAAiBS,SACtC,IAAKD,EACD,OAERZ,GAAkBA,KAEtBc,SAAWJ,IACPN,EAAiBO,IAAID,GAAS,GACvB,IAAMN,EAAiBW,OAAOL,MAG9C,CAACxD,EAAWkD,EAAkBJ,IAyBjC,OAnBIE,GAAyBK,IACzBC,GAAOQ,EAAAA,EAAAA,GAAA,GAAQR,KAEnBC,EAAAA,EAAAA,SAAQ,KACJL,EAAiB7E,QAAQ,CAAC0F,EAAGC,IAAQd,EAAiBO,IAAIO,GAAK,KAChE,CAAChE,IAKJR,EAAAA,UAAgB,MACXQ,IACIkD,EAAiB5C,MAClBwC,GACAA,KACL,CAAC9C,IACS,cAATiD,IACA/B,GAAYyB,EAAAA,EAAAA,KAAIxB,EAAU,CAAEnB,UAAWA,EAAWqB,QAASA,EAASC,KAAMA,EAAMJ,SAAUA,MAEtFyB,EAAAA,EAAAA,KAAIsB,EAAAA,EAAgBC,SAAU,CAAE5G,MAAOgG,EAASpC,SAAUA,KAEtE,SAASkC,IACL,OAAO,IAAIe,GACf,C,cC3DA,MAAMC,EAAeC,GAAUA,EAAML,KAAO,GAC5C,SAASM,EAAapD,GAClB,MAAMqD,EAAW,GAMjB,OAJAC,EAAAA,SAASnG,QAAQ6C,EAAWmD,KACpBI,EAAAA,EAAAA,gBAAeJ,IACfE,EAASvG,KAAKqG,KAEfE,CACX,CCgCA,MAAMG,EAAkBtD,IAAkJ,IAAjJ,SAAEF,EAAQ,OAAE6B,EAAM,QAAEF,GAAU,EAAI,eAAEC,EAAc,sBAAEE,GAAwB,EAAI,KAAEC,EAAO,OAAM,UAAE0B,GAAY,EAAK,QAAEtD,EAAU,OAAM,KAAEC,GAAMF,EACjK,MAAOwD,EAAiBC,IAAgBC,EAAAA,EAAAA,IAAYH,GAK9CI,GAAkBxB,EAAAA,EAAAA,SAAQ,IAAMe,EAAapD,GAAW,CAACA,IAKzD8D,EAAcL,IAAcC,EAAkB,GAAKG,EAAgBE,IAAIb,GAIvEc,GAAkBxD,EAAAA,EAAAA,SAAO,GAMzByD,GAAyBzD,EAAAA,EAAAA,QAAOqD,GAIhCK,GAAejC,EAAAA,EAAAA,GAAY,IAAM,IAAIgB,MAKpCkB,EAAgBC,IAAqBC,EAAAA,EAAAA,UAASR,IAC9CS,EAAkBC,IAAuBF,EAAAA,EAAAA,UAASR,IACzDvG,EAAAA,EAAAA,GAA0B,KACtB0G,EAAgBnF,SAAU,EAC1BoF,EAAuBpF,QAAUgF,EAIjC,IAAK,IAAIrI,EAAI,EAAGA,EAAI8I,EAAiBpH,OAAQ1B,IAAK,CAC9C,MAAMsH,EAAMI,EAAYoB,EAAiB9I,IACpCsI,EAAYU,SAAS1B,GAMtBoB,EAAavB,OAAOG,IALU,IAA1BoB,EAAaO,IAAI3B,IACjBoB,EAAa3B,IAAIO,GAAK,EAMlC,GACD,CAACwB,EAAkBR,EAAY5G,OAAQ4G,EAAYY,KAAK,OAC3D,MAAMC,EAAkB,GACxB,GAAId,IAAoBM,EAAgB,CACpC,IAAIS,EAAe,IAAIf,GAKvB,IAAK,IAAIrI,EAAI,EAAGA,EAAI8I,EAAiBpH,OAAQ1B,IAAK,CAC9C,MAAM2H,EAAQmB,EAAiB9I,GACzBsH,EAAMI,EAAYC,GACnBW,EAAYU,SAAS1B,KACtB8B,EAAaC,OAAOrJ,EAAG,EAAG2H,GAC1BwB,EAAgB7H,KAAKqG,GAE7B,CAcA,MATa,SAATpB,GAAmB4C,EAAgBzH,SACnC0H,EAAeD,GAEnBJ,EAAoBnB,EAAawB,IACjCR,EAAkBP,GAKX,IACX,CAWA,MAAM,YAAEiB,IAAgBpE,EAAAA,EAAAA,YAAW1C,EAAAA,GACnC,OAAQyD,EAAAA,EAAAA,KAAIsD,EAAAA,SAAU,CAAE/E,SAAUsE,EAAiBP,IAAKZ,IAChD,MAAML,EAAMI,EAAYC,GAClBrE,IAAY2E,IAAcC,KAE1BG,IAAoBS,GAClBR,EAAYU,SAAS1B,IAoB7B,OAAQrB,EAAAA,EAAAA,KAAIC,EAAe,CAAE5C,UAAWA,EAAW6C,UAAUqC,EAAgBnF,UAAW8C,SAC9EqD,EACOnD,OAAQA,EAAQC,sBAAuBA,EAAuBC,KAAMA,EAAM3B,KAAMA,EAAMwB,eAAgB9C,OAAYkG,EArBpHC,KACX,IAAIf,EAAagB,IAAIpC,GAIjB,OAHAoB,EAAa3B,IAAIO,GAAK,GAK1B,IAAIqC,GAAsB,EAC1BjB,EAAa/G,QAASiI,IACbA,IACDD,GAAsB,KAE1BA,IACW,OAAXL,QAAW,IAAXA,GAAAA,IACAP,EAAoBN,EAAuBpF,SAC3C4E,IAAyB,OAAZE,QAAY,IAAZA,GAAAA,KACb/B,GAAkBA,MAK6HzB,QAASA,EAASH,SAAUmD,GAASL,O,iBChKxM,SAASuC,EAAyB3J,EAAGH,GACnC,GAAI,MAAQG,EAAG,MAAO,CAAC,EACvB,IAAIiB,EACFlB,EACAD,ECLJ,SAAuCC,EAAGC,GACxC,GAAI,MAAQD,EAAG,MAAO,CAAC,EACvB,IAAIF,EAAI,CAAC,EACT,IAAK,IAAI+J,KAAK7J,EAAG,GAAI,CAAC,EAAE8J,eAAe1J,KAAKJ,EAAG6J,GAAI,CACjD,IAAK,IAAM5J,EAAE8J,QAAQF,GAAI,SACzB/J,EAAE+J,GAAK7J,EAAE6J,EACX,CACA,OAAO/J,CACT,CDHQ,CAA6BG,EAAGH,GACtC,GAAIW,OAAOQ,sBAAuB,CAChC,IAAI4I,EAAIpJ,OAAOQ,sBAAsBhB,GACrC,IAAKD,EAAI,EAAGA,EAAI6J,EAAEpI,OAAQzB,IAAKkB,EAAI2I,EAAE7J,IAAK,IAAMF,EAAEiK,QAAQ7I,IAAM,CAAC,EAAE8I,qBAAqB5J,KAAKH,EAAGiB,KAAOnB,EAAEmB,GAAKjB,EAAEiB,GAClH,CACA,OAAOnB,CACT,C,kDEXA,MAAM+B,EAA8B,qBAAXmI,M,gDCSzB,SAASzD,EAAY0D,GACjB,MAAMpF,GAAMC,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBD,EAAI1B,UACJ0B,EAAI1B,QAAU8G,KAEXpF,EAAI1B,OACf,C,iDCZA,MAAM+G,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAA+B,KAAO,IAAIC,IAAIF,GAAf,GCzB/BG,EAAYC,GAAe,IAANA,EAAaC,KAAKC,GACvCC,EAAUC,IACZ,MAAMC,EAAQN,EAASE,KAAKK,MAAMF,EAAE,GAAIA,EAAE,KAC1C,OAAOG,EAAYF,IAEjBG,EAAkB,CACpB5F,EAAG,EACH6F,EAAG,EACHC,WAAY,EACZC,WAAY,EACZC,OAAQ,EACRC,OAAQ,EACRC,MAAQV,IAAOH,KAAKc,IAAIX,EAAE,IAAMH,KAAKc,IAAIX,EAAE,KAAO,EAClDD,SACAa,QAASb,EACTc,MAAQb,GAAML,EAASE,KAAKiB,KAAKd,EAAE,KACnCe,MAAQf,GAAML,EAASE,KAAKiB,KAAKd,EAAE,KACnCgB,KAAOhB,IAAOH,KAAKc,IAAIX,EAAE,IAAMH,KAAKc,IAAIX,EAAE,KAAO,GAE/CG,EAAeF,KACjBA,GAAgB,KACJ,IACRA,GAAS,KACNA,GAGLO,EAAUR,GAAMH,KAAKoB,KAAKjB,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjDS,EAAUT,GAAMH,KAAKoB,KAAKjB,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjDkB,EAAkB,CACpB1G,EAAG,GACH6F,EAAG,GACHc,EAAG,GACHb,WAAY,GACZC,WAAY,GACZa,WAAY,GACZZ,SACAC,SACAC,MAAQV,IAAOQ,EAAOR,GAAKS,EAAOT,IAAM,EACxCqB,QAAUrB,GAAMG,EAAYR,EAASE,KAAKK,MAAMF,EAAE,GAAIA,EAAE,MACxDsB,QAAUtB,GAAMG,EAAYR,EAASE,KAAKK,OAAOF,EAAE,GAAIA,EAAE,MACzDY,QAfYb,EAgBZA,OAhBYA,EAiBZc,MAAQb,GAAML,EAASE,KAAKiB,KAAKd,EAAE,KACnCe,MAAQf,GAAML,EAASE,KAAKiB,KAAKd,EAAE,KACnCgB,KAAOhB,IAAOH,KAAKc,IAAIX,EAAE,IAAMH,KAAKc,IAAIX,EAAE,KAAO,GAErD,SAASuB,EAAsBC,GAC3B,OAAOA,EAAKpD,SAAS,SAAW,EAAI,CACxC,CACA,SAASqD,EAAwBC,EAAWF,GACxC,IAAKE,GAA2B,SAAdA,EACd,OAAOH,EAAsBC,GAEjC,MAAMG,EAAgBD,EAAUE,MAAM,gGACtC,IAAIC,EACAD,EACJ,GAAID,EACAE,EAAUX,EACVU,EAAQD,MAEP,CACD,MAAMG,EAAgBJ,EAAUE,MAAM,8FACtCC,EAAUzB,EACVwB,EAAQE,CACZ,CACA,IAAKF,EACD,OAAOL,EAAsBC,GAEjC,MAAMO,EAAcF,EAAQL,GACtBnF,EAASuF,EAAM,GAAGI,MAAM,KAAKrE,IAAIsE,GACvC,MAA8B,oBAAhBF,EACRA,EAAY1F,GACZA,EAAO0F,EACjB,CAKA,SAASE,EAAyBjM,GAC9B,OAAOkM,WAAWlM,EAAMmM,OAC5B,CChFA,MAAMC,EAAyBC,GAAW3F,GAAuB,kBAARA,GAAoBA,EAAI4F,WAAWD,GACtFE,EACQH,EAAsB,MAC9BI,EACQJ,EAAsB,UAC9BK,EAAsBzM,KACAwM,EAAsBxM,IAIvC0M,EAAuBC,KAAK3M,EAAMgM,MAAM,MAAM,GAAGG,QAEtDO,EAAyB,+qBCP/B,SAASE,EAAuB9I,GAAgC,IAA/B,IAAET,EAAG,KAAEE,EAAI,MAAEE,EAAK,OAAEoJ,GAAS/I,EAC1D,MAAO,CACHU,EAAG,CAAEsI,IAAKvJ,EAAMwJ,IAAKtJ,GACrB4G,EAAG,CAAEyC,IAAKzJ,EAAK0J,IAAKF,GAE5B,CCWA,MAAMG,EAAYA,CAACC,EAAMC,EAAIC,IAClBF,GAAQC,EAAKD,GAAQE,ECtBhC,SAASC,EAAgB1C,GACrB,YAAiB9B,IAAV8B,GAAiC,IAAVA,CAClC,CACA,SAAS2C,EAAQvJ,GAA4B,IAA3B,MAAE4G,EAAK,OAAEF,EAAM,OAAEC,GAAQ3G,EACvC,OAASsJ,EAAgB1C,KACpB0C,EAAgB5C,KAChB4C,EAAgB3C,EACzB,CACA,SAAS6C,EAAajH,GAClB,OAAQgH,EAAShH,IACbkH,EAAelH,IACfA,EAAO8E,GACP9E,EAAO0D,QACP1D,EAAOgF,SACPhF,EAAOiF,SACPjF,EAAOwE,OACPxE,EAAO0E,KACf,CACA,SAASwC,EAAelH,GACpB,OAAOmH,EAAcnH,EAAO7B,IAAMgJ,EAAcnH,EAAOgE,EAC3D,CACA,SAASmD,EAAcxN,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCjBA,SAASyN,EAAWC,EAAOhD,EAAOiD,GAG9B,OAAOA,EADQjD,GADYgD,EAAQC,EAGvC,CAIA,SAASC,EAAgBF,EAAOG,EAAWnD,EAAOiD,EAAaG,GAI3D,YAHiBlF,IAAbkF,IACAJ,EAAQD,EAAWC,EAAOI,EAAUH,IAEjCF,EAAWC,EAAOhD,EAAOiD,GAAeE,CACnD,CAIA,SAASE,EAAeC,GAAuD,IAAjDH,EAAShN,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EAAG6J,EAAK7J,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EAAG8M,EAAW9M,UAAAC,OAAA,EAAAD,UAAA,QAAA+H,EAAEkF,EAAQjN,UAAAC,OAAA,EAAAD,UAAA,QAAA+H,EACzEoF,EAAKlB,IAAMc,EAAgBI,EAAKlB,IAAKe,EAAWnD,EAAOiD,EAAaG,GACpEE,EAAKjB,IAAMa,EAAgBI,EAAKjB,IAAKc,EAAWnD,EAAOiD,EAAaG,EACxE,CAIA,SAASG,EAAcC,EAAGpK,GAAY,IAAV,EAAEU,EAAC,EAAE6F,GAAGvG,EAChCiK,EAAeG,EAAI1J,EAAGA,EAAEqJ,UAAWrJ,EAAEkG,MAAOlG,EAAEmJ,aAC9CI,EAAeG,EAAI7D,EAAGA,EAAEwD,UAAWxD,EAAEK,MAAOL,EAAEsD,YAClD,CACA,MAAMQ,EAAsB,cACtBC,EAAsB,gBA6D5B,SAASC,EAAcL,EAAMM,GACzBN,EAAKlB,IAAMkB,EAAKlB,IAAMwB,EACtBN,EAAKjB,IAAMiB,EAAKjB,IAAMuB,CAC1B,CAMA,SAASC,EAAcP,EAAMQ,EAAeC,EAAWX,GAA4B,IAAlBY,EAAU7N,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,GAG1EkN,EAAeC,EAAMQ,EAAeC,EAFhBzB,EAAUgB,EAAKlB,IAAKkB,EAAKjB,IAAK2B,GAEUZ,EAChE,CAIA,SAASa,EAAaT,EAAKxC,GACvB6C,EAAcL,EAAI1J,EAAGkH,EAAUlH,EAAGkH,EAAUlB,OAAQkB,EAAUhB,MAAOgB,EAAUkD,SAC/EL,EAAcL,EAAI7D,EAAGqB,EAAUrB,EAAGqB,EAAUjB,OAAQiB,EAAUhB,MAAOgB,EAAUmD,QACnF,CCjHA,SAASC,EAAmBC,EAAUC,GAClC,OAAOpC,EJeX,SAA4Bc,EAAOsB,GAC/B,IAAKA,EACD,OAAOtB,EACX,MAAMuB,EAAUD,EAAe,CAAExK,EAAGkJ,EAAMnK,KAAM8G,EAAGqD,EAAMrK,MACnD6L,EAAcF,EAAe,CAAExK,EAAGkJ,EAAMjK,MAAO4G,EAAGqD,EAAMb,SAC9D,MAAO,CACHxJ,IAAK4L,EAAQ5E,EACb9G,KAAM0L,EAAQzK,EACdqI,OAAQqC,EAAY7E,EACpB5G,MAAOyL,EAAY1K,EAE3B,CI1BmC2K,CAAmBJ,EAASK,wBAAyBJ,GACxF,CCHA,MAAMK,EAAiB,IAAI3F,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,YACGF,I,WCTP,MAAM8F,EAAQA,CAACxC,EAAKC,EAAK/C,IACjBA,EAAI+C,EACGA,EACP/C,EAAI8C,EACGA,EACJ9C,ECHLuF,EAAS,CACX5C,KAAO3C,GAAmB,kBAANA,EACpBwF,MAAOtD,WACPR,UAAY1B,GAAMA,GAEhByF,GAAKjJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ+I,GAAM,IACT7D,UAAY1B,GAAMsF,EAAM,EAAG,EAAGtF,KAE5BU,GAAKlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ+I,GAAM,IACTG,QAAS,ICZPC,EAAkBC,IAAI,CACxBjD,KAAO3C,GAAmB,kBAANA,GAAkBA,EAAE6F,SAASD,IAAiC,IAAxB5F,EAAEgC,MAAM,KAAKlL,OACvE0O,MAAOtD,WACPR,UAAY1B,GAAC,GAAAvF,OAAQuF,GAACvF,OAAGmL,KAEvBE,EAAwBH,EAAe,OACvCI,EAAwBJ,EAAe,KACvCK,EAAmBL,EAAe,MAClCM,EAAmBN,EAAe,MAClCO,EAAmBP,EAAe,MAClCQ,EAAmC,MAAC3J,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EACnCuJ,GAAO,IACVP,MAAQxF,GAAM+F,EAAQP,MAAMxF,GAAK,IACjC0B,UAAY1B,GAAM+F,EAAQrE,UAAc,IAAJ1B,KAHC,GCRnCoG,EAAiBpG,GAAOqG,GAASA,EAAK1D,KAAK3C,GCK3CsG,EAAsB,CAACf,EAAQS,EAAID,EAASD,EAASI,EAAID,ECLlD,CACTtD,KAAO3C,GAAY,SAANA,EACbwF,MAAQxF,GAAMA,IDOZuG,EAA0BvG,GAAMsG,EAAoBE,KAAKJ,EAAcpG,IET7E,MAAMyG,GAAqBzG,GAAM,uCAA+B2C,KAAK3C,GCS/D0G,GAEN,oFASA,SAASC,GAAiBlO,EAASJ,GAAoB,IAAXuO,EAAK/P,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EACnB,yDAAF4D,OAA2DhC,EAAO,wDAC7F,MAAO4J,EAAOwE,GAVlB,SAA0BpO,GACtB,MAAMmJ,EAAQ8E,GAAsBI,KAAKrO,GACzC,IAAKmJ,EACD,MAAO,CAAC,GACZ,MAAO,CAAEmF,EAAQC,EAAQH,GAAYjF,EACrC,MAAO,CAAC,KAADnH,OAAY,OAANsM,QAAM,IAANA,EAAAA,EAAUC,GAAUH,EACrC,CAI8BI,CAAiBxO,GAE3C,IAAK4J,EACD,OAEJ,MAAM6E,EAAW5H,OAAO6H,iBAAiB9O,GAAS+O,iBAAiB/E,GACnE,GAAI6E,EAAU,CACV,MAAMG,EAAUH,EAAS/E,OACzB,OAAOsE,GAAkBY,GAAWnF,WAAWmF,GAAWA,CAC9D,CACA,OAAO5E,EAAmBoE,GACpBF,GAAiBE,EAAUxO,EAASuO,EAAQ,GAC5CC,CACV,CCjCA,MAAMS,GAAiBtH,GAAMA,IAAMuF,GAAUvF,IAAMgG,EAC7CuB,GAAgB,IAAI7H,IAAI,CAAC,IAAK,IAAK,MACnC8H,GAAgChI,EAAmBhJ,OAAQkG,IAAS6K,GAAczI,IAAIpC,IAY5F,MAAM+K,GAAmB,CAErBrO,MAAOA,CAAAU,EAAA4N,KAAA,IAAC,EAAElN,GAAGV,GAAE,YAAE6N,EAAc,IAAG,aAAEC,EAAe,KAAKF,EAAA,OAAKlN,EAAEuI,IAAMvI,EAAEsI,IAAMZ,WAAWyF,GAAezF,WAAW0F,IAClH1O,OAAQA,CAAA2O,EAAAC,KAAA,IAAC,EAAEzH,GAAGwH,GAAE,WAAEE,EAAa,IAAG,cAAEC,EAAgB,KAAKF,EAAA,OAAKzH,EAAE0C,IAAM1C,EAAEyC,IAAMZ,WAAW6F,GAAc7F,WAAW8F,IAClH3O,IAAKA,CAAC4O,EAAKC,KAAA,IAAE,IAAE7O,GAAK6O,EAAA,OAAKhG,WAAW7I,IACpCE,KAAMA,CAAC0O,EAAKE,KAAA,IAAE,KAAE5O,GAAM4O,EAAA,OAAKjG,WAAW3I,IACtCsJ,OAAQA,CAAAuF,EAAAC,KAAA,IAAC,EAAEhI,GAAG+H,GAAE,IAAE/O,GAAKgP,EAAA,OAAKnG,WAAW7I,IAAQgH,EAAE0C,IAAM1C,EAAEyC,MACzDrJ,MAAOA,CAAA6O,EAAAC,KAAA,IAAC,EAAE/N,GAAG8N,GAAE,KAAE/O,GAAMgP,EAAA,OAAKrG,WAAW3I,IAASiB,EAAEuI,IAAMvI,EAAEsI,MAE1DtI,EAAGA,CAACyN,EAAKO,KAAA,IAAE,UAAE9G,GAAW8G,EAAA,OAAK/G,EAAwBC,EAAW,MAChErB,EAAGA,CAAC4H,EAAKQ,KAAA,IAAE,UAAE/G,GAAW+G,EAAA,OAAKhH,EAAwBC,EAAW,OAGpE+F,GAAiBnH,WAAamH,GAAiBjN,EAC/CiN,GAAiBlH,WAAakH,GAAiBpH,EChC/C,MAAMqI,GAAQC,GAAQA,ECDhBC,GAAqB,CAAC,ECAtBC,GAAa,CACf,QACA,OACA,mBACA,YACA,SACA,YACA,SACA,cCREC,GAAc,CAChB9S,MAAO,KACP+S,qBAAsB,MCG1B,SAASC,GAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAMC,EAAQ,CACVC,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZC,EAAmBA,IAAON,GAAe,EACzCO,EAAQb,GAAWc,OAAO,CAACC,EAAKlN,KAClCkN,EAAIlN,GCbZ,SAA0ByM,EAAcU,GAKpC,IAAIC,EAAY,IAAIpK,IAChBqK,EAAY,IAAIrK,IAKhB8J,GAAe,EACfQ,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QACxB,IAAIC,EAAkB,CAClBb,MAAO,EACPC,UAAW,EACXC,cAAc,GAEdY,EAAW,EACf,SAASC,EAAgBC,GACjBL,EAAYnL,IAAIwL,KAChBC,EAAKC,SAASF,GACdnB,KAEJiB,IACAE,EAASH,EACb,CACA,MAAMI,EAAO,CAITC,SAAU,SAACF,GACP,MACMG,EAFuC5T,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,IAAAA,UAAA,IACN2S,EACLM,EAAYC,EAK9C,OAP0BlT,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,IAAAA,UAAA,IAItBoT,EAAYS,IAAIJ,GACfG,EAAM3L,IAAIwL,IACXG,EAAMC,IAAIJ,GACPA,CACX,EAIAK,OAASL,IACLP,EAAUxN,OAAO+N,GACjBL,EAAY1N,OAAO+N,IAKvBM,QAAUC,IACNV,EAAkBU,EAMdrB,EACAQ,GAAiB,GAGrBR,GAAe,GACdM,EAAWC,GAAa,CAACA,EAAWD,GAErCA,EAAU/S,QAAQsT,GAIdR,GAAYf,GAAY9S,OACxB8S,GAAY9S,MAAM8U,UAAUjB,GAAUnT,KAAK0T,GAE/CA,EAAW,EAGXN,EAAUiB,QACVvB,GAAe,EACXQ,IACAA,GAAiB,EACjBO,EAAKK,QAAQC,OAIzB,OAAON,CACX,CD1EmBS,CAAiBvB,EAAkBP,EAAiBxM,OAAMkC,GAC9DgL,GACR,CAAC,IACE,MAAEqB,EAAK,KAAEC,EAAI,iBAAEC,EAAgB,UAAEC,EAAS,OAAEC,EAAM,UAAEC,EAAS,OAAE3R,EAAM,WAAE4R,GAAgB7B,EACvF8B,EAAeA,KACjB,MAAMjC,EAAYX,GAAmB6C,gBAC/BpC,EAAME,UACNmC,YAAYC,MAClBxC,GAAe,EACVP,GAAmB6C,kBACpBpC,EAAMC,MAAQF,EACR,IAAO,GACPvJ,KAAKkD,IAAIlD,KAAKiD,IAAIyG,EAAYF,EAAME,UAvBnC,IAuB2D,IAEtEF,EAAME,UAAYA,EAClBF,EAAMG,cAAe,EAErByB,EAAML,QAAQvB,GACd6B,EAAKN,QAAQvB,GACb8B,EAAiBP,QAAQvB,GACzB+B,EAAUR,QAAQvB,GAClBgC,EAAOT,QAAQvB,GACfiC,EAAUV,QAAQvB,GAClB1P,EAAOiR,QAAQvB,GACfkC,EAAWX,QAAQvB,GACnBA,EAAMG,cAAe,EACjBL,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBuC,KAUpBhB,EAAW3B,GAAWc,OAAO,CAACC,EAAKlN,KACrC,MAAM6N,EAAOb,EAAMhN,GAMnB,OALAkN,EAAIlN,GAAO,SAACkO,GAAkD,IAAzCgB,EAAS/U,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,IAAAA,UAAA,GAAUgV,EAAShV,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,IAAAA,UAAA,GAG7C,OAFKsS,IATTA,GAAe,EACfC,GAAoB,EACfC,EAAMG,cACPP,EAAkBuC,IAQXjB,EAAKC,SAASI,EAASgB,EAAWC,EAC7C,EACOjC,GACR,CAAC,GAMJ,MAAO,CAAEY,WAAUG,OALHC,IACZ,IAAK,IAAIxV,EAAI,EAAGA,EAAIyT,GAAW/R,OAAQ1B,IACnCsU,EAAMb,GAAWzT,IAAIuV,OAAOC,IAGTvB,QAAOK,QACtC,CEjEA,MAAQc,SAAUsB,GAAOnB,OAAQoB,GAAa1C,MAAOwB,GAAWnB,MAAOsC,IAAgChD,GAAqD,qBAA1BiD,sBAAwCA,sBAAwBvD,IAAM,GCClMwD,GAAY,IAAIxM,IACtB,IAAIyM,IAAc,EACdC,IAAsB,EACtBC,IAAW,EACf,SAASC,KACL,GAAIF,GAAqB,CACrB,MAAMG,EAAqBC,MAAMvJ,KAAKiJ,IAAW1V,OAAQiW,GAAaA,EAASC,kBACzEC,EAAoB,IAAIjN,IAAI6M,EAAmB5O,IAAK8O,GAAaA,EAASpU,UAC1EuU,EAAsB,IAAI/P,IAKhC8P,EAAkB5V,QAASsB,IACvB,MAAMwU,ERVlB,SAAyCC,GACrC,MAAMD,EAAoB,GAQ1B,OAPArF,GAA8BzQ,QAAS2F,IACnC,MAAM1G,EAAQ8W,EAAcC,SAASrQ,QACvBkC,IAAV5I,IACA6W,EAAkBnW,KAAK,CAACgG,EAAK1G,EAAMqI,QACnCrI,EAAMmG,IAAIO,EAAI4F,WAAW,SAAW,EAAI,MAGzCuK,CACX,CQAsCG,CAAgC3U,GACrDwU,EAAkB/V,SAEvB8V,EAAoBzQ,IAAI9D,EAASwU,GACjCxU,EAAQsB,YAGZ4S,EAAmBxV,QAAS0V,GAAaA,EAASQ,uBAElDN,EAAkB5V,QAASsB,IACvBA,EAAQsB,SACR,MAAMuT,EAAUN,EAAoBvO,IAAIhG,GACpC6U,GACAA,EAAQnW,QAAQ+C,IAAkB,IAAAqT,EAAA,IAAhBzQ,EAAK1G,GAAM8D,EACJ,QAArBqT,EAAA9U,EAAQ0U,SAASrQ,UAAI,IAAAyQ,GAArBA,EAAuBhR,IAAInG,OAKvCuW,EAAmBxV,QAAS0V,GAAaA,EAASW,mBAElDb,EAAmBxV,QAAS0V,SACU7N,IAA9B6N,EAASY,kBACT/N,OAAOgO,SAAS,EAAGb,EAASY,mBAGxC,CACAjB,IAAsB,EACtBD,IAAc,EACdD,GAAUnV,QAAS0V,GAAaA,EAASc,SAASlB,KAClDH,GAAUnB,OACd,CACA,SAASyC,KACLtB,GAAUnV,QAAS0V,IACfA,EAASgB,gBACLhB,EAASC,mBACTN,IAAsB,IAGlC,CAOA,MAAMsB,GACF3V,WAAAA,CAAY4V,EAAqBC,EAAYpM,EAAMqM,EAAaxV,GAA0B,IAAjByV,EAAOjX,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,IAAAA,UAAA,GAC5EyB,KAAK+Q,MAAQ,UAMb/Q,KAAKwV,SAAU,EAKfxV,KAAKoU,kBAAmB,EACxBpU,KAAKqV,oBAAsB,IAAIA,GAC/BrV,KAAKsV,WAAaA,EAClBtV,KAAKkJ,KAAOA,EACZlJ,KAAKuV,YAAcA,EACnBvV,KAAKD,QAAUA,EACfC,KAAKwV,QAAUA,CACnB,CACAC,eAAAA,GACIzV,KAAK+Q,MAAQ,YACT/Q,KAAKwV,SACL5B,GAAUxB,IAAIpS,MACT6T,KACDA,IAAc,EACdL,GAAMZ,KAAKsC,IACX1B,GAAMX,iBAAiBmB,OAI3BhU,KAAKmV,gBACLnV,KAAKiV,WAEb,CACAE,aAAAA,GACI,MAAM,oBAAEE,EAAmB,KAAEnM,EAAI,QAAEnJ,EAAO,YAAEwV,GAAgBvV,KAE5D,GAA+B,OAA3BqV,EAAoB,GAAa,CACjC,MAAMK,EAA0B,OAAXH,QAAW,IAAXA,OAAW,EAAXA,EAAaxP,MAE5B4P,EAAgBN,EAAoBA,EAAoB7W,OAAS,GACvE,QAAqB8H,IAAjBoP,EACAL,EAAoB,GAAKK,OAExB,GAAI3V,GAAWmJ,EAAM,CACtB,MAAM0M,EAAc7V,EAAQ8V,UAAU3M,EAAMyM,QACxBrP,IAAhBsP,GAA6C,OAAhBA,IAC7BP,EAAoB,GAAKO,EAEjC,MAC+BtP,IAA3B+O,EAAoB,KACpBA,EAAoB,GAAKM,GAEzBJ,QAAgCjP,IAAjBoP,GACfH,EAAY1R,IAAIwR,EAAoB,GAE5C,EC1HR,SAAuBS,GACnB,IAAK,IAAIhZ,EAAI,EAAGA,EAAIgZ,EAAUtX,OAAQ1B,IAAK,KAAAiZ,EAC3B,QAAZA,EAAAD,EAAUhZ,UAAE,IAAAiZ,IAAKD,EAAUhZ,GAAKgZ,EAAUhZ,EAAI,GAClD,CACJ,CDuHQkZ,CAAcX,EAClB,CACAY,gBAAAA,GAAqB,CACrBtB,mBAAAA,GAAwB,CACxBuB,eAAAA,GAAoB,CACpBpB,eAAAA,GAAoB,CACpBG,QAAAA,GAAmC,IAA1BkB,EAAgB5X,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,IAAAA,UAAA,GACrByB,KAAK+Q,MAAQ,WACb/Q,KAAKsV,WAAWtV,KAAKqV,oBAAqBrV,KAAK2V,cAAeQ,GAC9DvC,GAAU3P,OAAOjE,KACrB,CACAqS,MAAAA,GACuB,cAAfrS,KAAK+Q,QACL6C,GAAU3P,OAAOjE,MACjBA,KAAK+Q,MAAQ,UAErB,CACAqF,MAAAA,GACuB,YAAfpW,KAAK+Q,OACL/Q,KAAKyV,iBACb,EE5IJ,MAAMY,GAAqB3O,GAAM,qQAAc2C,KAAK3C,GCDpD,SAAS4O,GAAO5Y,GACZ,MAAqB,kBAAVA,EACU,IAAVA,EAEQ,OAAVA,IACY,SAAVA,GAA8B,MAAVA,GAAiB2Y,GAAkB3Y,GAKtE,CCVA,MAAM6Y,GAAY7O,GAAMH,KAAKiP,MAAU,IAAJ9O,GAAc,ICF3C+O,GAAa,sCCAnB,MAAMC,GAAmB,6UCQnBC,GAAgBA,CAAC5I,EAAM6I,IAAclP,GAChCmP,QAAsB,kBAANnP,GACnBgP,GAAiBrM,KAAK3C,IACtBA,EAAEsC,WAAW+D,IACZ6I,ICZT,SAAmBlP,GACf,OAAY,MAALA,CACX,CDWaoP,CAAUpP,IACXlK,OAAOkC,UAAUmH,eAAe1J,KAAKuK,EAAGkP,IAE9CG,GAAaA,CAACC,EAAOC,EAAOC,IAAWxP,IACzC,GAAiB,kBAANA,EACP,OAAOA,EACX,MAAOyP,EAAGC,EAAGC,EAAGlK,GAASzF,EAAE4B,MAAMmN,IACjC,MAAO,CACH,CAACO,GAAQpN,WAAWuN,GACpB,CAACF,GAAQrN,WAAWwN,GACpB,CAACF,GAAQtN,WAAWyN,GACpBlK,WAAiB7G,IAAV6G,EAAsBvD,WAAWuD,GAAS,IElBnDmK,IAAOpT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN+I,GAAM,IACT7D,UAAY1B,GAAMH,KAAKiP,MAHL9O,IAAMsF,EAAM,EAAG,IAAKtF,GAGT6P,CAAa7P,MAExC8P,GAAO,CACTnN,KAAoBsM,GAAc,MAAO,OACzCzJ,MAAqB6J,GAAW,MAAO,QAAS,QAChD3N,UAAW5H,IAAA,IAAC,IAAEiW,EAAG,MAAEC,EAAK,KAAEC,EAAMxK,MAAOyK,EAAU,GAAGpW,EAAA,MAAK,QACrD8V,GAAQlO,UAAUqO,GAClB,KACAH,GAAQlO,UAAUsO,GAClB,KACAJ,GAAQlO,UAAUuO,GAClB,KACApB,GAASpJ,EAAM/D,UAAUwO,IACzB,MCYR,MAAMC,GAAM,CACRxN,KAAoBsM,GAAc,KAClCzJ,MAhCJ,SAAkBxF,GACd,IAAI3K,EAAI,GACJ+a,EAAI,GACJV,EAAI,GACJD,EAAI,GAmBR,OAjBIzP,EAAElJ,OAAS,GACXzB,EAAI2K,EAAEqQ,UAAU,EAAG,GACnBD,EAAIpQ,EAAEqQ,UAAU,EAAG,GACnBX,EAAI1P,EAAEqQ,UAAU,EAAG,GACnBZ,EAAIzP,EAAEqQ,UAAU,EAAG,KAInBhb,EAAI2K,EAAEqQ,UAAU,EAAG,GACnBD,EAAIpQ,EAAEqQ,UAAU,EAAG,GACnBX,EAAI1P,EAAEqQ,UAAU,EAAG,GACnBZ,EAAIzP,EAAEqQ,UAAU,EAAG,GACnBhb,GAAKA,EACL+a,GAAKA,EACLV,GAAKA,EACLD,GAAKA,GAEF,CACHM,IAAKO,SAASjb,EAAG,IACjB2a,MAAOM,SAASF,EAAG,IACnBH,KAAMK,SAASZ,EAAG,IAClBjK,MAAOgK,EAAIa,SAASb,EAAG,IAAM,IAAM,EAE3C,EAII/N,UAAWoO,GAAKpO,WC/Bd6O,GAAO,CACT5N,KAAoBsM,GAAc,MAAO,OACzCzJ,MAAqB6J,GAAW,MAAO,aAAc,aACrD3N,UAAW5H,IAAwD,IAAvD,IAAE0W,EAAG,WAAEC,EAAU,UAAEC,EAAWjL,MAAOyK,EAAU,GAAGpW,EAC1D,MAAQ,QACJ+F,KAAKiP,MAAM0B,GACX,KACAzK,EAAQrE,UAAUmN,GAAS4B,IAC3B,KACA1K,EAAQrE,UAAUmN,GAAS6B,IAC3B,KACA7B,GAASpJ,EAAM/D,UAAUwO,IACzB,MCbNS,GAAQ,CACVhO,KAAO3C,GAAM8P,GAAKnN,KAAK3C,IAAMmQ,GAAIxN,KAAK3C,IAAMuQ,GAAK5N,KAAK3C,GACtDwF,MAAQxF,GACA8P,GAAKnN,KAAK3C,GACH8P,GAAKtK,MAAMxF,GAEbuQ,GAAK5N,KAAK3C,GACRuQ,GAAK/K,MAAMxF,GAGXmQ,GAAI3K,MAAMxF,GAGzB0B,UAAY1B,GACY,kBAANA,EACRA,EACAA,EAAEb,eAAe,OACb2Q,GAAKpO,UAAU1B,GACfuQ,GAAK7O,UAAU1B,GAE7B4Q,kBAAoB5Q,IAChB,MAAM6Q,EAASF,GAAMnL,MAAMxF,GAE3B,OADA6Q,EAAOpL,MAAQ,EACRkL,GAAMjP,UAAUmP,KC3BzBC,GAAa,4UCYnB,MAAMC,GAAe,SACfC,GAAc,QAKdC,GAAe,8pCACrB,SAASC,GAAoBlb,GACzB,MAAMmb,EAAgBnb,EAAMob,WACtB/U,EAAS,GACTgV,EAAU,CACZV,MAAO,GACPpL,OAAQ,GACR+L,IAAK,IAEHC,EAAQ,GACd,IAAInc,EAAI,EACR,MAmBM4M,EAnBYmP,EAAcK,QAAQP,GAAeQ,IAC/Cd,GAAMhO,KAAK8O,IACXJ,EAAQV,MAAMja,KAAKtB,GACnBmc,EAAM7a,KAAKsa,IACX3U,EAAO3F,KAAKia,GAAMnL,MAAMiM,KAEnBA,EAAYnP,WApBF,SAqBf+O,EAAQC,IAAI5a,KAAKtB,GACjBmc,EAAM7a,KAvBA,OAwBN2F,EAAO3F,KAAK+a,KAGZJ,EAAQ9L,OAAO7O,KAAKtB,GACpBmc,EAAM7a,KAAKqa,IACX1U,EAAO3F,KAAKwL,WAAWuP,OAEzBrc,EA7BU,QAgCQ4M,MAhCR,OAiChB,MAAO,CAAE3F,SAAQ2F,QAAOqP,UAASE,QACrC,CACA,SAASG,GAAkB1R,GACvB,OAAOkR,GAAoBlR,GAAG3D,MAClC,CACA,SAASsV,GAAkBC,GACvB,MAAM,MAAE5P,EAAK,MAAEuP,GAAUL,GAAoBU,GACvCC,EAAc7P,EAAMlL,OAC1B,OAAQkJ,IACJ,IAAI8R,EAAS,GACb,IAAK,IAAI1c,EAAI,EAAGA,EAAIyc,EAAazc,IAE7B,GADA0c,GAAU9P,EAAM5M,QACHwJ,IAAToB,EAAE5K,GAAkB,CACpB,MAAMiR,EAAOkL,EAAMnc,GAEf0c,GADAzL,IAAS0K,GACClC,GAAS7O,EAAE5K,IAEhBiR,IAAS2K,GACJL,GAAMjP,UAAU1B,EAAE5K,IAGlB4K,EAAE5K,EAEpB,CAEJ,OAAO0c,EAEf,CACA,MAAMC,GAAwB/R,GAAmB,kBAANA,EAAiB,EAAI2Q,GAAMhO,KAAK3C,GAAK2Q,GAAMC,kBAAkB5Q,GAAKA,EAM7G,MAAMgS,GAAU,CACZrP,KA/EJ,SAAc3C,GAAG,IAAAiS,EAAAC,EACb,OAAQC,MAAMnS,IACG,kBAANA,KACa,QAAnBiS,EAAAjS,EAAE4B,MAAMmN,WAAW,IAAAkD,OAAA,EAAnBA,EAAqBnb,SAAU,KACR,QAAnBob,EAAAlS,EAAE4B,MAAMkP,WAAW,IAAAoB,OAAA,EAAnBA,EAAqBpb,SAAU,GAChC,CACZ,EA0EI0O,MAAOkM,GACPC,qBACAf,kBATJ,SAA2B5Q,GACvB,MAAM6Q,EAASa,GAAkB1R,GAEjC,OADoB2R,GAAkB3R,EAC/BoS,CAAYvB,EAAOlT,IAAIoU,IAClC,GC5EMM,GAAc,IAAI3S,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS4S,GAAmBtS,GACxB,MAAOwB,EAAMxL,GAASgK,EAAEuS,MAAM,GAAI,GAAGvQ,MAAM,KAC3C,GAAa,gBAATR,EACA,OAAOxB,EACX,MAAOuF,GAAUvP,EAAM4L,MAAMmN,KAAe,GAC5C,IAAKxJ,EACD,OAAOvF,EACX,MAAM4F,EAAO5P,EAAMwb,QAAQjM,EAAQ,IACnC,IAAIiN,EAAeH,GAAYvT,IAAI0C,GAAQ,EAAI,EAG/C,OAFI+D,IAAWvP,IACXwc,GAAgB,KACbhR,EAAO,IAAMgR,EAAe5M,EAAO,GAC9C,CACA,MAAM6M,GAAgB,sLAChBjc,IAAMgG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLwV,IAAO,IACVpB,kBAAoB5Q,IAChB,MAAM0S,EAAY1S,EAAE4B,MAAM6Q,IAC1B,OAAOC,EAAYA,EAAU/U,IAAI2U,IAAoBhU,KAAK,KAAO0B,KCvBnE2S,IAAGnW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACF+I,GAAM,IACT7D,UAAW7B,KAAKiP,QCDd8D,GAAsB,CACxB7S,OAAQ+F,EACRzE,QAASyE,EACTxE,QAASwE,EACTlF,QAASkF,EACTpF,MAAK,EACLF,OAAQE,EACRD,OAAQC,EACRmS,OAAQnS,EACRM,KAAM8E,EACNjF,MAAOiF,EACP/E,MAAO+E,EACPxB,SAAU0B,EACV1F,WAAY0F,EACZzF,WAAYyF,EACZ5E,WAAY4E,EACZxL,EAAGwL,EACH3F,EAAG2F,EACH7E,EAAG6E,EACH8M,YAAa9M,EACb+M,qBAAsB/M,EACtBgN,QAASvN,EACTb,QAASuB,EACTtB,QAASsB,EACT8M,QAASjN,GCtBPkN,IAAgB1W,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAElB2W,YAAanN,EACboN,eAAgBpN,EAChBqN,iBAAkBrN,EAClBsN,kBAAmBtN,EACnBuN,gBAAiBvN,EACjBwN,aAAcxN,EACdyN,OAAQzN,EACR0N,oBAAqB1N,EACrB2N,qBAAsB3N,EACtB4N,wBAAyB5N,EACzB6N,uBAAwB7N,EAExB5M,MAAO4M,EACP8N,SAAU9N,EACV9M,OAAQ8M,EACR+N,UAAW/N,EACX3M,IAAK2M,EACLvM,MAAOuM,EACPnD,OAAQmD,EACRzM,KAAMyM,EAENgO,QAAShO,EACT+B,WAAY/B,EACZ4B,aAAc5B,EACdgC,cAAehC,EACf2B,YAAa3B,EACbiO,OAAQjO,EACRkO,UAAWlO,EACXmO,YAAanO,EACboO,aAAcpO,EACdqO,WAAYrO,EAEZsO,oBAAqBtO,EACrBuO,oBAAqBvO,GAClB4M,IAAmB,IACtB4B,OAAQ7B,GAER8B,YAAahP,EACbiP,cAAejP,EACfkP,WAAYhC,KCvCViC,IAAiBpY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB0W,IAAgB,IAEnBvC,MAAK,GACLkE,gBAAiBlE,GACjBmE,aAAcnE,GACdoE,KAAMpE,GACNqE,OAAQrE,GAERsE,YAAatE,GACbuE,eAAgBvE,GAChBwE,iBAAkBxE,GAClByE,kBAAmBzE,GACnB0E,gBAAiB1E,GACjBna,OAAM,GACN8e,aAAc9e,KAKZ+e,GAAuB7Y,GAAQkY,GAAkBlY,GCvBvD,SAASkU,GAAkBlU,EAAK1G,GAC5B,IAAIwf,EAAmBD,GAAoB7Y,GAI3C,OAHI8Y,IAAqBhf,KACrBgf,EAAmBxD,IAEhBwD,EAAiB5E,kBAClB4E,EAAiB5E,kBAAkB5a,QACnC4I,CACV,CCHA,MAAM6W,GAAmB,IAAI/V,IAAI,CAAC,OAAQ,OAAQ,MCAlD,MAAMgW,WAA6BhI,GAC/B3V,WAAAA,CAAY4V,EAAqBC,EAAYpM,EAAMqM,EAAaxV,GAC5Dsd,MAAMhI,EAAqBC,EAAYpM,EAAMqM,EAAaxV,GAAS,EACvE,CACAoV,aAAAA,GACI,MAAM,oBAAEE,EAAmB,QAAEtV,EAAO,KAAEmJ,GAASlJ,KAC/C,IAAKD,IAAYA,EAAQI,QACrB,OACJkd,MAAMlI,gBAIN,IAAK,IAAIrY,EAAI,EAAGA,EAAIuY,EAAoB7W,OAAQ1B,IAAK,CACjD,IAAIwgB,EAAWjI,EAAoBvY,GACnC,GAAwB,kBAAbwgB,IACPA,EAAWA,EAASzT,OAChBM,EAAmBmT,IAAW,CAC9B,MAAM1O,EAAWP,GAAiBiP,EAAUvd,EAAQI,cACnCmG,IAAbsI,IACAyG,EAAoBvY,GAAK8R,GAEzB9R,IAAMuY,EAAoB7W,OAAS,IACnCwB,KAAK2V,cAAgB2H,EAE7B,CAER,CAaA,GAPAtd,KAAKud,wBAOAxQ,EAAevG,IAAI0C,IAAwC,IAA/BmM,EAAoB7W,OACjD,OAEJ,MAAOgf,EAAQC,GAAUpI,EACnBqI,EAAazP,EAAuBuP,GACpCG,EAAa1P,EAAuBwP,GAI1C,GAAIC,IAAeC,EAMnB,GAAI3O,GAAc0O,IAAe1O,GAAc2O,GAC3C,IAAK,IAAI7gB,EAAI,EAAGA,EAAIuY,EAAoB7W,OAAQ1B,IAAK,CACjD,MAAMY,EAAQ2X,EAAoBvY,GACb,kBAAVY,IACP2X,EAAoBvY,GAAK8M,WAAWlM,GAE5C,MAEKyR,GAAiBjG,KAItBlJ,KAAKoU,kBAAmB,EAEhC,CACAmJ,oBAAAA,GACI,MAAM,oBAAElI,EAAmB,KAAEnM,GAASlJ,KAChC4d,EAAsB,GAC5B,IAAK,IAAI9gB,EAAI,EAAGA,EAAIuY,EAAoB7W,OAAQ1B,KACb,OAA3BuY,EAAoBvY,IACpBwZ,GAAOjB,EAAoBvY,MAC3B8gB,EAAoBxf,KAAKtB,GAG7B8gB,EAAoBpf,QD7EhC,SAAqC6W,EAAqBuI,EAAqB1U,GAC3E,IACI2U,EADA/gB,EAAI,EAER,KAAOA,EAAIuY,EAAoB7W,SAAWqf,GAAoB,CAC1D,MAAMP,EAAWjI,EAAoBvY,GACb,kBAAbwgB,IACNH,GAAiB3W,IAAI8W,IACtB1E,GAAoB0E,GAAUvZ,OAAOvF,SACrCqf,EAAqBxI,EAAoBvY,IAE7CA,GACJ,CACA,GAAI+gB,GAAsB3U,EACtB,IAAK,MAAM4U,KAAaF,EACpBvI,EAAoByI,GAAaxF,GAAkBpP,EAAM2U,EAGrE,CC6DYE,CAA4B1I,EAAqBuI,EAAqB1U,EAE9E,CACAyL,mBAAAA,GACI,MAAM,QAAE5U,EAAO,oBAAEsV,EAAmB,KAAEnM,GAASlJ,KAC/C,IAAKD,IAAYA,EAAQI,QACrB,OACS,WAAT+I,IACAlJ,KAAK+U,iBAAmB/N,OAAOgX,aAEnChe,KAAKie,eAAiB9O,GAAiBjG,GAAMnJ,EAAQyM,qBAAsBxF,OAAO6H,iBAAiB9O,EAAQI,UAC3GkV,EAAoB,GAAKrV,KAAKie,eAE9B,MAAMC,EAAkB7I,EAAoBA,EAAoB7W,OAAS,QACjD8H,IAApB4X,GACAne,EAAQ0U,SAASvL,EAAMgV,GAAiBC,KAAKD,GAAiB,EAEtE,CACApJ,eAAAA,GAAkB,IAAAsJ,EACd,MAAM,QAAEre,EAAO,KAAEmJ,EAAI,oBAAEmM,GAAwBrV,KAC/C,IAAKD,IAAYA,EAAQI,QACrB,OACJ,MAAMzC,EAAQqC,EAAQ0U,SAASvL,GAC/BxL,GAASA,EAAMygB,KAAKne,KAAKie,gBAAgB,GACzC,MAAMI,EAAqBhJ,EAAoB7W,OAAS,EAClDmX,EAAgBN,EAAoBgJ,GAC1ChJ,EAAoBgJ,GAAsBlP,GAAiBjG,GAAMnJ,EAAQyM,qBAAsBxF,OAAO6H,iBAAiB9O,EAAQI,UACzG,OAAlBwV,QAAiDrP,IAAvBtG,KAAK2V,gBAC/B3V,KAAK2V,cAAgBA,GAGC,QAA1ByI,EAAIpe,KAAKuU,yBAAiB,IAAA6J,GAAtBA,EAAwB5f,QACxBwB,KAAKuU,kBAAkB9V,QAAQ+C,IAA+C,IAA7C8c,EAAoBC,GAAoB/c,EACrEzB,EACK0U,SAAS6J,GACTza,IAAI0a,KAGjBve,KAAKud,sBACT,EC/HJ,MAAMiB,GAAiB9gB,GAAUmZ,QAAQnZ,GAASA,EAAM+gB,a,eCGxD,IAAIpL,GACJ,SAASqL,KACLrL,QAAM/M,CACV,CASA,MAAMqY,GAAO,CACTtL,IAAKA,UACW/M,IAAR+M,IACAsL,GAAK9a,IAAI0O,GAAUrB,cAAgBZ,GAAmB6C,gBAChDZ,GAAUtB,UACVmC,YAAYC,OAEfA,IAEXxP,IAAM+a,IACFvL,GAAMuL,EACNC,eAAeH,MC1BvB,SAASI,GAAcC,EAAKC,IACG,IAAvBD,EAAIjY,QAAQkY,IACZD,EAAI3gB,KAAK4gB,EACjB,CACA,SAASC,GAAWF,EAAKC,GACrB,MAAME,EAAQH,EAAIjY,QAAQkY,GACtBE,GAAS,GACTH,EAAI5Y,OAAO+Y,EAAO,EAC1B,CCNA,MAAMC,GACF1f,WAAAA,GACIO,KAAKof,cAAgB,EACzB,CACAhN,GAAAA,CAAIiN,GAEA,OADAP,GAAc9e,KAAKof,cAAeC,GAC3B,IAAMJ,GAAWjf,KAAKof,cAAeC,EAChD,CACAC,MAAAA,CAAOnI,EAAGC,EAAGC,GACT,MAAMkI,EAAmBvf,KAAKof,cAAc5gB,OAC5C,GAAK+gB,EAEL,GAAyB,IAArBA,EAIAvf,KAAKof,cAAc,GAAGjI,EAAGC,EAAGC,QAG5B,IAAK,IAAIva,EAAI,EAAGA,EAAIyiB,EAAkBziB,IAAK,CAKvC,MAAMuiB,EAAUrf,KAAKof,cAActiB,GACnCuiB,GAAWA,EAAQlI,EAAGC,EAAGC,EAC7B,CAER,CACAmI,OAAAA,GACI,OAAOxf,KAAKof,cAAc5gB,MAC9B,CACAiU,KAAAA,GACIzS,KAAKof,cAAc5gB,OAAS,CAChC,EC9BJ,SAASihB,GAAkBC,EAAUC,GACjC,OAAOA,EAAgBD,GAAY,IAAOC,GAAiB,CAC/D,CCAA,MAIMC,GAAsB,CACxBzf,aAASmG,GAOb,MAAMuZ,GAOFpgB,WAAAA,CAAYwH,GAAoB,IAAd6Y,EAAOvhB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EAQzByB,KAAK+f,iBAAmB,KAIxB/f,KAAKggB,OAAS,CAAC,EACfhgB,KAAKigB,gBAAmBvY,IACpB,MAAMwY,EAAcvB,GAAKtL,MAYO,IAAA8M,EAAhC,IANIngB,KAAKogB,YAAcF,GACnBlgB,KAAKqgB,oBAETrgB,KAAKsgB,KAAOtgB,KAAKG,QACjBH,KAAKugB,WAAW7Y,GAEZ1H,KAAKG,UAAYH,KAAKsgB,QACJ,QAAlBH,EAAAngB,KAAKggB,OAAOQ,cAAM,IAAAL,GAAlBA,EAAoBb,OAAOtf,KAAKG,SAC5BH,KAAKygB,YACL,IAAK,MAAMC,KAAa1gB,KAAKygB,WACzBC,EAAUC,SAK1B3gB,KAAK4gB,aAAc,EACnB5gB,KAAKugB,WAAWtZ,GAChBjH,KAAK6gB,MAAQf,EAAQe,KACzB,CACAN,UAAAA,CAAWpgB,GAzDEzC,MA0DTsC,KAAKG,QAAUA,EACfH,KAAKogB,UAAYzB,GAAKtL,MACQ,OAA1BrT,KAAK+f,uBAAyCzZ,IAAZnG,IAClCH,KAAK+f,kBA7DAriB,EA6D2BsC,KAAKG,SA5DrC0Z,MAAMjQ,WAAWlM,KA8DzB,CACA2iB,iBAAAA,GAAiD,IAA/BS,EAAcviB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAGyB,KAAKG,QACpCH,KAAK8gB,eAAiBA,EACtB9gB,KAAK+gB,cAAgB/gB,KAAKogB,SAC9B,CAyCAY,QAAAA,CAASC,GAIL,OAAOjhB,KAAKkhB,GAAG,SAAUD,EAC7B,CACAC,EAAAA,CAAGC,EAAWnP,GACLhS,KAAKggB,OAAOmB,KACbnhB,KAAKggB,OAAOmB,GAAa,IAAIhC,IAEjC,MAAMiC,EAAcphB,KAAKggB,OAAOmB,GAAW/O,IAAIJ,GAC/C,MAAkB,WAAdmP,EACO,KACHC,IAKA5N,GAAMZ,KAAK,KACF5S,KAAKggB,OAAOQ,OAAOhB,WACpBxf,KAAKqhB,UAKdD,CACX,CACAE,cAAAA,GACI,IAAK,MAAMC,KAAiBvhB,KAAKggB,OAC7BhgB,KAAKggB,OAAOuB,GAAe9O,OAEnC,CAIA+O,MAAAA,CAAOC,EAAeC,GAClB1hB,KAAKyhB,cAAgBA,EACrBzhB,KAAK0hB,kBAAoBA,CAC7B,CAgBA7d,GAAAA,CAAI6D,GACK1H,KAAKyhB,cAINzhB,KAAKyhB,cAAc/Z,EAAG1H,KAAKigB,iBAH3BjgB,KAAKigB,gBAAgBvY,EAK7B,CACAia,eAAAA,CAAgBrB,EAAMngB,EAAS6Q,GAC3BhR,KAAK6D,IAAI1D,GACTH,KAAKsgB,UAAOha,EACZtG,KAAK8gB,eAAiBR,EACtBtgB,KAAK+gB,cAAgB/gB,KAAKogB,UAAYpP,CAC1C,CAKAmN,IAAAA,CAAKzW,GAAwB,IAArBka,IAAYrjB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,KAAAA,UAAA,GAChByB,KAAKigB,gBAAgBvY,GACrB1H,KAAKsgB,KAAO5Y,EACZ1H,KAAK+gB,cAAgB/gB,KAAK8gB,oBAAiBxa,EAC3Csb,GAAgB5hB,KAAKqhB,OACjBrhB,KAAK0hB,mBACL1hB,KAAK0hB,mBACb,CACAf,KAAAA,GAAQ,IAAAkB,EACc,QAAlBA,EAAA7hB,KAAKggB,OAAOQ,cAAM,IAAAqB,GAAlBA,EAAoBvC,OAAOtf,KAAKG,QACpC,CACA2hB,YAAAA,CAAapB,GACJ1gB,KAAKygB,aACNzgB,KAAKygB,WAAa,IAAIrZ,KAE1BpH,KAAKygB,WAAWrO,IAAIsO,EACxB,CACAqB,eAAAA,CAAgBrB,GACR1gB,KAAKygB,YACLzgB,KAAKygB,WAAWxc,OAAOyc,EAE/B,CAQA3a,GAAAA,GAII,OAHI6Z,GAAoBzf,SACpByf,GAAoBzf,QAAQ/B,KAAK4B,MAE9BA,KAAKG,OAChB,CAIA6hB,WAAAA,GACI,OAAOhiB,KAAKsgB,IAChB,CAQA7B,WAAAA,GACI,MAAMyB,EAAcvB,GAAKtL,MACzB,IAAKrT,KAAK+f,uBACkBzZ,IAAxBtG,KAAK8gB,gBACLZ,EAAclgB,KAAKogB,UAzOJ,GA0Of,OAAO,EAEX,MAAMpP,EAAQzJ,KAAKiD,IAAIxK,KAAKogB,UAAYpgB,KAAK+gB,cA5O1B,IA8OnB,OAAOtB,GAAkB7V,WAAW5J,KAAKG,SACrCyJ,WAAW5J,KAAK8gB,gBAAiB9P,EACzC,CAWAiR,KAAAA,CAAMC,GAEF,OADAliB,KAAKqhB,OACE,IAAIc,QAASC,IAChBpiB,KAAK4gB,aAAc,EACnB5gB,KAAKqiB,UAAYH,EAAeE,GAC5BpiB,KAAKggB,OAAOsC,gBACZtiB,KAAKggB,OAAOsC,eAAehD,WAEhCiD,KAAK,KACAviB,KAAKggB,OAAOwC,mBACZxiB,KAAKggB,OAAOwC,kBAAkBlD,SAElCtf,KAAKyiB,kBAEb,CAMApB,IAAAA,GACQrhB,KAAKqiB,YACLriB,KAAKqiB,UAAUhB,OACXrhB,KAAKggB,OAAO0C,iBACZ1iB,KAAKggB,OAAO0C,gBAAgBpD,UAGpCtf,KAAKyiB,gBACT,CAMAE,WAAAA,GACI,QAAS3iB,KAAKqiB,SAClB,CACAI,cAAAA,UACWziB,KAAKqiB,SAChB,CAUAO,OAAAA,GAAU,IAAAC,EAAAC,EACS,QAAfD,EAAA7iB,KAAKygB,kBAAU,IAAAoC,GAAfA,EAAiBpQ,QACE,QAAnBqQ,EAAA9iB,KAAKggB,OAAO4C,eAAO,IAAAE,GAAnBA,EAAqBxD,SACrBtf,KAAKshB,iBACLthB,KAAKqhB,OACDrhB,KAAK0hB,mBACL1hB,KAAK0hB,mBAEb,EAEJ,SAASnM,GAAYtO,EAAM6Y,GACvB,OAAO,IAAID,GAAY5Y,EAAM6Y,EACjC,CCxTA,MAAMiD,GAAa,IAAI/U,EAAqBqK,GAAOqB,KCN3CxH,SAAU8Q,GAAW3Q,OAAQ4Q,IACrBvS,GAAoBmO,gBAAgB,GCH9CqE,GAAe,CACjBb,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJc,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,GAAqB,CAAC,EAC5B,IAAK,MAAMvf,MAAO8e,GACdS,GAAmBvf,IAAO,CACtBwf,UAAY3jB,GAAUijB,GAAa9e,IAAKyf,KAAM3a,KAAWjJ,EAAMiJ,KCvBvE,MAWM4a,GAAYA,KAAA,CACd5hB,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,K,eCTzC,MAAMsZ,GAAuB,CAAE5jB,QAAS,MAClC6jB,GAA2B,CAAE7jB,SAAS,GCF5C,MAAM8jB,GAAqB,IAAIC,QCA/B,SAASC,GAAoBzc,GACzB,OAAc,OAANA,GACS,kBAANA,GACY,oBAAZA,EAAEua,KACjB,CCDA,SAASmC,GAAe1c,GACpB,MAAoB,kBAANA,GAAkBwM,MAAMmQ,QAAQ3c,EAClD,CCLA,MAAM4c,GAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,GAAe,CAAC,aAAcD,ICLpC,SAASE,GAAsBvkB,GAC3B,OAAQkkB,GAAoBlkB,EAAMwkB,UAC9BF,GAAaV,KAAM3a,GAASkb,GAAenkB,EAAMiJ,IACzD,CACA,SAASwb,GAAczkB,GACnB,OAAO4W,QAAQ2N,GAAsBvkB,IAAUA,EAAM0kB,SACzD,CCVA,SAASC,GAAcpQ,GACnB,MAAMzD,EAAQ,CAAC,CAAC,EAAG,CAAC,GAKpB,OAJa,OAAbyD,QAAa,IAAbA,GAAAA,EAAezQ,OAAOtF,QAAQ,CAACf,EAAO0G,KAClC2M,EAAM,GAAG3M,GAAO1G,EAAMqI,MACtBgL,EAAM,GAAG3M,GAAO1G,EAAM+gB,gBAEnB1N,CACX,CACA,SAAS8T,GAAwB5kB,EAAO6kB,EAAY3hB,EAAQqR,GAIxD,GAA0B,oBAAfsQ,EAA2B,CAClC,MAAO3kB,EAASuf,GAAYkF,GAAcpQ,GAC1CsQ,EAAaA,OAAsBxe,IAAXnD,EAAuBA,EAASlD,EAAMkD,OAAQhD,EAASuf,EACnF,CAaA,GAR0B,kBAAfoF,IACPA,EAAa7kB,EAAM0kB,UAAY1kB,EAAM0kB,SAASG,IAOxB,oBAAfA,EAA2B,CAClC,MAAO3kB,EAASuf,GAAYkF,GAAcpQ,GAC1CsQ,EAAaA,OAAsBxe,IAAXnD,EAAuBA,EAASlD,EAAMkD,OAAQhD,EAASuf,EACnF,CACA,OAAOoF,CACX,C,wBCtBMC,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GAQFC,2BAAAA,CAA4BC,EAAQC,EAAYC,GAC5C,MAAO,CAAC,CACZ,CACA3lB,WAAAA,CAAW+B,GAA6G,IAA5G,OAAEnB,EAAM,MAAEJ,EAAK,gBAAEolB,EAAe,oBAAEC,EAAmB,sBAAEC,EAAqB,YAAEC,GAAchkB,EAAEse,EAAOvhB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKjHyB,KAAKG,QAAU,KAIfH,KAAKsB,SAAW,IAAI8F,IAIpBpH,KAAK0kB,eAAgB,EACrB1kB,KAAKwkB,uBAAwB,EAQ7BxkB,KAAKylB,mBAAqB,KAM1BzlB,KAAK+D,OAAS,IAAIQ,IAClBvE,KAAKoV,iBAAmBA,GAIxBpV,KAAK0lB,SAAW,CAAC,EAKjB1lB,KAAK2lB,mBAAqB,IAAIphB,IAM9BvE,KAAK4lB,iBAAmB,CAAC,EAIzB5lB,KAAKggB,OAAS,CAAC,EAMfhgB,KAAK6lB,uBAAyB,CAAC,EAC/B7lB,KAAK8lB,aAAe,IAAM9lB,KAAKsf,OAAO,SAAUtf,KAAK+lB,cACrD/lB,KAAKqB,OAAS,KACLrB,KAAKG,UAEVH,KAAKgmB,eACLhmB,KAAKimB,eAAejmB,KAAKG,QAASH,KAAKkmB,YAAalmB,KAAKC,MAAMqC,MAAOtC,KAAKmmB,cAE/EnmB,KAAKomB,kBAAoB,EACzBpmB,KAAKqmB,eAAiB,KAClB,MAAMhT,EAAMsL,GAAKtL,MACbrT,KAAKomB,kBAAoB/S,IACzBrT,KAAKomB,kBAAoB/S,EACzBG,GAAMnS,OAAOrB,KAAKqB,QAAQ,GAAO,KAGzC,MAAM,aAAE0kB,EAAY,YAAEG,GAAgBV,EACtCxlB,KAAK+lB,aAAeA,EACpB/lB,KAAKsmB,YAAUpiB,EAAAA,EAAAA,GAAA,GAAQ6hB,GACvB/lB,KAAKumB,cAAgBtmB,EAAMgD,SAAOiB,EAAAA,EAAAA,GAAA,GAAQ6hB,GAAiB,CAAC,EAC5D/lB,KAAKkmB,YAAcA,EACnBlmB,KAAKK,OAASA,EACdL,KAAKC,MAAQA,EACbD,KAAKqlB,gBAAkBA,EACvBrlB,KAAKsO,MAAQjO,EAASA,EAAOiO,MAAQ,EAAI,EACzCtO,KAAKslB,oBAAsBA,EAC3BtlB,KAAK8f,QAAUA,EACf9f,KAAKulB,sBAAwB1O,QAAQ0O,GACrCvlB,KAAKwkB,sBAAwBA,GAAsBvkB,GACnDD,KAAK0kB,cAAgBA,GAAczkB,GAC/BD,KAAK0kB,gBACL1kB,KAAKwmB,gBAAkB,IAAIpf,KAE/BpH,KAAKymB,uBAAyB5P,QAAQxW,GAAUA,EAAOF,SAWvD,MAAAumB,EAA+C1mB,KAAKilB,4BAA4BhlB,EAAO,CAAC,EAAGD,OAArF,WAAE2mB,GAAoCD,EAArBE,GAAmBjgB,EAAAA,GAAAA,GAAA+f,EAAAG,IAC1C,IAAK,MAAMziB,KAAOwiB,EAAqB,CACnC,MAAMlpB,EAAQkpB,EAAoBxiB,QACRkC,IAAtByf,EAAa3hB,IAAsBoa,GAAc9gB,IACjDA,EAAMmG,IAAIkiB,EAAa3hB,GAE/B,CACJ,CACA0iB,KAAAA,CAAMra,GAAU,IAAAsa,EACZ/mB,KAAKG,QAAUsM,EACfwX,GAAmBpgB,IAAI4I,EAAUzM,MAC7BA,KAAKmmB,aAAenmB,KAAKmmB,WAAW1Z,UACpCzM,KAAKmmB,WAAWW,MAAMra,GAEtBzM,KAAKK,QAAUL,KAAK0kB,gBAAkB1kB,KAAKwkB,wBAC3CxkB,KAAKgnB,sBAAwBhnB,KAAKK,OAAO4mB,gBAAgBjnB,OAE7DA,KAAK+D,OAAOtF,QAAQ,CAACf,EAAO0G,IAAQpE,KAAKknB,kBAAkB9iB,EAAK1G,IAC3DsmB,GAAyB7jB,SCpJtC,WAEI,GADA6jB,GAAyB7jB,SAAU,EAC9BtB,GAAAA,EAEL,GAAImI,OAAOmgB,WAAY,CACnB,MAAMC,EAAmBpgB,OAAOmgB,WAAW,4BACrCE,EAA8BA,IAAOtD,GAAqB5jB,QAAUinB,EAAiBE,QAC3FF,EAAiBG,iBAAiB,SAAUF,GAC5CA,GACJ,MAEItD,GAAqB5jB,SAAU,CAEvC,CDwIYqnB,GAEJxnB,KAAKylB,mBAC4B,UAA7BzlB,KAAKslB,sBAE8B,WAA7BtlB,KAAKslB,qBAEDvB,GAAqB5jB,SAIxB,QAAX4mB,EAAA/mB,KAAKK,cAAM,IAAA0mB,GAAXA,EAAaU,SAASznB,MACtBA,KAAK+S,OAAO/S,KAAKC,MAAOD,KAAKqlB,gBACjC,CACAqC,OAAAA,GAAU,IAAAC,EACN3nB,KAAKmmB,YAAcnmB,KAAKmmB,WAAWuB,UACnCjU,GAAYzT,KAAK8lB,cACjBrS,GAAYzT,KAAKqB,QACjBrB,KAAK2lB,mBAAmBlnB,QAASmpB,GAAWA,KAC5C5nB,KAAK2lB,mBAAmBlT,QACxBzS,KAAKgnB,uBAAyBhnB,KAAKgnB,wBACxB,QAAXW,EAAA3nB,KAAKK,cAAM,IAAAsnB,GAAXA,EAAa7kB,YAAY9C,MACzB,IAAK,MAAMoE,KAAOpE,KAAKggB,OACnBhgB,KAAKggB,OAAO5b,GAAKqO,QAErB,IAAK,MAAMrO,KAAOpE,KAAK0lB,SAAU,CAC7B,MAAMmC,EAAU7nB,KAAK0lB,SAASthB,GAC1ByjB,IACAA,EAAQH,UACRG,EAAQC,WAAY,EAE5B,CACA9nB,KAAKG,QAAU,IACnB,CACAsnB,QAAAA,CAAShjB,GAAO,IAAAsjB,EACZ/nB,KAAKsB,SAAS8Q,IAAI3N,GACG,QAArBsjB,EAAA/nB,KAAKgoB,wBAAgB,IAAAD,IAAK/nB,KAAKgoB,iBAAmB,IAAI5gB,KACtDpH,KAAKgoB,iBAAiB5V,IAAI3N,EAC9B,CACA3B,WAAAA,CAAY2B,GACRzE,KAAKsB,SAAS2C,OAAOQ,GACrBzE,KAAKgoB,kBAAoBhoB,KAAKgoB,iBAAiB/jB,OAAOQ,EAC1D,CACAyiB,iBAAAA,CAAkB9iB,EAAK1G,GACfsC,KAAK2lB,mBAAmBnf,IAAIpC,IAC5BpE,KAAK2lB,mBAAmB5f,IAAI3B,EAA5BpE,GAEJ,MAAMioB,EAAmB9gB,EAAeX,IAAIpC,GACxC6jB,GAAoBjoB,KAAKkoB,iBACzBloB,KAAKkoB,kBAET,MAAMC,EAAiBzqB,EAAMwjB,GAAG,SAAWkH,IACvCpoB,KAAK+lB,aAAa3hB,GAAOgkB,EACzBpoB,KAAKC,MAAMooB,UAAY7U,GAAMR,UAAUhT,KAAK8lB,cACxCmC,GAAoBjoB,KAAKmmB,aACzBnmB,KAAKmmB,WAAWmC,kBAAmB,GAEvCtoB,KAAKqmB,mBAET,IAAIkC,EACAvhB,OAAOwhB,wBACPD,EAAkBvhB,OAAOwhB,sBAAsBxoB,KAAMoE,EAAK1G,IAE9DsC,KAAK2lB,mBAAmB9hB,IAAIO,EAAK,KAC7B+jB,IACII,GACAA,IACA7qB,EAAMmjB,OACNnjB,EAAM2jB,QAElB,CACAoH,gBAAAA,CAAiBC,GAIb,OAAK1oB,KAAKG,SACLH,KAAK2oB,0BACN3oB,KAAK+N,OAAS2a,EAAM3a,KAGjB/N,KAAK2oB,yBAAyB3oB,KAAKG,QAASuoB,EAAMvoB,SAF9C,CAGf,CACAyoB,cAAAA,GACI,IAAIxkB,EAAM,YACV,IAAKA,KAAOuf,GAAoB,CAC5B,MAAMkF,EAAoBlF,GAAmBvf,GAC7C,IAAKykB,EACD,SACJ,MAAM,UAAEjF,EAAWkF,QAASC,GAAuBF,EAYnD,IARK7oB,KAAK0lB,SAASthB,IACf2kB,GACAnF,EAAU5jB,KAAKC,SACfD,KAAK0lB,SAASthB,GAAO,IAAI2kB,EAAmB/oB,OAK5CA,KAAK0lB,SAASthB,GAAM,CACpB,MAAMyjB,EAAU7nB,KAAK0lB,SAASthB,GAC1ByjB,EAAQC,UACRD,EAAQ9U,UAGR8U,EAAQf,QACRe,EAAQC,WAAY,EAE5B,CACJ,CACJ,CACA9B,YAAAA,GACIhmB,KAAKgpB,MAAMhpB,KAAKkmB,YAAalmB,KAAK+lB,aAAc/lB,KAAKC,MACzD,CAMAuM,kBAAAA,GACI,OAAOxM,KAAKG,QACNH,KAAKipB,2BAA2BjpB,KAAKG,QAASH,KAAKC,ORvQ/C,CACdiC,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,GQ0QrC,CACAye,cAAAA,CAAe9kB,GACX,OAAOpE,KAAK+lB,aAAa3hB,EAC7B,CACA+kB,cAAAA,CAAe/kB,EAAK1G,GAChBsC,KAAK+lB,aAAa3hB,GAAO1G,CAC7B,CAKAqV,MAAAA,CAAO9S,EAAOolB,IACNplB,EAAMmpB,mBAAqBppB,KAAKC,MAAMmpB,oBACtCppB,KAAKqmB,iBAETrmB,KAAKF,UAAYE,KAAKC,MACtBD,KAAKC,MAAQA,EACbD,KAAKqpB,oBAAsBrpB,KAAKqlB,gBAChCrlB,KAAKqlB,gBAAkBA,EAIvB,IAAK,IAAIvoB,EAAI,EAAGA,EAAIioB,GAAkBvmB,OAAQ1B,IAAK,CAC/C,MAAMsH,EAAM2gB,GAAkBjoB,GAC1BkD,KAAK6lB,uBAAuBzhB,KAC5BpE,KAAK6lB,uBAAuBzhB,YACrBpE,KAAK6lB,uBAAuBzhB,IAEvC,MACMklB,EAAWrpB,EADK,KAAOmE,GAEzBklB,IACAtpB,KAAK6lB,uBAAuBzhB,GAAOpE,KAAKkhB,GAAG9c,EAAKklB,GAExD,CACAtpB,KAAK4lB,iBEpTb,SAAqC7lB,EAASwpB,EAAMjJ,GAChD,IAAK,MAAMlc,KAAOmlB,EAAM,CACpB,MAAMC,EAAYD,EAAKnlB,GACjBqlB,EAAYnJ,EAAKlc,GACvB,GAAIoa,GAAcgL,GAKdzpB,EAAQ2pB,SAAStlB,EAAKolB,QAErB,GAAIhL,GAAciL,GAKnB1pB,EAAQ2pB,SAAStlB,EAAKmR,GAAYiU,EAAW,CAAE3I,MAAO9gB,UAErD,GAAI0pB,IAAcD,EAMnB,GAAIzpB,EAAQ4pB,SAASvlB,GAAM,CACvB,MAAMwlB,EAAgB7pB,EAAQ0U,SAASrQ,IACP,IAA5BwlB,EAAcC,UACdD,EAAczL,KAAKqL,GAEbI,EAAchJ,aACpBgJ,EAAc/lB,IAAI2lB,EAE1B,KACK,CACD,MAAMpB,EAAcroB,EAAQmpB,eAAe9kB,GAC3CrE,EAAQ2pB,SAAStlB,EAAKmR,QAA4BjP,IAAhB8hB,EAA4BA,EAAcoB,EAAW,CAAE3I,MAAO9gB,IACpG,CAER,CAEA,IAAK,MAAMqE,KAAOkc,OACIha,IAAdijB,EAAKnlB,IACLrE,EAAQ+pB,YAAY1lB,GAE5B,OAAOmlB,CACX,CFuQgCQ,CAA4B/pB,KAAMA,KAAKilB,4BAA4BhlB,EAAOD,KAAKF,UAAWE,MAAOA,KAAK4lB,kBAC1H5lB,KAAKgqB,wBACLhqB,KAAKgqB,wBAEb,CACAC,QAAAA,GACI,OAAOjqB,KAAKC,KAChB,CAIAiqB,UAAAA,CAAWhhB,GACP,OAAOlJ,KAAKC,MAAM0kB,SAAW3kB,KAAKC,MAAM0kB,SAASzb,QAAQ5C,CAC7D,CAIA6jB,oBAAAA,GACI,OAAOnqB,KAAKC,MAAMmqB,UACtB,CACAC,qBAAAA,GACI,OAAOrqB,KAAKC,MAAMf,kBACtB,CACAorB,qBAAAA,GACI,OAAOtqB,KAAK0kB,cACN1kB,KACAA,KAAKK,OACDL,KAAKK,OAAOiqB,6BACZhkB,CACd,CAIA2gB,eAAAA,CAAgBxiB,GACZ,MAAM8lB,EAAqBvqB,KAAKsqB,wBAChC,GAAIC,EAGA,OAFAA,EAAmB/D,iBACf+D,EAAmB/D,gBAAgBpU,IAAI3N,GACpC,IAAM8lB,EAAmB/D,gBAAgBviB,OAAOQ,EAE/D,CAIAilB,QAAAA,CAAStlB,EAAK1G,GAEV,MAAMksB,EAAgB5pB,KAAK+D,OAAOgC,IAAI3B,GAClC1G,IAAUksB,IACNA,GACA5pB,KAAK8pB,YAAY1lB,GACrBpE,KAAKknB,kBAAkB9iB,EAAK1G,GAC5BsC,KAAK+D,OAAOF,IAAIO,EAAK1G,GACrBsC,KAAK+lB,aAAa3hB,GAAO1G,EAAMqI,MAEvC,CAIA+jB,WAAAA,CAAY1lB,GACRpE,KAAK+D,OAAOE,OAAOG,GACnB,MAAMgd,EAAcphB,KAAK2lB,mBAAmB5f,IAAI3B,GAC5Cgd,IACAA,IACAphB,KAAK2lB,mBAAmB1hB,OAAOG,WAE5BpE,KAAK+lB,aAAa3hB,GACzBpE,KAAKwqB,2BAA2BpmB,EAAKpE,KAAKkmB,YAC9C,CAIAyD,QAAAA,CAASvlB,GACL,OAAOpE,KAAK+D,OAAOyC,IAAIpC,EAC3B,CACAqQ,QAAAA,CAASrQ,EAAK8V,GACV,GAAIla,KAAKC,MAAM8D,QAAU/D,KAAKC,MAAM8D,OAAOK,GACvC,OAAOpE,KAAKC,MAAM8D,OAAOK,GAE7B,IAAI1G,EAAQsC,KAAK+D,OAAOgC,IAAI3B,GAK5B,YAJckC,IAAV5I,QAAwC4I,IAAjB4T,IACvBxc,EAAQ6X,GAA6B,OAAjB2E,OAAwB5T,EAAY4T,EAAc,CAAE2G,MAAO7gB,OAC/EA,KAAK0pB,SAAStlB,EAAK1G,IAEhBA,CACX,CAMAmY,SAAAA,CAAUzR,EAAKqZ,GAAQ,IAAAgN,EACnB,IAAI/sB,OAAmC4I,IAA3BtG,KAAK+lB,aAAa3hB,IAAuBpE,KAAKG,QAER,QADtBsqB,EACtBzqB,KAAK0qB,uBAAuB1qB,KAAKC,MAAOmE,UAAI,IAAAqmB,EAAAA,EAC1CzqB,KAAK2qB,sBAAsB3qB,KAAKG,QAASiE,EAAKpE,KAAK8f,SAFrD9f,KAAK+lB,aAAa3hB,GXtYTsD,MWoZf,YAXcpB,IAAV5I,GAAiC,OAAVA,IACF,kBAAVA,IACNyQ,GAAkBzQ,IAAU2Y,GAAkB3Y,IAE/CA,EAAQkM,WAAWlM,IX7YZgK,EW+YahK,GX/YPqlB,GAAW7U,KAAKJ,EAAcpG,KW+YbgS,GAAQrP,KAAKoT,KAC3C/f,EAAQ4a,GAAkBlU,EAAKqZ,KAEnCzd,KAAK4qB,cAAcxmB,EAAKoa,GAAc9gB,GAASA,EAAMqI,MAAQrI,IAE1D8gB,GAAc9gB,GAASA,EAAMqI,MAAQrI,CAChD,CAKAktB,aAAAA,CAAcxmB,EAAK1G,GACfsC,KAAKsmB,WAAWliB,GAAO1G,CAC3B,CAKAmtB,aAAAA,CAAczmB,GACV,MAAM,QAAEnB,GAAYjD,KAAKC,MACzB,IAAI6qB,EACJ,GAAuB,kBAAZ7nB,GAA2C,kBAAZA,EAAsB,KAAA8nB,EAC5D,MAAMC,EAAUnG,GAAwB7kB,KAAKC,MAAOgD,EAA6B,QAAtB8nB,EAAE/qB,KAAKqlB,uBAAe,IAAA0F,OAAA,EAApBA,EAAsB5nB,QAC/E6nB,IACAF,EAAmBE,EAAQ5mB,GAEnC,CAIA,GAAInB,QAAgCqD,IAArBwkB,EACX,OAAOA,EAMX,MAAMrN,EAASzd,KAAK0qB,uBAAuB1qB,KAAKC,MAAOmE,GACvD,YAAekC,IAAXmX,GAAyBe,GAAcf,QAMRnX,IAA5BtG,KAAKumB,cAAcniB,SACDkC,IAArBwkB,OACExkB,EACAtG,KAAKsmB,WAAWliB,GARXqZ,CASf,CACAyD,EAAAA,CAAGC,EAAWnP,GAIV,OAHKhS,KAAKggB,OAAOmB,KACbnhB,KAAKggB,OAAOmB,GAAa,IAAIhC,IAE1Bnf,KAAKggB,OAAOmB,GAAW/O,IAAIJ,EACtC,CACAsN,MAAAA,CAAO6B,GACH,GAAInhB,KAAKggB,OAAOmB,GAAY,SAAA8J,EAAA1sB,UAAAC,OADX0sB,EAAI,IAAAhX,MAAA+W,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,EAAA,GAAA5sB,UAAA4sB,GAEjBnrB,KAAKggB,OAAOmB,GAAW7B,UAAU4L,EACrC,CACJ,CACAE,uBAAAA,GACIpI,GAAU3hB,OAAOrB,KAAKqB,OAC1B,EGtdJ,MAAMgqB,WAAyBrG,GAC3BvlB,WAAAA,GACI4d,SAAS9e,WACTyB,KAAKoV,iBAAmBgI,EAC5B,CACAuL,wBAAAA,CAAyBxR,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEmU,wBAAwBlU,GAAS,GAAK,CACnD,CACAsT,sBAAAA,CAAuBzqB,EAAOmE,GAC1B,OAAOnE,EAAMqC,MACPrC,EAAMqC,MAAM8B,QACZkC,CACV,CACAkkB,0BAAAA,CAA2BpmB,EAAG5C,GAAmB,IAAjB,KAAE+pB,EAAI,MAAEjpB,GAAOd,SACpC+pB,EAAKnnB,UACL9B,EAAM8B,EACjB,CACA4lB,sBAAAA,GACQhqB,KAAKwrB,oBACLxrB,KAAKwrB,2BACExrB,KAAKwrB,mBAEhB,MAAM,SAAElqB,GAAatB,KAAKC,MACtBue,GAAcld,KACdtB,KAAKwrB,kBAAoBlqB,EAAS4f,GAAG,SAAWuK,IACxCzrB,KAAKG,UACLH,KAAKG,QAAQurB,YAAc,GAAHvpB,OAAMspB,MAI9C,ECnCJ,MAAME,GAAiBA,CAACjuB,EAAOqQ,IACpBA,GAAyB,kBAAVrQ,EAChBqQ,EAAK3E,UAAU1L,GACfA,ECJJkuB,GAAiB,CACnB1pB,EAAG,aACH6F,EAAG,aACHc,EAAG,aACH4R,qBAAsB,eAEpBoR,GAAgB3kB,EAAmB1I,OCLzC,SAASstB,GAAgB/a,EAAOgV,EAAcqD,GAC1C,MAAM,MAAE9mB,EAAK,KAAEipB,EAAI,gBAAEQ,GAAoBhb,EAEzC,IAAI/F,GAAe,EACfghB,GAAqB,EAOzB,IAAK,MAAM5nB,KAAO2hB,EAAc,CAC5B,MAAMroB,EAAQqoB,EAAa3hB,GAC3B,GAAI+C,EAAeX,IAAIpC,GAEnB4G,GAAe,OAGd,GAAIf,EAAkB7F,GACvBmnB,EAAKnnB,GAAO1G,MAGX,CAED,MAAMuuB,EAAcN,GAAejuB,EAAOkd,GAAiBxW,IACvDA,EAAI4F,WAAW,WAEfgiB,GAAqB,EACrBD,EAAgB3nB,GACZ6nB,GAGJ3pB,EAAM8B,GAAO6nB,CAErB,CACJ,CAiBA,GAhBKlG,EAAa3c,YACV4B,GAAgBoe,EAChB9mB,EAAM8G,UD1BlB,SAAwB2c,EAAc3c,EAAWggB,GAE7C,IAAI8C,EAAkB,GAClBC,GAAqB,EAKzB,IAAK,IAAIrvB,EAAI,EAAGA,EAAI+uB,GAAe/uB,IAAK,CACpC,MAAMsH,EAAM8C,EAAmBpK,GACzBY,EAAQqoB,EAAa3hB,GAC3B,QAAckC,IAAV5I,EACA,SACJ,IAAI0uB,GAAiB,EAOrB,GALIA,EADiB,kBAAV1uB,EACUA,KAAW0G,EAAI4F,WAAW,SAAW,EAAI,GAGnB,IAAtBJ,WAAWlM,IAE3B0uB,GAAkBhD,EAAmB,CACtC,MAAM6C,EAAcN,GAAejuB,EAAOkd,GAAiBxW,IACtDgoB,IACDD,GAAqB,EAErBD,GAAmB,GAAJ/pB,OADOypB,GAAexnB,IAAQA,EACV,KAAAjC,OAAI8pB,EAAW,OAElD7C,IACAhgB,EAAUhF,GAAO6nB,EAEzB,CACJ,CAUA,OATAC,EAAkBA,EAAgBriB,OAG9Buf,EACA8C,EAAkB9C,EAAkBhgB,EAAW+iB,EAAqB,GAAKD,GAEpEC,IACLD,EAAkB,QAEfA,CACX,CChB8BG,CAAetG,EAAchV,EAAM3H,UAAWggB,GAE3D9mB,EAAM8G,YAKX9G,EAAM8G,UAAY,SAOtB4iB,EAAoB,CACpB,MAAM,QAAE1f,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEoO,EAAU,GAAOoR,EAC3DzpB,EAAMypB,gBAAkB,GAAH5pB,OAAMmK,EAAO,KAAAnK,OAAIoK,EAAO,KAAApK,OAAIwY,EACrD,CACJ,CC3DA,SAAS2R,GAAWvsB,EAAOyB,EAAmB+qB,EAAWpG,GAAY,IAAxC,MAAE7jB,EAAK,KAAEipB,GAAM/pB,EACxC,MAAMgrB,EAAezsB,EAAQuC,MAC7B,IAAI8B,EACJ,IAAKA,KAAO9B,EAERkqB,EAAapoB,GAAO9B,EAAM8B,GAI9B,IAAKA,KADK,OAAV+hB,QAAU,IAAVA,GAAAA,EAAYsG,sBAAsBD,EAAcD,GACpChB,EAGRiB,EAAaE,YAAYtoB,EAAKmnB,EAAKnnB,GAE3C,CCZA,MAAMuoB,GAAkB,CAAC,ECCzB,SAASC,GAAoBxoB,EAAG5C,GAAwB,IAAtB,OAAEkiB,EAAM,SAAEmJ,GAAUrrB,EAClD,OAAQ2F,EAAeX,IAAIpC,IACvBA,EAAI4F,WAAW,YACb0Z,QAAuBpd,IAAbumB,OACLF,GAAgBvoB,IAAgB,YAARA,EACvC,CCLA,SAAS6gB,GAA4BhlB,EAAOH,EAAW0U,GACnD,MAAM,MAAElS,GAAUrC,EACZ6sB,EAAY,CAAC,EACnB,IAAK,MAAM1oB,KAAO9B,EAAO,KAAAyqB,GACjBvO,GAAclc,EAAM8B,KACnBtE,EAAUwC,OACPkc,GAAc1e,EAAUwC,MAAM8B,KAClCwoB,GAAoBxoB,EAAKnE,SACmBqG,KAA/B,OAAbkO,QAAa,IAAbA,GAA4B,QAAfuY,EAAbvY,EAAeC,SAASrQ,UAAI,IAAA2oB,OAAA,EAA5BA,EAA8BlD,cAC9BiD,EAAU1oB,GAAO9B,EAAM8B,GAE/B,CACA,OAAO0oB,CACX,CCNA,MAAME,WAA0B3B,GAC5B5rB,WAAAA,GACI4d,SAAS9e,WACTyB,KAAK+N,KAAO,OACZ/N,KAAKimB,eAAiBqG,EAC1B,CACA3B,qBAAAA,CAAsBle,EAAUrI,GACC,IAAA6oB,EAVXltB,EAUlB,GAAIoH,EAAeX,IAAIpC,GACnB,OAAsB,QAAf6oB,EAAAjtB,KAAKmmB,kBAAU,IAAA8G,GAAfA,EAAiBC,aAClBjkB,EAAsB7E,G3EuDb+oB,EAAC1gB,EAAUvD,KAClC,MAAM,UAAEE,EAAY,QAAWyF,iBAAiBpC,GAChD,OAAOtD,EAAwBC,EAAWF,I2ExD5BikB,CAAmB1gB,EAAUrI,GAElC,CACD,MAAMgpB,GAhBQrtB,EAgByB0M,EAfxCzF,OAAO6H,iBAAiB9O,IAgBjBrC,GAASuM,EAAkB7F,GAC3BgpB,EAActe,iBAAiB1K,GAC/BgpB,EAAchpB,KAAS,EAC7B,MAAwB,kBAAV1G,EAAqBA,EAAMmM,OAASnM,CACtD,CACJ,CACAurB,0BAAAA,CAA2Bxc,EAAQjL,GAA0B,IAAxB,mBAAEtC,GAAoBsC,EACvD,OAAOgL,EAAmBC,EAAUvN,EACxC,CACA8pB,KAAAA,CAAM9C,EAAaH,EAAc9lB,GAC7B6rB,GAAgB5F,EAAaH,EAAc9lB,EAAMmpB,kBACrD,CACAnE,2BAAAA,CAA4BhlB,EAAOH,EAAW0U,GAC1C,OAAOyQ,GAA4BhlB,EAAOH,EAAW0U,EACzD,ECnCJ,MAAM6Y,GAAeC,GAAQA,EAAIpU,QAAQ,kBAAoB,SAASqU,cCDhEC,GAAW,CACbC,OAAQ,oBACRC,MAAO,oBAELC,GAAY,CACdF,OAAQ,mBACRC,MAAO,mB,+ECFX,SAASE,GAAc7c,EAAKvP,EAEfqsB,EAAUzE,EAAmBmD,GAAW,IAFvB,MAAEuB,EAAK,MAAEC,EAAK,UAAEC,EAAS,WAAEC,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,GAExF3sB,EAMP,GALAsqB,GAAgB/a,GADXpK,EAAAA,GAAAA,GAAAnF,EAAAqlB,IAC0BuC,GAK3ByE,EAIA,YAHI9c,EAAMzO,MAAM8rB,UACZrd,EAAMsd,MAAMD,QAAUrd,EAAMzO,MAAM8rB,UAI1Crd,EAAMsd,MAAQtd,EAAMzO,MACpByO,EAAMzO,MAAQ,CAAC,EACf,MAAM,MAAE+rB,EAAK,MAAE/rB,GAAUyO,EASqB,IAAAud,EAIzBC,GARjBF,EAAMjlB,YACN9G,EAAM8G,UAAYilB,EAAMjlB,iBACjBilB,EAAMjlB,WAEb9G,EAAM8G,WAAailB,EAAMtC,mBACzBzpB,EAAMypB,gBAAuC,QAAxBuC,EAAGD,EAAMtC,uBAAe,IAAAuC,EAAAA,EAAI,iBAC1CD,EAAMtC,iBAEbzpB,EAAM8G,YAKN9G,EAAM+J,aAAsC,QAA1BkiB,EAAY,OAAThC,QAAS,IAATA,OAAS,EAATA,EAAWlgB,oBAAY,IAAAkiB,EAAAA,EAAI,kBACzCF,EAAMhiB,mBAGH/F,IAAVwnB,IACAO,EAAMnsB,EAAI4rB,QACAxnB,IAAVynB,IACAM,EAAMtmB,EAAIgmB,QACIznB,IAAd0nB,IACAK,EAAMjmB,MAAQ4lB,QAEC1nB,IAAf2nB,GDlCR,SAAsBI,EAAO7vB,GAAqD,IAA7CgwB,EAAOjwB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EAAGkvB,EAAMlvB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EAAGkwB,IAAWlwB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,KAAAA,UAAA,GAErE8vB,EAAMJ,WAAa,EAGnB,MAAMlwB,EAAO0wB,EAAcjB,GAAWG,GAEtCU,EAAMtwB,EAAK0vB,QAAU/f,EAAGtE,WAAWqkB,GAEnC,MAAMQ,EAAavgB,EAAGtE,UAAU5K,GAC1B0vB,EAAcxgB,EAAGtE,UAAUolB,GACjCH,EAAMtwB,EAAK2vB,OAAS,GAAHvrB,OAAM8rB,EAAU,KAAA9rB,OAAI+rB,EACzC,CCuBQQ,CAAaL,EAAOJ,EAAYC,EAAaC,GAAY,EAEjE,CCnDA,MAAMQ,GAAsB,IAAIvnB,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBC1BEymB,GAAYe,GAAuB,kBAARA,GAA0C,QAAtBA,EAAIrB,cCGzD,SAAStI,GAA4BhlB,EAAOH,EAAW0U,GACnD,MAAMsY,EAAY+B,GAA8B5uB,EAAOH,EAAW0U,GAClE,IAAK,MAAMpQ,KAAOnE,EACd,GAAIue,GAAcve,EAAMmE,KACpBoa,GAAc1e,EAAUsE,IAAO,CAI/B0oB,GAHuD,IAArC5lB,EAAmBJ,QAAQ1C,GACvC,OAASA,EAAI0qB,OAAO,GAAGC,cAAgB3qB,EAAI2T,UAAU,GACrD3T,GACiBnE,EAAMmE,EACjC,CAEJ,OAAO0oB,CACX,CCLA,MAAMkC,WAAyB3D,GAC3B5rB,WAAAA,GACI4d,SAAS9e,WACTyB,KAAK+N,KAAO,MACZ/N,KAAK6tB,UAAW,EAChB7tB,KAAKipB,2BAA6BnF,EACtC,CACA4G,sBAAAA,CAAuBzqB,EAAOmE,GAC1B,OAAOnE,EAAMmE,EACjB,CACAumB,qBAAAA,CAAsBle,EAAUrI,GAC5B,GAAI+C,EAAeX,IAAIpC,GAAM,CACzB,MAAM6qB,EAAchS,GAAoB7Y,GACxC,OAAO6qB,GAAcA,EAAY7hB,SAAe,CACpD,CAEA,OADAhJ,EAAOuqB,GAAoBnoB,IAAIpC,GAA0BA,EAAnBipB,GAAYjpB,GAC3CqI,EAASyiB,aAAa9qB,EACjC,CACA6gB,2BAAAA,CAA4BhlB,EAAOH,EAAW0U,GAC1C,OAAOyQ,GAA4BhlB,EAAOH,EAAW0U,EACzD,CACAwU,KAAAA,CAAM9C,EAAaH,EAAc9lB,GAC7B2tB,GAAc1H,EAAaH,EAAc/lB,KAAK6tB,SAAU5tB,EAAMmpB,kBAAmBnpB,EAAMqC,MAC3F,CACA2jB,cAAAA,CAAexZ,EAAUyZ,EAAaqG,EAAWpG,IC9BrD,SAAmBpmB,EAASmmB,EAAaiJ,EAAYhJ,GACjDmG,GAAWvsB,EAASmmB,OAAa5f,EAAW6f,GAC5C,IAAK,MAAM/hB,KAAO8hB,EAAYmI,MAC1BtuB,EAAQqvB,aAAcT,GAAoBnoB,IAAIpC,GAA0BA,EAAnBipB,GAAYjpB,GAAY8hB,EAAYmI,MAAMjqB,GAEvG,CD0BQirB,CAAU5iB,EAAUyZ,EAAaqG,EAAWpG,EAChD,CACAW,KAAAA,CAAMra,GACFzM,KAAK6tB,SAAWA,GAASphB,EAAS6iB,SAClCjS,MAAMyJ,MAAMra,EAChB,EEpCJ,MAAM8iB,GAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,GAAeC,GACpB,MAKqB,kBAAdA,IAIHA,EAAU3pB,SAAS,SAOvBypB,GAAqBzoB,QAAQ2oB,IAAc,GAIvC,QAASplB,KAAKolB,GAItB,CCtBA,MAAMC,GAAyBA,CAACD,EAAW3P,IAChC0P,GAAeC,GAChB,IAAIT,GAAiBlP,GACrB,IAAIkN,GAAkBlN,EAAS,CAC7B6P,gBAAiBF,IAAcppB,EAAAA,W,yBCN3C,MAAMupB,IAAc3wB,EAAAA,EAAAA,eAAc,CAAE4wB,QAAQ,I,eCA5C,MAAMC,IAAgC7wB,EAAAA,EAAAA,eAAc,CAAC,GCCrD,SAAS8wB,GAAuB9vB,GAC5B,MAAM,QAAEgD,EAAO,QAAEwhB,GCFrB,SAAgCxkB,EAAOyD,GACnC,GAAI8gB,GAAsBvkB,GAAQ,CAC9B,MAAM,QAAEgD,EAAO,QAAEwhB,GAAYxkB,EAC7B,MAAO,CACHgD,SAAqB,IAAZA,GAAqBmhB,GAAenhB,GACvCA,OACAqD,EACNme,QAASL,GAAeK,GAAWA,OAAUne,EAErD,CACA,OAAyB,IAAlBrG,EAAM+vB,QAAoBtsB,EAAU,CAAC,CAChD,CDTiCusB,CAAuBhwB,GAAO+B,EAAAA,EAAAA,YAAW8tB,KACtE,OAAOnsB,EAAAA,EAAAA,SAAQ,KAAM,CAAGV,UAASwhB,YAAY,CAACyL,GAA0BjtB,GAAUitB,GAA0BzL,IAChH,CACA,SAASyL,GAA0BC,GAC/B,OAAOjc,MAAMmQ,QAAQ8L,GAAQA,EAAKnqB,KAAK,KAAOmqB,CAClD,CEVA,MAAMC,GAAwBA,KAAA,CAC1B9tB,MAAO,CAAC,EACR8G,UAAW,CAAC,EACZ2iB,gBAAiB,CAAC,EAClBR,KAAM,CAAC,ICEX,SAAS8E,GAAkB5S,EAAQnE,EAAQrZ,GACvC,IAAK,MAAMmE,KAAOkV,EACTkF,GAAclF,EAAOlV,KAAUwoB,GAAoBxoB,EAAKnE,KACzDwd,EAAOrZ,GAAOkV,EAAOlV,GAGjC,CAQA,SAASksB,GAASrwB,EAAOulB,GACrB,MACMljB,EAAQ,CAAC,EAMf,OAFA+tB,GAAkB/tB,EALArC,EAAMqC,OAAS,CAAC,EAKErC,GACpCzC,OAAO+yB,OAAOjuB,EAdlB,SAA+Bd,EAAwBgkB,GAAa,IAApC,kBAAE4D,GAAmB5nB,EACjD,OAAOmC,EAAAA,EAAAA,SAAQ,KACX,MAAMoN,EDfgB,CAC1BzO,MAAO,CAAC,EACR8G,UAAW,CAAC,EACZ2iB,gBAAiB,CAAC,EAClBR,KAAM,CAAC,GCaH,OADAO,GAAgB/a,EAAOyU,EAAa4D,GAC7B5rB,OAAO+yB,OAAO,CAAC,EAAGxf,EAAMwa,KAAMxa,EAAMzO,QAC5C,CAACkjB,GACR,CAQyBgL,CAAuBvwB,EAAOulB,IAC5CljB,CACX,CACA,SAASmuB,GAAaxwB,EAAOulB,GAEzB,MAAMkL,EAAY,CAAC,EACbpuB,EAAQguB,GAASrwB,EAAOulB,GAoB9B,OAnBIvlB,EAAMmjB,OAA+B,IAAvBnjB,EAAM0wB,eAEpBD,EAAUE,WAAY,EAEtBtuB,EAAMuuB,WACFvuB,EAAMwuB,iBACFxuB,EAAMyuB,mBACF,OAEZzuB,EAAM0uB,aACa,IAAf/wB,EAAMmjB,KACA,OAAM,OAAAjhB,OACgB,MAAflC,EAAMmjB,KAAe,IAAM,WAEzB9c,IAAnBrG,EAAMgxB,WACLhxB,EAAMixB,OAASjxB,EAAMkxB,YAAclxB,EAAMmxB,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUpuB,MAAQA,EACXouB,CACX,CCpDA,MAAMW,GAAuBA,KAAAntB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EFFC,CAC1B5B,MAAO,CAAC,EACR8G,UAAW,CAAC,EACZ2iB,gBAAiB,CAAC,EAClBR,KAAM,CAAC,IEDmB,IAC1B8C,MAAO,CAAC,ICEZ,SAASiD,GAAYrxB,EAAOulB,EAAa+L,EAAW9B,GAChD,MAAM+B,GAAc7tB,EAAAA,EAAAA,SAAQ,KACxB,MAAMoN,EAAQsgB,KAEd,OADAzD,GAAc7c,EAAOyU,EAAaqI,GAAS4B,GAAYxvB,EAAMmpB,kBAAmBnpB,EAAMqC,QACtF4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO6M,EAAMsd,OAAK,IACd/rB,OAAK4B,EAAAA,EAAAA,GAAA,GAAO6M,EAAMzO,UAEvB,CAACkjB,IACJ,GAAIvlB,EAAMqC,MAAO,CACb,MAAMmvB,EAAY,CAAC,EACnBpB,GAAkBoB,EAAWxxB,EAAMqC,MAAOrC,GAC1CuxB,EAAYlvB,OAAK4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQutB,GAAcD,EAAYlvB,MACvD,CACA,OAAOkvB,CACX,CCfA,MAAME,GAAmB,IAAItqB,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAASuqB,GAAkBvtB,GACvB,OAAQA,EAAI4F,WAAW,UAClB5F,EAAI4F,WAAW,SAAmB,cAAR5F,GAC3BA,EAAI4F,WAAW,WACf5F,EAAI4F,WAAW,UACf5F,EAAI4F,WAAW,UACf5F,EAAI4F,WAAW,aACf0nB,GAAiBlrB,IAAIpC,EAC7B,CCpDA,IAAIwtB,GAAiBxtB,IAASutB,GAAkBvtB,GAoBhD,IAlB+B,oBADEytB,GAyBLC,QAAQ,0BAA0B1kB,WArB1DwkB,GAAiBxtB,GAAQA,EAAI4F,WAAW,OAAS2nB,GAAkBvtB,GAAOytB,GAAYztB,GAsB1F,CACA,MAAA2tB,IACI,CA5BJ,IAAiCF,GCIjC,SAASG,GAAUvC,EAAWxvB,EAAO4B,EAAGL,EAAqBpC,GAAsC,IAAzD,aAAE2mB,GAAevkB,EAAYywB,EAAkB1zB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,IAAAA,UAAA,GACrF,MAGMizB,GAHiBhC,GAAeC,GAChC6B,GACAb,IAC6BxwB,EAAO8lB,EAAc3mB,EAAUqwB,GAC5DyC,EDqBV,SAAqBjyB,EAAOkyB,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAM9tB,KAAOnE,EAQF,WAARmE,GAA4C,kBAAjBnE,EAAM8D,SAEjC6tB,GAAcxtB,KACU,IAAvB6tB,GAA+BN,GAAkBvtB,KAChD+tB,IAAUR,GAAkBvtB,IAE7BnE,EAAiB,WACdmE,EAAI4F,WAAW,aACnBkoB,EAAc9tB,GACVnE,EAAMmE,IAGlB,OAAO8tB,CACX,CC5C0BE,CAAYnyB,EAA4B,kBAAdwvB,EAAwBwC,GAClEI,EAAe5C,IAAcppB,EAAAA,UAAQnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQguB,GAAkBV,GAAW,IAAE3vB,QAAQ,CAAC,GAMrF,SAAEP,GAAarB,EACf2F,GAAmBjC,EAAAA,EAAAA,SAAQ,IAAO6a,GAAcld,GAAYA,EAASyE,MAAQzE,EAAW,CAACA,IAC/F,OAAOkB,EAAAA,EAAAA,eAAcitB,GAASvrB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvBmuB,GAAY,IACf/wB,SAAUsE,IAElB,C,0BClBA,SAAS0sB,GAAmB50B,GACxB,OAAO8gB,GAAc9gB,GAASA,EAAMqI,MAAQrI,CAChD,C,wCCOA,SAAS60B,GAAiBtyB,EAAOyD,EAAS2hB,EAAiBmN,GACvD,MAAMzuB,EAAS,CAAC,EACV0uB,EAAeD,EAAmBvyB,EAAO,CAAC,GAChD,IAAK,MAAMmE,KAAOquB,EACd1uB,EAAOK,GAAOkuB,GAAmBG,EAAaruB,IAElD,IAAI,QAAEnB,EAAO,QAAEwhB,GAAYxkB,EAC3B,MAAMyyB,EAA0BlO,GAAsBvkB,GAChD0yB,EAAkBjO,GAAczkB,GAClCyD,GACAivB,IACCD,IACiB,IAAlBzyB,EAAM+vB,eACU1pB,IAAZrD,IACAA,EAAUS,EAAQT,cACNqD,IAAZme,IACAA,EAAU/gB,EAAQ+gB,UAE1B,IAAImO,IAA4BvN,IACE,IAA5BA,EAAgBpiB,QAEtB2vB,EAA4BA,IAAyC,IAAZ3vB,EACzD,MAAM4vB,EAAeD,EAA4BnO,EAAUxhB,EAC3D,GAAI4vB,GACwB,mBAAjBA,IACN1O,GAAoB0O,GAAe,CACpC,MAAMC,EAAO5e,MAAMmQ,QAAQwO,GAAgBA,EAAe,CAACA,GAC3D,IAAK,IAAI/1B,EAAI,EAAGA,EAAIg2B,EAAKt0B,OAAQ1B,IAAK,CAClC,MAAM8R,EAAWiW,GAAwB5kB,EAAO6yB,EAAKh2B,IACrD,GAAI8R,EAAU,CACV,MAAM,cAAEmkB,EAAa,WAAE3I,GAA0Bxb,EAAX6O,GAAM9W,EAAAA,GAAAA,GAAKiI,EAAQiY,IACzD,IAAK,MAAMziB,KAAOqZ,EAAQ,CACtB,IAAIuV,EAAcvV,EAAOrZ,GACzB,GAAI8P,MAAMmQ,QAAQ2O,GAAc,CAQ5BA,EAAcA,EAHAJ,EACRI,EAAYx0B,OAAS,EACrB,EAEV,CACoB,OAAhBw0B,IACAjvB,EAAOK,GAAO4uB,EAEtB,CACA,IAAK,MAAM5uB,KAAO2uB,EACdhvB,EAAOK,GAAO2uB,EAAc3uB,EAEpC,CACJ,CACJ,CACA,OAAOL,CACX,CACA,MAAMkvB,GAAsBC,GAAW,CAACjzB,EAAOb,KAC3C,MAAMsE,GAAU1B,EAAAA,EAAAA,YAAW8tB,IACrBzK,GAAkBrjB,EAAAA,EAAAA,YAAWqC,GAAAA,GAC7B8uB,EAAOA,IAjEjB,SAAkB3xB,EAAsDvB,EAAOyD,EAAS2hB,GAAiB,IAAtF,4BAAEJ,EAA2B,kBAAEmO,GAAoB5xB,EAKlE,MAJc,CACVukB,aAAcwM,GAAiBtyB,EAAOyD,EAAS2hB,EAAiBJ,GAChEiB,YAAakN,IAGrB,CA2DuBC,CAAUH,EAAQjzB,EAAOyD,EAAS2hB,GACrD,OAAOjmB,EAAW+zB,KAAS5vB,EAAAA,GAAAA,GAAY4vB,ICvErCG,GAAmCL,GAAmB,CACxDhO,4BAA2B,GAC3BmO,kBAAmBhD,KCFjBmD,GAAkCN,GAAmB,CACvDhO,4BAA6BA,GAC7BmO,kBAAmB/B,KCNvB,MAAMmC,GAAwBv2B,OAAOw2B,IAAI,yBCAzC,SAASC,GAAY7xB,GACjB,OAAQA,GACW,kBAARA,GACPrE,OAAOkC,UAAUmH,eAAe1J,KAAK0E,EAAK,UAClD,CCGA,SAAS8xB,GAAanO,EAAahR,EAAeof,GAC9C,OAAOC,EAAAA,EAAAA,aAAapnB,IACZA,GACA+Y,EAAYsO,SAAWtO,EAAYsO,QAAQrnB,GAE3C+H,IACI/H,EACA+H,EAAcsS,MAAMra,GAGpB+H,EAAckT,WAGlBkM,IAC2B,oBAAhBA,EACPA,EAAYnnB,GAEPinB,GAAYE,KACjBA,EAAYzzB,QAAUsM,KAQlC,CAAC+H,EAAeof,GACpB,CChCA,MACMG,GAA+B,QAAU1G,GADjB,kBCIxB2G,IAA2B/0B,EAAAA,EAAAA,eAAc,CAAC,G,cCIhD,SAASg1B,GAAiBxE,EAAWjK,EAAavlB,EAAOi0B,EAAqBC,GAA2B,IAAAC,EAAAC,EAAAC,EAAAC,EACrG,MAAQ/f,cAAenU,IAAW2B,EAAAA,EAAAA,YAAW8tB,IACvC0E,GAAcxyB,EAAAA,EAAAA,YAAW4tB,IACzBvK,GAAkBrjB,EAAAA,EAAAA,YAAWqC,GAAAA,GAC7BihB,GAAsBtjB,EAAAA,EAAAA,YAAWhD,GAAAA,GAAqBK,cACtDo1B,GAAmB3yB,EAAAA,EAAAA,QAAO,MAIhCoyB,EACIA,GACIM,EAAYE,UACfD,EAAiBt0B,SAAW+zB,IAC7BO,EAAiBt0B,QAAU+zB,EAAoBzE,EAAW,CACtDjK,cACAnlB,SACAJ,QACAolB,kBACAE,wBAAuBF,IACW,IAA5BA,EAAgBpiB,QAEtBqiB,yBAGR,MAAM9Q,EAAgBigB,EAAiBt0B,QAKjCw0B,GAA2B3yB,EAAAA,EAAAA,YAAWgyB,KACxCxf,GACCA,EAAc2R,aACfgO,GACwB,SAAvB3f,EAAczG,MAA0C,QAAvByG,EAAczG,MA+DxD,SAA8ByG,EAAevU,EAAOk0B,EAA2BS,GAC3E,MAAM,SAAE/H,EAAQ,OAAEnJ,EAAM,KAAEN,EAAI,gBAAEyR,EAAe,aAAEC,EAAY,WAAEC,EAAU,gBAAEC,GAAqB/0B,EAChGuU,EAAc2R,WAAa,IAAIgO,EAA0B3f,EAAcuR,aAAc9lB,EAAM,8BACrFqG,EACA2uB,GAAyBzgB,EAAcnU,SAC7CmU,EAAc2R,WAAW+O,WAAW,CAChCrI,WACAnJ,SACAyR,oBAAqBte,QAAQuM,IAAUyR,GAAmBnB,GAAYmB,GACtErgB,gBAQA4gB,cAAiC,kBAAX1R,EAAsBA,EAAS,OACrDkR,yBACAS,UAAWL,EACXF,eACAC,cAER,CArFQO,CAAqBb,EAAiBt0B,QAASF,EAAOk0B,EAA2BQ,GAErF,MAAM7M,GAAYhmB,EAAAA,EAAAA,SAAO,IACzBG,EAAAA,EAAAA,oBAAmB,KAKXuS,GAAiBsT,EAAU3nB,SAC3BqU,EAAczB,OAAO9S,EAAOolB,KAOpC,MAAMkQ,EAAoBt1B,EAAM8zB,IAC1ByB,GAAe1zB,EAAAA,EAAAA,QAAO+U,QAAQ0e,MACD,QAA/BnB,GAACC,EAAArtB,QAAOyuB,+BAAuB,IAAArB,GAA9BA,EAAAj3B,KAAAk3B,EAAiCkB,MACA,QADkBjB,GACpDC,EAAAvtB,QAAO0uB,mCAA2B,IAAApB,OAAA,EAAlCA,EAAAn3B,KAAAo3B,EAAqCgB,KAyCzC,OAxCA32B,EAAAA,GAAAA,GAA0B,KACjB4V,IAELsT,EAAU3nB,SAAU,EACpB6G,OAAO2uB,iBAAkB,EACzBnhB,EAAcoU,iBACdpU,EAAc4W,0BAWVoK,EAAar1B,SAAWqU,EAAcohB,gBACtCphB,EAAcohB,eAAeC,qBAGrC92B,EAAAA,EAAAA,WAAU,KACDyV,KAEAghB,EAAar1B,SAAWqU,EAAcohB,gBACvCphB,EAAcohB,eAAeC,iBAE7BL,EAAar1B,UAEb0e,eAAe,KAAM,IAAAiX,EAAAC,EACiB,QAAlCD,GAAAC,EAAA/uB,QAAOgvB,mCAA2B,IAAAF,GAAlCA,EAAA34B,KAAA44B,EAAqCR,KAEzCC,EAAar1B,SAAU,GAM3BqU,EAAcwT,sBAAmB1hB,KAE9BkO,CACX,CAyBA,SAASygB,GAAyBzgB,GAC9B,GAAKA,EAEL,OAAiD,IAA1CA,EAAcsL,QAAQ6P,gBACvBnb,EAAc2R,WACd8O,GAAyBzgB,EAAcnU,OACjD,CC3GA,SAAS41B,GAAsBxG,GAAwF,IAAAjuB,EAAA00B,EAAA,IAA7E,mBAAEjE,GAAqB,GAAO1zB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG43B,EAAiB53B,UAAAC,OAAA,EAAAD,UAAA,QAAA+H,EAAE4tB,EAAmB31B,UAAAC,OAAA,EAAAD,UAAA,QAAA+H,EACjH6vB,GC5BJ,SAAsBzQ,GAClB,IAAK,MAAMthB,KAAOshB,EACd/B,GAAmBvf,IAAIF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChByf,GAAmBvf,IACnBshB,EAASthB,GAGxB,CDqByBgyB,CAAaD,GAClC,MAAME,EAAiB7G,GAAeC,GAChC8D,GACAD,GACN,SAASgD,EAAmBr2B,EAAO2zB,GAK/B,IAAI2C,EACJ,MAAMC,GAActyB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACblC,EAAAA,EAAAA,YAAWhD,GAAAA,IACXiB,GAAK,IACR4sB,SAAU4J,GAAYx2B,MAEpB,SAAEb,GAAao3B,EACf9yB,EAAUqsB,GAAuB9vB,GACjCulB,EAAc6Q,EAAep2B,EAAOb,GAC1C,IAAKA,GAAYP,GAAAA,EAAW,EA+BpC,YACqBmD,EAAAA,EAAAA,YAAW4tB,IAAaC,OAKrCvd,CAQR,CA5CYokB,GACA,MAAMC,EA4ClB,SAAoC12B,GAChC,MAAM,KAAEmjB,EAAI,OAAEM,GAAWC,GACzB,IAAKP,IAASM,EACV,MAAO,CAAC,EACZ,MAAMkT,GAAQ1yB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQkf,GAASM,GAC/B,MAAO,CACH6S,cAAmB,OAAJnT,QAAI,IAAJA,GAAAA,EAAMQ,UAAU3jB,IAAgB,OAANyjB,QAAM,IAANA,GAAAA,EAAQE,UAAU3jB,GACrD22B,EAASL,mBACTjwB,EACNuwB,eAAgBD,EAASC,eAEjC,CAvDqCC,CAA2BN,GACpDD,EAAgBI,EAAiBJ,cAOjC7yB,EAAQ8Q,cAAgByf,GAAiBxE,EAAWjK,EAAagR,EAAgBtC,EAAqByC,EAAiBE,eAC3H,CAKA,OAAQE,EAAAA,GAAAA,MAAKjH,GAAcxrB,SAAU,CAAE5G,MAAOgG,EAASpC,SAAU,CAACi1B,GAAiB7yB,EAAQ8Q,eAAiBzR,EAAAA,GAAAA,KAAIwzB,GAAaryB,EAAAA,EAAAA,GAAA,CAAIsQ,cAAe9Q,EAAQ8Q,eAAkBgiB,IAAqB,KAAMxE,GAAUvC,EAAWxvB,EAAO0zB,GAAanO,EAAa9hB,EAAQ8Q,cAAeof,GAAcpO,EAAapmB,EAAU6yB,KAC3T,CACAqE,EAAmBU,YAAc,UAAH70B,OAAkC,kBAAdstB,EAC5CA,EAAS,UAAAttB,OACwC,QADxCX,EACsB,QADtB00B,EACCzG,EAAUuH,mBAAW,IAAAd,EAAAA,EAAIzG,EAAUvmB,YAAI,IAAA1H,EAAAA,EAAI,GAAE,MAC7D,MAAMy1B,GAA4BC,EAAAA,EAAAA,YAAWZ,GAE7C,OADAW,EAA0BzD,IAAyB/D,EAC5CwH,CACX,CACA,SAASR,GAAWrnB,GAAe,IAAd,SAAEyd,GAAUzd,EAC7B,MAAM+nB,GAAgBn1B,EAAAA,EAAAA,YAAW1C,GAAAA,GAAoBqC,GACrD,OAAOw1B,QAA8B7wB,IAAbumB,EAClBsK,EAAgB,IAAMtK,EACtBA,CACV,CE3EA,SAASuK,GAAkBjB,EAAmBjC,GAC1C,GAAqB,qBAAVmD,MACP,OAAOpB,GAMX,MAAMqB,EAAiB,IAAI/yB,IACrBgzB,EAAUA,CAAC9H,EAAW3P,IACjBmW,GAAsBxG,EAAW3P,EAASqW,EAAmBjC,GAWxE,OAAO,IAAImD,MANuBG,CAAC/H,EAAW3P,IAInCyX,EAAQ9H,EAAW3P,GAEc,CAMxC/Z,IAAKA,CAAC0xB,EAASrzB,IACC,WAARA,EACOmzB,GAIND,EAAe9wB,IAAIpC,IACpBkzB,EAAezzB,IAAIO,EAAK6xB,GAAsB7xB,OAAKkC,EAAW6vB,EAAmBjC,IAE9EoD,EAAevxB,IAAI3B,KAGtC,CCxCA,SAASszB,GAAeljB,EAAesQ,EAAY3hB,GAC/C,MAAMlD,EAAQuU,EAAcyV,WAC5B,OAAOpF,GAAwB5kB,EAAO6kB,OAAuBxe,IAAXnD,EAAuBA,EAASlD,EAAMkD,OAAQqR,EACpG,CCLA,SAASmjB,GAAmBvN,EAAYhmB,GAAK,IAAA5C,EAAAo2B,EACzC,OAC2B,QAD3Bp2B,EAAyB,QAAzBo2B,EAAkB,OAAVxN,QAAU,IAAVA,OAAU,EAAVA,EAAahmB,UAAI,IAAAwzB,EAAAA,EACX,OAAVxN,QAAU,IAAVA,OAAU,EAAVA,EAAsB,eAAC,IAAA5oB,EAAAA,EACvB4oB,CACR,CCJA,MAAMyN,GAAqBnwB,GAChBwM,MAAMmQ,QAAQ3c,G,kCCOzB,SAASowB,GAAetjB,EAAepQ,EAAK1G,GACpC8W,EAAcmV,SAASvlB,GACvBoQ,EAAcC,SAASrQ,GAAKP,IAAInG,GAGhC8W,EAAckV,SAAStlB,EAAKmR,GAAY7X,GAEhD,CACA,SAASq6B,GAA6BrwB,GAElC,OAAOmwB,GAAkBnwB,GAAKA,EAAEA,EAAElJ,OAAS,IAAM,EAAIkJ,CACzD,CChBA,SAASswB,GAAqBxjB,EAAepQ,GACzC,MAAMuiB,EAAanS,EAAcC,SAAS,cAK1C,GCP6B/W,EDODipB,ECNrB9P,QAAQ2H,GAAc9gB,IAAUA,EAAM0U,KDOzC,OAAOuU,EAAWvU,IAAIhO,GAErB,IAAKuiB,GAAcrW,GAAmB2nB,WAAY,CACnD,MAAMC,EAAgB,IAAI5nB,GAAmB2nB,WAAW,QACxDzjB,EAAckV,SAAS,aAAcwO,GACrCA,EAAc9lB,IAAIhO,EACtB,CCdJ,IAAiC1G,CDejC,CEfA,SAASy6B,GAAqB3jB,GAC1B,OAAOA,EAAcvU,MAAM8zB,GAC/B,CCJA,SAASqE,GAAqBtY,GAC1BA,EAAQuY,SAAW,EACnBvY,EAAQ/R,IACZ,CCIA,MAAMuqB,GAAmBA,CAACnhB,EAAGC,IAAO1P,GAAM0P,EAAED,EAAEzP,IACxC6wB,GAAO,mBAAAtN,EAAA1sB,UAAAC,OAAIg6B,EAAY,IAAAtkB,MAAA+W,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZqN,EAAYrN,GAAA5sB,UAAA4sB,GAAA,OAAKqN,EAAannB,OAAOinB,GAAiB,ECDjEG,GAAyBC,GAAsB,IAAVA,EAErCC,GAAyBC,GAAiBA,EAAe,ICTzDC,GAAmB,CACrBnV,OAAQ,EACRoV,WAAY,EACZC,MAAO,GCFX,SAASC,GAAS75B,EAAG85B,EAAGp8B,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDsC,EAAc,GAAT85B,EAAI95B,GAAStC,EACzBA,EAAI,GACGo8B,EACPp8B,EAAI,EAAI,EACDsC,GAAK85B,EAAI95B,IAAM,EAAI,EAAItC,GAAK,EAChCsC,CACX,CCbA,SAAS+5B,GAAa/hB,EAAGC,GACrB,OAAQjY,GAAOA,EAAI,EAAIiY,EAAID,CAC/B,CCSA,MAAMgiB,GAAiBA,CAACxuB,EAAMC,EAAIlD,KAC9B,MAAM0xB,EAAWzuB,EAAOA,EAClB0uB,EAAO3xB,GAAKkD,EAAKA,EAAKwuB,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAI9xB,KAAKoB,KAAK0wB,IAE9BC,GAAa,CAACzhB,GAAKL,GAAMS,IAE/B,SAASshB,GAAOlhB,GACZ,MAAMtK,GAFYrG,EAEQ2Q,EAFFihB,GAAWprB,KAAMH,GAASA,EAAK1D,KAAK3C,KAA1CA,MAIlB,GADQmP,QAAQ9I,GAAO,IAAF5L,OAAMkW,EAAK,yEAC3BxB,QAAQ9I,GACT,OAAO,EACX,IAAIyrB,EAAQzrB,EAAKb,MAAMmL,GAKvB,OAJItK,IAASkK,KAETuhB,EFZR,SAAmBh4B,GAAwC,IAAvC,IAAE0W,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEjL,GAAO3L,EACrD0W,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIX,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAKQ,EAGA,CACD,MAAM8gB,EAAI7gB,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrChZ,EAAI,EAAIiZ,EAAY6gB,EAC1BxhB,EAAMuhB,GAAS75B,EAAG85B,EAAG/gB,EAAM,EAAI,GAC/BR,EAAQshB,GAAS75B,EAAG85B,EAAG/gB,GACvBP,EAAOqhB,GAAS75B,EAAG85B,EAAG/gB,EAAM,EAAI,EACpC,MAVIT,EAAMC,EAAQC,EAAOS,EAWzB,MAAO,CACHX,IAAKlQ,KAAKiP,MAAY,IAANiB,GAChBC,MAAOnQ,KAAKiP,MAAc,IAARkB,GAClBC,KAAMpQ,KAAKiP,MAAa,IAAPmB,GACjBxK,QAER,CEbgBssB,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAWA,CAAC/uB,EAAMC,KACpB,MAAM+uB,EAAWJ,GAAO5uB,GAClBivB,EAASL,GAAO3uB,GACtB,IAAK+uB,IAAaC,EACd,OAAOV,GAAavuB,EAAMC,GAE9B,MAAMivB,GAAO31B,EAAAA,EAAAA,GAAA,GAAQy1B,GACrB,OAAQjyB,IACJmyB,EAAQpiB,IAAM0hB,GAAeQ,EAASliB,IAAKmiB,EAAOniB,IAAK/P,GACvDmyB,EAAQniB,MAAQyhB,GAAeQ,EAASjiB,MAAOkiB,EAAOliB,MAAOhQ,GAC7DmyB,EAAQliB,KAAOwhB,GAAeQ,EAAShiB,KAAMiiB,EAAOjiB,KAAMjQ,GAC1DmyB,EAAQ1sB,MAAQzC,EAAUivB,EAASxsB,MAAOysB,EAAOzsB,MAAOzF,GACjD8P,GAAKpO,UAAUywB,KC1CxBC,GAAkB,IAAI1yB,IAAI,CAAC,OAAQ,WCSzC,SAASsD,GAAUyM,EAAGC,GAClB,OAAQjY,GAAM46B,EAAY5iB,EAAGC,EAAGjY,EACpC,CACA,SAAS66B,GAAS7iB,GACd,MAAiB,kBAANA,EACAzM,GAEW,kBAANyM,EACLhN,EAAmBgN,GACpB+hB,GACA7gB,GAAMhO,KAAK8M,GACPuiB,GACAO,GAEL/lB,MAAMmQ,QAAQlN,GACZ+iB,GAEW,kBAAN/iB,EACLkB,GAAMhO,KAAK8M,GAAKuiB,GAAWS,GAE/BjB,EACX,CACA,SAASgB,GAAS/iB,EAAGC,GACjB,MAAMoC,EAAS,IAAIrC,GACbijB,EAAY5gB,EAAOhb,OACnB67B,EAAaljB,EAAE9R,IAAI,CAACqC,EAAG5K,IAAMk9B,GAAStyB,EAATsyB,CAAYtyB,EAAG0P,EAAEta,KACpD,OAAQqC,IACJ,IAAK,IAAIrC,EAAI,EAAGA,EAAIs9B,EAAWt9B,IAC3B0c,EAAO1c,GAAKu9B,EAAWv9B,GAAGqC,GAE9B,OAAOqa,EAEf,CACA,SAAS2gB,GAAUhjB,EAAGC,GAClB,MAAMoC,GAAMtV,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQiT,GAAMC,GACpBijB,EAAa,CAAC,EACpB,IAAK,MAAMj2B,KAAOoV,OACClT,IAAX6Q,EAAE/S,SAAiCkC,IAAX8Q,EAAEhT,KAC1Bi2B,EAAWj2B,GAAO41B,GAAS7iB,EAAE/S,GAAX41B,CAAiB7iB,EAAE/S,GAAMgT,EAAEhT,KAGrD,OAAQsD,IACJ,IAAK,MAAMtD,KAAOi2B,EACd7gB,EAAOpV,GAAOi2B,EAAWj2B,GAAKsD,GAElC,OAAO8R,EAEf,CAaA,MAAMygB,GAAaA,CAACzc,EAAQC,KACxB,MAAM6c,EAAW5gB,GAAQL,kBAAkBoE,GACrC8c,EAAc3hB,GAAoB4E,GAClCgd,EAAc5hB,GAAoB6E,GAIxC,OAHuB8c,EAAYxhB,QAAQC,IAAIxa,SAAWg8B,EAAYzhB,QAAQC,IAAIxa,QAC9E+7B,EAAYxhB,QAAQV,MAAM7Z,SAAWg8B,EAAYzhB,QAAQV,MAAM7Z,QAC/D+7B,EAAYxhB,QAAQ9L,OAAOzO,QAAUg8B,EAAYzhB,QAAQ9L,OAAOzO,OAE3Ds7B,GAAgBtzB,IAAIgX,KACpBgd,EAAYz2B,OAAOvF,QACnBs7B,GAAgBtzB,IAAIiX,KAChB8c,EAAYx2B,OAAOvF,OD1EpC,SAAuBgf,EAAQC,GAC3B,OAAIqc,GAAgBtzB,IAAIgX,GACZre,GAAOA,GAAK,EAAIqe,EAASC,EAGzBte,GAAOA,GAAK,EAAIse,EAASD,CAEzC,CCoEmBid,CAAcjd,EAAQC,GAE1B8a,GAAK2B,GA1BpB,SAAoB1c,EAAQC,GACxB,MAAMid,EAAgB,GAChBC,EAAW,CAAEtiB,MAAO,EAAGW,IAAK,EAAG/L,OAAQ,GAC7C,IAAK,IAAInQ,EAAI,EAAGA,EAAI2gB,EAAO1Z,OAAOvF,OAAQ1B,IAAK,KAAA89B,EAC3C,MAAM7sB,EAAO0P,EAAOxE,MAAMnc,GACpB+9B,EAAcrd,EAAOzE,QAAQhL,GAAM4sB,EAAS5sB,IAC5C+sB,EAAwC,QAA7BF,EAAGpd,EAAOzZ,OAAO82B,UAAY,IAAAD,EAAAA,EAAI,EAClDF,EAAc59B,GAAKg+B,EACnBH,EAAS5sB,IACb,CACA,OAAO2sB,CACX,CAe6BK,CAAWR,EAAaC,GAAcA,EAAYz2B,QAASu2B,IAGlE,mBAAFn4B,OAAqBqb,EAAM,WAAArb,OAAUsb,EAAM,4KAChDyb,GAAa1b,EAAQC,KCpFpC,SAASud,GAAIrwB,EAAMC,EAAIzL,GACnB,GAAoB,kBAATwL,GACO,kBAAPC,GACM,kBAANzL,EACP,OAAOuL,EAAUC,EAAMC,EAAIzL,GAG/B,OADc66B,GAASrvB,EAChBswB,CAAMtwB,EAAMC,EACvB,CCRA,MAAMswB,GAAmBnoB,IACrB,MAAMooB,EAAgB35B,IAAA,IAAC,UAAEyP,GAAWzP,EAAA,OAAKuR,EAAO9B,IAChD,MAAO,CACHgR,MAAO,eAAC3O,IAAS/U,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,KAAAA,UAAA,GAAO,OAAKiV,GAAMT,OAAOooB,EAAe7nB,EAAU,EACnE+N,KAAMA,IAAM5N,GAAY0nB,GAKxB9nB,IAAKA,IAAOd,GAAUrB,aAAeqB,GAAUtB,UAAY0N,GAAKtL,QCZlE+nB,GAAuB,SAACC,EAAQhD,GAEjC,IADLiD,EAAU/8B,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,GAELg9B,EAAS,GACb,MAAMC,EAAYj0B,KAAKkD,IAAIlD,KAAKiP,MAAM6hB,EAAWiD,GAAa,GAC9D,IAAK,IAAIx+B,EAAI,EAAGA,EAAI0+B,EAAW1+B,IAC3By+B,GAAUh0B,KAAKiP,MAAoC,IAA9B6kB,EAAOv+B,GAAK0+B,EAAY,KAAe,IAAQ,KAExE,MAAO,UAAPr5B,OAAiBo5B,EAAOxjB,UAAU,EAAGwjB,EAAO/8B,OAAS,GAAE,IAC3D,ECLMi9B,GAAuB,IAC7B,SAASC,GAAsBC,GAC3B,IAAItD,EAAW,EAEf,IAAItnB,EAAQ4qB,EAAUpS,KAAK8O,GAC3B,MAAQtnB,EAAM6qB,MAAQvD,EAAWoD,IAC7BpD,GAHa,GAIbtnB,EAAQ4qB,EAAUpS,KAAK8O,GAE3B,OAAOA,GAAYoD,GAAuBI,IAAWxD,CACzD,CCXA,SAASyD,GAAsBC,EAAcl/B,EAAGsD,GAC5C,MAAM67B,EAAQz0B,KAAKkD,IAAI5N,EAFI,EAEwB,GACnD,OAAO4iB,GAAkBtf,EAAU47B,EAAaC,GAAQn/B,EAAIm/B,EAChE,CCNA,MAAMC,GAAiB,CAEnBC,UAAW,IACXC,QAAS,GACTC,KAAM,EACN1c,SAAU,EAEV2Y,SAAU,IACVgE,OAAQ,GACRC,eAAgB,GAEhBC,UAAW,CACPC,SAAU,IACVpvB,QAAS,GAEbqvB,UAAW,CACPD,SAAU,KACVpvB,QAAS,IAGbsvB,YAAa,IACbC,YAAa,GACbC,WAAY,IACZC,WAAY,GCpBVC,GAAU,KAChB,SAASC,GAAUv7B,GAA0I,IACrJw7B,EACAC,GAFY,SAAE5E,EAAW4D,GAAe5D,SAAQ,OAAEgE,EAASJ,GAAeI,OAAM,SAAE3c,EAAWuc,GAAevc,SAAQ,KAAE0c,EAAOH,GAAeG,MAAO56B,EAGnIi3B,GAAsBwD,GAAeU,aACzD,IAAIO,EAAe,EAAIb,EAIvBa,EAAelwB,EAAMivB,GAAeW,WAAYX,GAAeY,WAAYK,GAC3E7E,EAAWrrB,EAAMivB,GAAeS,YAAaT,GAAeU,YAAahE,GAAsBN,IAC3F6E,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClClsB,EAAQosB,EAAmB/E,EAC3BlhB,EAAIimB,EAAmB1d,EACvBtI,EAAIimB,GAAgBF,EAAcD,GAClC7lB,EAAI9P,KAAK+1B,KAAKtsB,GACpB,OAAO8rB,GAAW3lB,EAAIC,EAAKC,GAE/B4lB,EAAcE,IACV,MACMnsB,EADmBmsB,EAAeD,EACP7E,EAC3BkF,EAAIvsB,EAAQ0O,EAAWA,EACvB1iB,EAAIuK,KAAKi2B,IAAIN,EAAc,GAAK31B,KAAKi2B,IAAIL,EAAc,GAAK9E,EAC5DoF,EAAIl2B,KAAK+1B,KAAKtsB,GACd8G,EAAIulB,GAAgB91B,KAAKi2B,IAAIL,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBL,GAAU,GAAK,EAAI,KACzCS,EAAIvgC,GAAKygC,GAAM3lB,KAOtCklB,EAAYG,GACE51B,KAAK+1B,KAAKH,EAAe9E,KACxB8E,EAAezd,GAAY2Y,EAAW,GAC1C,KAEX4E,EAAcE,GACA51B,KAAK+1B,KAAKH,EAAe9E,IACIA,EAAWA,GAAvC3Y,EAAWyd,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYS,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAI5gC,EAAI,EAAGA,EAAI8gC,GAAgB9gC,IAChC6gC,GAAkBX,EAASW,GAAUV,EAAWU,GAEpD,OAAOA,CACX,CAzByBE,CAAgBb,EAAUC,EAD1B,EAAI5E,GAGzB,GADAA,EAAWI,GAAsBJ,GAC7Bxe,MAAMsjB,GACN,MAAO,CACHjB,UAAWD,GAAeC,UAC1BC,QAASF,GAAeE,QACxB9D,YAGH,CACD,MAAM6D,EAAY30B,KAAKi2B,IAAIL,EAAc,GAAKf,EAC9C,MAAO,CACHF,YACAC,QAAwB,EAAfe,EAAmB31B,KAAKoB,KAAKyzB,EAAOF,GAC7C7D,WAER,CACJ,CACA,MAAMuF,GAAiB,GAQvB,SAASP,GAAgBF,EAAcD,GACnC,OAAOC,EAAe51B,KAAKoB,KAAK,EAAIu0B,EAAeA,EACvD,CCzEA,MAAMY,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAale,EAAS/hB,GAC3B,OAAOA,EAAK8lB,KAAMzf,QAAyBkC,IAAjBwZ,EAAQ1b,GACtC,CAuCA,SAAS65B,KAAgG,IAAzFC,EAAuB3/B,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG09B,GAAeK,eAAgBD,EAAM99B,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG09B,GAAeI,OAC7F,MAAMvc,EAA6C,kBAA5Boe,EACjB,CACE5B,eAAgB4B,EAChBpoB,UAAW,CAAC,EAAG,GACfumB,UAEF6B,EACN,IAAI,UAAE3B,EAAS,UAAEE,GAAc3c,EAC/B,MAAMtC,EAASsC,EAAQhK,UAAU,GAC3B2H,EAASqC,EAAQhK,UAAUgK,EAAQhK,UAAUtX,OAAS,GAKtDuS,EAAQ,CAAE6qB,MAAM,EAAOl+B,MAAO8f,IAC9B,UAAE0e,EAAS,QAAEC,EAAO,KAAEC,EAAI,SAAE/D,EAAQ,SAAE3Y,EAAQ,uBAAEye,GAtD1D,SAA0Bre,GACtB,IAAIse,GAAal6B,EAAAA,EAAAA,GAAA,CACbwb,SAAUuc,GAAevc,SACzBwc,UAAWD,GAAeC,UAC1BC,QAASF,GAAeE,QACxBC,KAAMH,GAAeG,KACrB+B,wBAAwB,GACrBre,GAGP,IAAKke,GAAale,EAASie,KACvBC,GAAale,EAASge,IACtB,GAAIhe,EAAQwc,eAAgB,CACxB,MAAMA,EAAiBxc,EAAQwc,eACzB56B,EAAQ,EAAI6F,KAAKC,IAAwB,IAAjB80B,GACxBJ,EAAYx6B,EAAOA,EACnBy6B,EAAU,EACZnvB,EAAM,IAAM,EAAG,GAAK8S,EAAQuc,QAAU,IACtC90B,KAAKoB,KAAKuzB,GACdkC,GAAal6B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNk6B,GAAa,IAChBhC,KAAMH,GAAeG,KACrBF,YACAC,WAER,KACK,CACD,MAAMkC,EAAUtB,GAAWjd,GAC3Bse,GAAal6B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNk6B,GACAC,GAAO,IACVjC,KAAMH,GAAeG,OAEzBgC,EAAcD,wBAAyB,CAC3C,CAEJ,OAAOC,CACX,CAiBsFE,EAAgBp6B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC7F4b,GAAO,IACVJ,UAAWiZ,GAAsB7Y,EAAQJ,UAAY,MAEnD6e,EAAkB7e,GAAY,EAC9Bwd,EAAef,GAAW,EAAI50B,KAAKoB,KAAKuzB,EAAYE,IACpDoC,EAAe/gB,EAASD,EACxBihB,EAAsB9F,GAAsBpxB,KAAKoB,KAAKuzB,EAAYE,IAQlEsC,EAAkBn3B,KAAKc,IAAIm2B,GAAgB,EAOjD,IAAIG,EACJ,GAPApC,IAAcA,EAAYmC,EACpBzC,GAAeM,UAAUC,SACzBP,GAAeM,UAAUnvB,SAC/BqvB,IAAcA,EAAYiC,EACpBzC,GAAeQ,UAAUD,SACzBP,GAAeQ,UAAUrvB,SAE3B8vB,EAAe,EAAG,CAClB,MAAM0B,EAAcvB,GAAgBoB,EAAqBvB,GAEzDyB,EAAiB9hC,IACb,MAAMmgC,EAAWz1B,KAAK+1B,KAAKJ,EAAeuB,EAAsB5hC,GAChE,OAAQ4gB,EACJuf,IACOuB,EACCrB,EAAeuB,EAAsBD,GACrCI,EACAr3B,KAAKs3B,IAAID,EAAc/hC,GACvB2hC,EAAej3B,KAAKu3B,IAAIF,EAAc/hC,IAE1D,MACK,GAAqB,IAAjBqgC,EAELyB,EAAiB9hC,GAAM4gB,EACnBlW,KAAK+1B,KAAKmB,EAAsB5hC,IAC3B2hC,GACID,EAAkBE,EAAsBD,GAAgB3hC,OAEpE,CAED,MAAMkiC,EAAoBN,EAAsBl3B,KAAKoB,KAAKu0B,EAAeA,EAAe,GACxFyB,EAAiB9hC,IACb,MAAMmgC,EAAWz1B,KAAK+1B,KAAKJ,EAAeuB,EAAsB5hC,GAE1DmiC,EAAWz3B,KAAKiD,IAAIu0B,EAAoBliC,EAAG,KACjD,OAAQ4gB,EACHuf,IACKuB,EACErB,EAAeuB,EAAsBD,GACrCj3B,KAAK03B,KAAKD,GACVD,EACIP,EACAj3B,KAAK23B,KAAKF,IAClBD,EAEhB,CACA,MAAMpD,EAAY,CACdwD,mBAAoBhB,GAAyB9F,GAAmB,KAChE9O,KAAO1sB,IACH,MAAMsD,EAAUw+B,EAAc9hC,GAC9B,GAAKshC,EAmBDptB,EAAM6qB,KAAO/+B,GAAKw7B,MAnBO,CACzB,IAAI+G,EAAwB,IAANviC,EAAU0hC,EAAkB,EAM9CrB,EAAe,IACfkC,EACU,IAANviC,EACM47B,GAAsB8F,GACtBzC,GAAsB6C,EAAe9hC,EAAGsD,IAEtD,MAAMk/B,EAA2B93B,KAAKc,IAAI+2B,IAAoB7C,EACxD+C,EAA+B/3B,KAAKc,IAAIoV,EAAStd,IAAYs8B,EACnE1rB,EAAM6qB,KACFyD,GAA4BC,CACpC,CAKA,OADAvuB,EAAMrT,MAAQqT,EAAM6qB,KAAOne,EAAStd,EAC7B4Q,GAEX+H,SAAUA,KACN,MAAMqmB,EAAqB53B,KAAKiD,IAAIkxB,GAAsBC,GAAYF,IAChEJ,EAASD,GAAsBvwB,GAAa8wB,EAAUpS,KAAK4V,EAAqBt0B,GAAUnN,MAAOyhC,EAAoB,IAC3H,OAAOA,EAAqB,MAAQ9D,GAExCkE,aAAcA,QAElB,OAAO5D,CACX,CClKA,SAAS6D,GAAOh+B,GAAiK,IAAhK,UAAEsU,EAAS,SAAE4J,EAAW,EAAG,MAAE+f,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAEr1B,EAAG,IAAEC,EAAG,UAAEgyB,EAAY,GAAG,UAAEF,GAAY/6B,EAC3K,MAAMgc,EAAS1H,EAAU,GACnB/E,EAAQ,CACV6qB,MAAM,EACNl+B,MAAO8f,GAGLsiB,EAAmBp4B,QACTpB,IAARkE,EACOC,OACCnE,IAARmE,GAEGlD,KAAKc,IAAImC,EAAM9C,GAAKH,KAAKc,IAAIoC,EAAM/C,GAD/B8C,EAC0CC,EAEzD,IAAIs1B,EAAYN,EAAQ/f,EACxB,MAAMsgB,EAAQxiB,EAASuiB,EACjBtiB,OAA0BnX,IAAjBu5B,EAA6BG,EAAQH,EAAaG,GAK7DviB,IAAWuiB,IACXD,EAAYtiB,EAASD,GACzB,MAAMyiB,EAAapjC,IAAOkjC,EAAYx4B,KAAK+1B,KAAKzgC,EAAI6iC,GAC9CQ,EAAcrjC,GAAM4gB,EAASwiB,EAAUpjC,GACvCsjC,EAAiBtjC,IACnB,MAAMmU,EAAQivB,EAAUpjC,GAClB4uB,EAASyU,EAAWrjC,GAC1BkU,EAAM6qB,KAAOr0B,KAAKc,IAAI2I,IAAUyrB,EAChC1rB,EAAMrT,MAAQqT,EAAM6qB,KAAOne,EAASgO,GAQxC,IAAI2U,EACAC,EACJ,MAAMC,EAAsBzjC,IAjCL6K,SAkCAqJ,EAAMrT,WAlCS4I,IAARkE,GAAqB9C,EAAI8C,QAAiBlE,IAARmE,GAAqB/C,EAAI+C,KAoCrF21B,EAAsBvjC,EACtBwjC,EAAWpC,GAAO,CACdnoB,UAAW,CAAC/E,EAAMrT,MAAOoiC,EAAgB/uB,EAAMrT,QAC/CgiB,SAAUoc,GAAsBoE,EAAYrjC,EAAGkU,EAAMrT,OACrDy+B,QAASwD,EACTzD,UAAW0D,EACXnD,YACAF,gBAIR,OADA+D,EAAmB,GACZ,CACHnB,mBAAoB,KACpB5V,KAAO1sB,IAOH,IAAI0jC,GAAkB,EAUtB,OATKF,QAAoC/5B,IAAxB85B,IACbG,GAAkB,EAClBJ,EAActjC,GACdyjC,EAAmBzjC,SAMKyJ,IAAxB85B,GAAqCvjC,GAAKujC,EACnCC,EAAS9W,KAAK1sB,EAAIujC,KAGxBG,GAAmBJ,EAActjC,GAC3BkU,IAIvB,CDkFAktB,GAAOuC,eAAkB1gB,IACrB,MAAM2gB,EEjKV,SAA+B3gB,GAAuC,IAA9B1X,EAAK7J,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,IAC5C,MAAMo9B,GAD0Dp9B,UAAAC,OAAA,EAAAD,UAAA,QAAA+H,IAC/BpC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI4b,GAAO,IAAEhK,UAAW,CAAC,EAAG1N,MACzDiwB,EAAW9wB,KAAKiD,IAAIkxB,GAAsBC,GAAYF,IAC5D,MAAO,CACH1tB,KAAM,YACN2yB,KAAO71B,GACI8wB,EAAUpS,KAAK8O,EAAWxtB,GAAUnN,MAAQ0K,EAEvDiwB,SAAUM,GAAsBN,GAExC,CFuJ6BsI,CAAsB7gB,EAAS,IAAKme,IAI7D,OAHAne,EAAQ4gB,KAAOD,EAAiBC,KAChC5gB,EAAQuY,SAAWI,GAAsBgI,EAAiBpI,UAC1DvY,EAAQ/R,KAAO,YACR+R,GGvJX,MAAM8gB,GAAaA,CAAC/jC,EAAGgkC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMhkC,GAAK,EAAMikC,EAAK,EAAMD,IAAOhkC,EAAI,EAAMgkC,GACrGhkC,EAoBJ,SAASkkC,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAO/wB,GACX,MAAMgxB,EAAYC,GArBtB,SAAyBn/B,EAAGo/B,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACA3kC,EAAI,EACR,GACI2kC,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWZ,GAAWa,EAAUT,EAAKE,GAAOh/B,EACxCs/B,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZl6B,KAAKc,IAAIm5B,GAfO,QAgBnB1kC,EAfuB,IAgB7B,OAAO2kC,CACX,CAK6BC,CAAgBL,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQrkC,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAI+jC,GAAWQ,EAASvkC,GAAIokC,EAAKE,EACxE,CC9CA,MAAMQ,GAAuBZ,GAAY,IAAM,EAAG,EAAG,GAC/Ca,GAAwBb,GAAY,EAAG,EAAG,IAAM,GAChDc,GAA0Bd,GAAY,IAAM,EAAG,IAAM,GCFrDe,GAAgBzG,GAAYl8B,GAAMA,GAAK,GAAMk8B,EAAO,EAAIl8B,GAAK,GAAK,EAAIk8B,EAAO,GAAK,EAAIl8B,KAAO,ECA7F4iC,GAAiB1G,GAAYl8B,GAAM,EAAIk8B,EAAO,EAAIl8B,GCElD6iC,GAAwBjB,GAAY,IAAM,KAAM,IAAM,KACtDkB,GAAuBF,GAAcC,IACrCE,GAA0BJ,GAAaG,ICJvCE,GAAchjC,IAAOA,GAAK,GAAK,EAAI,GAAM8iC,GAAO9iC,GAAK,IAAO,EAAIoI,KAAKi2B,IAAI,GAAI,IAAMr+B,EAAI,KCCvFijC,GAAUjjC,GAAM,EAAIoI,KAAKs3B,IAAIt3B,KAAK86B,KAAKljC,IACvCmjC,GAAUP,GAAcK,IACxBG,GAAYT,GAAaM,ICLzBI,GAAsBnH,GAAWnnB,MAAMmQ,QAAQgX,IAAgC,kBAAdA,EAAO,GCSxEoH,GAAe,CACjBC,OAAQtyB,GACRuxB,OAAM,GACNE,UAAS,GACTD,QAAO,GACPQ,OAAM,GACNG,UAAS,GACTD,QAAO,GACPL,OAAM,GACNC,UAAS,GACTF,QAAO,GACPG,WAAUA,IAKRQ,GAA8B7d,IAChC,GAAI0d,GAAmB1d,GAAa,CAEtBA,EAAWtmB,OACrB,MAAOokC,EAAIC,EAAIC,EAAIC,GAAMje,EACzB,OAAOic,GAAY6B,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAToB,kBASFje,GAE+B,wBAAF3iB,OAA0B2iB,EAAU,KAC7E2d,GAAa3d,IAEjBA,GCxBLja,GAAWA,CAACF,EAAMC,EAAIlN,KACxB,MAAMslC,EAAmBp4B,EAAKD,EAC9B,OAA4B,IAArBq4B,EAAyB,GAAKtlC,EAAQiN,GAAQq4B,GCqBzD,SAASC,GAAYC,EAAO1pB,GAAqD,IAA3CxM,MAAOm2B,GAAU,EAAI,KAAEzC,EAAI,MAAEzF,GAAO18B,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAM6kC,EAAcF,EAAM1kC,OAM1B,GAL0Bgb,EAAOhb,OAKb,IAAhB4kC,EACA,MAAO,IAAM5pB,EAAO,GACxB,GAAoB,IAAhB4pB,GAAqB5pB,EAAO,KAAOA,EAAO,GAC1C,MAAO,IAAMA,EAAO,GACxB,MAAM6pB,EAAmBH,EAAM,KAAOA,EAAM,GAExCA,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOI,UACnB9pB,EAAS,IAAIA,GAAQ8pB,WAEzB,MAAMC,EAlDV,SAAsB/pB,EAAQknB,EAAM8C,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAelzB,GAAmB0qB,KAAOA,GACxD0I,EAAYlqB,EAAOhb,OAAS,EAClC,IAAK,IAAI1B,EAAI,EAAGA,EAAI4mC,EAAW5mC,IAAK,CAChC,IAAIm+B,EAAQwI,EAAajqB,EAAO1c,GAAI0c,EAAO1c,EAAI,IAC/C,GAAI4jC,EAAM,CACN,MAAMiD,EAAiBzvB,MAAMmQ,QAAQqc,GAAQA,EAAK5jC,IAAMsT,GAAOswB,EAC/DzF,EAAQ1C,GAAKoL,EAAgB1I,EACjC,CACAsI,EAAOnlC,KAAK68B,EAChB,CACA,OAAOsI,CACX,CAqCmBK,CAAapqB,EAAQknB,EAAMzF,GACpCyI,EAAYH,EAAO/kC,OACnBqlC,EAAgBn8B,IAClB,GAAI27B,GAAoB37B,EAAIw7B,EAAM,GAC9B,OAAO1pB,EAAO,GAClB,IAAI1c,EAAI,EACR,GAAI4mC,EAAY,EACZ,KAAO5mC,EAAIomC,EAAM1kC,OAAS,KAClBkJ,EAAIw7B,EAAMpmC,EAAI,IADOA,KAKjC,MAAMgnC,EAAkBj5B,GAASq4B,EAAMpmC,GAAIomC,EAAMpmC,EAAI,GAAI4K,GACzD,OAAO67B,EAAOzmC,GAAGgnC,IAErB,OAAOX,EACAz7B,GAAMm8B,EAAa72B,EAAMk2B,EAAM,GAAIA,EAAME,EAAc,GAAI17B,IAC5Dm8B,CACV,CCrEA,SAASE,GAAchlB,GACnB,MAAM0O,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQuW,GACxB,MAAMx5B,EAAMijB,EAAOA,EAAOjvB,OAAS,GACnC,IAAK,IAAI1B,EAAI,EAAGA,GAAKknC,EAAWlnC,IAAK,CACjC,MAAMmnC,EAAiBp5B,GAAS,EAAGm5B,EAAWlnC,GAC9C2wB,EAAOrvB,KAAKsM,EAAUF,EAAK,EAAGy5B,GAClC,CACJ,CDLIC,CAAWzW,EAAQ1O,EAAIvgB,OAAS,GACzBivB,CACX,CEEA,SAAS3X,GAAStU,GAA4E,IAA3E,SAAE62B,EAAW,IAAKviB,UAAWquB,EAAc,MAAEC,EAAK,KAAE1D,EAAO,aAAcl/B,EAKxF,MAAM6iC,ECba3D,IACZxsB,MAAMmQ,QAAQqc,IAA4B,kBAAZA,EAAK,GDYlB4D,CAAc5D,GAChCA,EAAKr7B,IAAIs9B,IACTA,GAA2BjC,GAK3B3vB,EAAQ,CACV6qB,MAAM,EACNl+B,MAAOymC,EAAe,IAKpBI,EE3BV,SAA8B9W,EAAQ4K,GAClC,OAAO5K,EAAOpoB,IAAKpH,GAAMA,EAAIo6B,EACjC,CFyB0BmM,CAGtBJ,GAASA,EAAM5lC,SAAW2lC,EAAe3lC,OACnC4lC,EACAL,GAAcI,GAAiB9L,GAC/BoM,EAAoBxB,GAAYsB,EAAeJ,EAAgB,CACjEzD,KAAMxsB,MAAMmQ,QAAQggB,GACdA,GA9BStgC,EA+BKogC,EA/BG9I,EA+BagJ,EA9BjCtgC,EAAOsB,IAAI,IAAMg2B,GAAUwG,IAAW17B,OAAO,EAAGpC,EAAOvF,OAAS,MAD3E,IAAuBuF,EAAQs3B,EAiC3B,MAAO,CACH8D,mBAAoB9G,EACpB9O,KAAO1sB,IACHkU,EAAMrT,MAAQ+mC,EAAkB5nC,GAChCkU,EAAM6qB,KAAO/+B,GAAKw7B,EACXtnB,GAGnB,CG9CA,MAAM2zB,GAAahnC,GAAoB,OAAVA,EAC7B,SAASinC,GAAiB7uB,EAAStU,EAAmCmU,GAA0B,IAA3D,OAAEivB,EAAM,WAAEC,EAAa,QAAQrjC,EAAiBsjC,EAAKvmC,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EACzF,MAAMwmC,EAAoBjvB,EAAU5X,OAAOwmC,IAErCxlB,EADmB4lB,EAAQ,GAAMF,GAAyB,SAAfC,GAAyBD,EAAS,IAAM,EACxD,EAAIG,EAAkBvmC,OAAS,EAChE,OAAQ0gB,QAA2B5Y,IAAlBqP,EAEXA,EADAovB,EAAkB7lB,EAE5B,CCJA,MAAM8lB,GAAoB,CACtBC,MAAOzF,GACPA,QAAO,GACP0F,MAAOpvB,GACPA,UAAWA,GACXmoB,OAAMA,IAEV,SAASkH,GAAsB/a,GACI,kBAApBA,EAAWrc,OAClBqc,EAAWrc,KAAOi3B,GAAkB5a,EAAWrc,MAEvD,CCfA,MAAMq3B,GACF3lC,WAAAA,GACIO,KAAKqlC,gBACT,CACA,YAAIC,GACA,OAAOtlC,KAAKulC,SAChB,CACAF,cAAAA,GACIrlC,KAAKulC,UAAY,IAAIpjB,QAASC,IAC1BpiB,KAAKoiB,QAAUA,GAEvB,CACAojB,cAAAA,GACIxlC,KAAKoiB,SACT,CAMAG,IAAAA,CAAKkjB,EAAWC,GACZ,OAAO1lC,KAAKslC,SAAS/iB,KAAKkjB,EAAWC,EACzC,ECVJ,MAAMC,GAAqBl4B,GAAYA,EAAU,IACjD,MAAMm4B,WAAoBR,GACtB3lC,WAAAA,CAAYqgB,GACRzC,QACArd,KAAK+Q,MAAQ,OACb/Q,KAAK6lC,UAAY,KACjB7lC,KAAK8lC,WAAY,EAIjB9lC,KAAKkgB,YAAc,EAInBlgB,KAAK+lC,SAAW,KAIhB/lC,KAAKgmC,cAAgB,EAKrBhmC,KAAKqhB,KAAO,KAAM,IAAA4kB,EAAAC,EACd,MAAM,YAAE3wB,GAAgBvV,KAAK8f,QACzBvK,GAAeA,EAAY6K,YAAczB,GAAKtL,OAC9CrT,KAAKmmC,KAAKxnB,GAAKtL,OAEnBrT,KAAK8lC,WAAY,EACE,SAAf9lC,KAAK+Q,QAET/Q,KAAKomC,WACc,QAAnBH,GAAAC,EAAAlmC,KAAK8f,SAAQumB,cAAM,IAAAJ,GAAnBA,EAAA9oC,KAAA+oC,KAEJrN,GAAiBC,aACjB94B,KAAK8f,QAAUA,EACf9f,KAAKsmC,gBACLtmC,KAAKumC,QACoB,IAArBzmB,EAAQ0mB,UACRxmC,KAAKymC,OACb,CACAH,aAAAA,GACI,MAAM,QAAExmB,GAAY9f,KACpBmlC,GAAsBrlB,GACtB,MAAM,KAAE/R,EAAO+H,GAAS,OAAE8uB,EAAS,EAAC,YAAE8B,EAAc,EAAC,WAAE7B,EAAU,SAAEnlB,EAAW,GAAOI,EACrF,IAAMhK,UAAW6wB,GAAgB7mB,EACjC,MAAM8mB,EAAmB74B,GAAQ+H,GAK7B8wB,IAAqB9wB,IACK,kBAAnB6wB,EAAY,KACnB3mC,KAAK6mC,aAAetO,GAAKoN,GAAmB3K,GAAI2L,EAAY,GAAIA,EAAY,KAC5EA,EAAc,CAAC,EAAG,MAEtB,MAAMhL,EAAYiL,GAAgB1iC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI4b,GAAO,IAAEhK,UAAW6wB,KAKzC,WAAf9B,IACA7kC,KAAK8mC,kBAAoBF,GAAgB1iC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACpC4b,GAAO,IACVhK,UAAW,IAAI6wB,GAAarD,UAC5B5jB,UAAWA,MAWkB,OAAjCic,EAAUwD,qBACVxD,EAAUwD,mBAAqBzD,GAAsBC,IAEzD,MAAM,mBAAEwD,GAAuBxD,EAC/B37B,KAAKm/B,mBAAqBA,EAC1Bn/B,KAAK+mC,iBAAmB5H,EAAqBuH,EAC7C1mC,KAAKgnC,cAAgBhnC,KAAK+mC,kBAAoBnC,EAAS,GAAK8B,EAC5D1mC,KAAK27B,UAAYA,CACrB,CACAsL,UAAAA,CAAWh2B,GACP,MAAMi2B,EAAgB3/B,KAAKiP,MAAMvF,EAAYjR,KAAK6lC,WAAa7lC,KAAKgmC,cAE9C,OAAlBhmC,KAAK+lC,SACL/lC,KAAKkgB,YAAclgB,KAAK+lC,SAMxB/lC,KAAKkgB,YAAcgnB,CAE3B,CACAf,IAAAA,CAAKl1B,GAA2B,IAAhBk2B,EAAM5oC,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,IAAAA,UAAA,GAClB,MAAM,UAAEo9B,EAAS,cAAEqL,EAAa,aAAEH,EAAY,kBAAEC,EAAiB,iBAAEC,EAAgB,mBAAE5H,GAAwBn/B,KAC7G,GAAuB,OAAnBA,KAAK6lC,UACL,OAAOlK,EAAUpS,KAAK,GAC1B,MAAM,MAAE6d,EAAQ,EAAC,UAAEtxB,EAAS,OAAE8uB,EAAM,WAAEC,EAAU,YAAE6B,EAAW,KAAE34B,EAAI,SAAEsa,EAAQ,cAAE1S,GAAmB3V,KAAK8f,QAOnG9f,KAAK8kC,MAAQ,EACb9kC,KAAK6lC,UAAYt+B,KAAKiD,IAAIxK,KAAK6lC,UAAW50B,GAErCjR,KAAK8kC,MAAQ,IAClB9kC,KAAK6lC,UAAYt+B,KAAKiD,IAAIyG,EAAY+1B,EAAgBhnC,KAAK8kC,MAAO9kC,KAAK6lC,YAEvEsB,EACAnnC,KAAKkgB,YAAcjP,EAGnBjR,KAAKinC,WAAWh2B,GAGpB,MAAMo2B,EAAmBrnC,KAAKkgB,YAAcknB,GAASpnC,KAAKgmC,eAAiB,EAAI,GAAK,GAC9EsB,EAAiBtnC,KAAKgmC,eAAiB,EACvCqB,EAAmB,EACnBA,EAAmBL,EACzBhnC,KAAKkgB,YAAc3Y,KAAKkD,IAAI48B,EAAkB,GAE3B,aAAfrnC,KAAK+Q,OAA0C,OAAlB/Q,KAAK+lC,WAClC/lC,KAAKkgB,YAAc8mB,GAEvB,IAAIO,EAAUvnC,KAAKkgB,YACfsnB,EAAiB7L,EACrB,GAAIiJ,EAAQ,CAMR,MAAM/5B,EAAWtD,KAAKiD,IAAIxK,KAAKkgB,YAAa8mB,GAAiBD,EAK7D,IAAIU,EAAmBlgC,KAAKmgC,MAAM78B,GAK9B88B,EAAoB98B,EAAW,GAK9B88B,GAAqB98B,GAAY,IAClC88B,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBlgC,KAAKiD,IAAIi9B,EAAkB7C,EAAS,GAIhC/tB,QAAQ4wB,EAAmB,KAE3B,YAAf5C,GACA8C,EAAoB,EAAIA,EACpBjB,IACAiB,GAAqBjB,EAAcK,IAGnB,WAAflC,IACL2C,EAAiBV,IAGzBS,EAAUv6B,EAAM,EAAG,EAAG26B,GAAqBZ,CAC/C,CAMA,MAAMh2B,EAAQu2B,EACR,CAAE1L,MAAM,EAAOl+B,MAAOoY,EAAU,IAChC0xB,EAAeje,KAAKge,GACtBV,IACA91B,EAAMrT,MAAQmpC,EAAa91B,EAAMrT,QAErC,IAAI,KAAEk+B,GAAS7qB,EACVu2B,GAAyC,OAAvBnI,IACnBvD,EACI57B,KAAKgmC,eAAiB,EAChBhmC,KAAKkgB,aAAe8mB,EACpBhnC,KAAKkgB,aAAe,GAElC,MAAM0nB,EAAwC,OAAlB5nC,KAAK+lC,WACb,aAAf/lC,KAAK+Q,OAAwC,YAAf/Q,KAAK+Q,OAAuB6qB,GAW/D,OATIgM,GAAuB75B,IAASyxB,KAChCzuB,EAAMrT,MAAQinC,GAAiB7uB,EAAW9V,KAAK8f,QAASnK,EAAe3V,KAAK8kC,QAE5Ezc,GACAA,EAAStX,EAAMrT,OAEfkqC,GACA5nC,KAAK6nC,SAEF92B,CACX,CAMAwR,IAAAA,CAAKH,EAAS0lB,GACV,OAAO9nC,KAAKslC,SAAS/iB,KAAKH,EAAS0lB,EACvC,CACA,YAAIzP,GACA,OAAOM,GAAsB34B,KAAKm/B,mBACtC,CACA,QAAIxgB,GACA,OAAOga,GAAsB34B,KAAKkgB,YACtC,CACA,QAAIvB,CAAKC,GAAS,IAAAmpB,EACdnpB,EAAU6Z,GAAsB7Z,GAChC5e,KAAKkgB,YAActB,EACI,OAAnB5e,KAAK6lC,WACa,OAAlB7lC,KAAK+lC,UACkB,IAAvB/lC,KAAKgmC,cACLhmC,KAAK+lC,SAAWnnB,EAEX5e,KAAKgoC,SACVhoC,KAAK6lC,UAAY7lC,KAAKgoC,OAAO30B,MAAQuL,EAAU5e,KAAKgmC,eAE7C,QAAX+B,EAAA/nC,KAAKgoC,cAAM,IAAAD,GAAXA,EAAa9lB,OAAM,EACvB,CACA,SAAI6iB,GACA,OAAO9kC,KAAKgmC,aAChB,CACA,SAAIlB,CAAMmD,GACNjoC,KAAKinC,WAAWtoB,GAAKtL,OACrB,MAAM60B,EAAaloC,KAAKgmC,gBAAkBiC,EAC1CjoC,KAAKgmC,cAAgBiC,EACjBC,IACAloC,KAAK2e,KAAOga,GAAsB34B,KAAKkgB,aAE/C,CACAqmB,IAAAA,GAAO,IAAA4B,EAAAC,EACH,GAAIpoC,KAAK8lC,UACL,OACJ,MAAM,OAAEkC,EAAS9M,GAAe,UAAE2K,GAAc7lC,KAAK8f,QAChD9f,KAAKgoC,SACNhoC,KAAKgoC,OAASA,EAAQ/2B,GAAcjR,KAAKmmC,KAAKl1B,KAE/B,QAAnBk3B,GAAAC,EAAApoC,KAAK8f,SAAQuoB,cAAM,IAAAF,GAAnBA,EAAAhrC,KAAAirC,GACA,MAAM/0B,EAAMrT,KAAKgoC,OAAO30B,MACL,aAAfrT,KAAK+Q,OACL/Q,KAAKqlC,iBACLrlC,KAAK6lC,UAAYxyB,GAEM,OAAlBrT,KAAK+lC,SACV/lC,KAAK6lC,UAAYxyB,EAAMrT,KAAK+lC,SAEtB/lC,KAAK6lC,YACX7lC,KAAK6lC,UAAqB,OAATA,QAAS,IAATA,EAAAA,EAAaxyB,GAEf,aAAfrT,KAAK+Q,OAAwB/Q,KAAK8kC,MAAQ,IAC1C9kC,KAAK6lC,WAAa7lC,KAAKm/B,oBAE3Bn/B,KAAK+lC,SAAW,KAKhB/lC,KAAK+Q,MAAQ,UACb/Q,KAAKgoC,OAAO/lB,OAChB,CACAwkB,KAAAA,GACIzmC,KAAK+Q,MAAQ,SACb/Q,KAAKinC,WAAWtoB,GAAKtL,OACrBrT,KAAK+lC,SAAW/lC,KAAKkgB,WACzB,CACAjL,QAAAA,GACuB,YAAfjV,KAAK+Q,OACL/Q,KAAKumC,OAETvmC,KAAK+Q,MAAQ,WACb/Q,KAAK+lC,SAAW,IACpB,CACA8B,MAAAA,GAAS,IAAAS,EAAAC,EACLvoC,KAAKwlC,iBACLxlC,KAAKomC,WACLpmC,KAAK+Q,MAAQ,WACU,QAAvBu3B,GAAAC,EAAAvoC,KAAK8f,SAAQxK,kBAAU,IAAAgzB,GAAvBA,EAAAnrC,KAAAorC,EACJ,CACAl2B,MAAAA,GAAS,IAAAm2B,EAAAC,EACLzoC,KAAK+lC,SAAW,KAChB/lC,KAAK6lC,UAAY,EACjB7lC,KAAKmmC,KAAK,GACVnmC,KAAKomC,WACgB,QAArBoC,GAAAC,EAAAzoC,KAAK8f,SAAQ4oB,gBAAQ,IAAAF,GAArBA,EAAArrC,KAAAsrC,EACJ,CACArC,QAAAA,GACIpmC,KAAK+Q,MAAQ,OACb/Q,KAAK2oC,aACL3oC,KAAK6lC,UAAY7lC,KAAK+lC,SAAW,KACjClN,GAAiBC,YACrB,CACA6P,UAAAA,GACS3oC,KAAKgoC,SAEVhoC,KAAKgoC,OAAO3mB,OACZrhB,KAAKgoC,YAAS1hC,EAClB,CACA6gC,MAAAA,CAAOyB,GAEH,OADA5oC,KAAK6lC,UAAY,EACV7lC,KAAKmmC,KAAKyC,GAAY,EACjC,CACAC,cAAAA,CAAeC,GAAU,IAAAC,EAOrB,OANI/oC,KAAK8f,QAAQkpB,eACbhpC,KAAK8f,QAAQ/R,KAAO,YACpB/N,KAAK8f,QAAQ4gB,KAAO,SACpB1gC,KAAKsmC,iBAEE,QAAXyC,EAAA/oC,KAAKgoC,cAAM,IAAAe,GAAXA,EAAa1nB,OACNynB,EAASG,QAAQjpC,KAC5B,EChVJ,SAASkpC,GAAKl3B,GACV,IAAI2rB,EACJ,MAAO,UACYr3B,IAAXq3B,IACAA,EAAS3rB,KACN2rB,EAEf,CCNA,MAAMwL,GAAyCD,GAAK,SAAgC5iC,IAA1BU,OAAOoiC,gBCE3DC,GAAgB,CAAC,ECDvB,SAASC,GAAat3B,EAAUu3B,GAC5B,MAAMC,EAAWN,GAAKl3B,GACtB,MAAO,SAAAy3B,EAAA,OAAiC,QAAjCA,EAAMJ,GAAcE,UAAa,IAAAE,EAAAA,EAAID,IAChD,CCJA,MAAME,GAAqCJ,GAAa,KACpD,IACI/mC,SACKC,cAAc,OACdiiB,QAAQ,CAAE/J,QAAS,GAAK,CAAE2gB,OAAQ,gBAC3C,CACA,MAAOr+B,GACH,OAAO,CACX,CACA,OAAO,GACR,gBCZG2sC,GAAsBnoC,IAAA,IAAE2V,EAAGC,EAAGC,EAAGkmB,GAAE/7B,EAAA,sBAAAW,OAAqBgV,EAAC,MAAAhV,OAAKiV,EAAC,MAAAjV,OAAKkV,EAAC,MAAAlV,OAAKo7B,EAAC,MCE3EqM,GAAuB,CACzBlH,OAAQ,SACRhC,KAAM,OACNiB,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXO,OAAsBuH,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC1DrH,QAAuBqH,GAAoB,CAAC,IAAM,EAAG,EAAG,MACxD1H,OAAsB0H,GAAoB,CAAC,IAAM,IAAM,KAAO,MAC9D3H,QAAuB2H,GAAoB,CAAC,IAAM,KAAM,IAAM,OCLlE,SAASE,GAAwBxO,EAAQhD,GACrC,OAAKgD,EAGsB,oBAAXA,EACLqO,KACDtO,GAAqBC,EAAQhD,GAC7B,WAEDmK,GAAmBnH,GACjBsO,GAAoBtO,GAEtBnnB,MAAMmQ,QAAQgX,GACZA,EAAOh2B,IAAKykC,GAAkBD,GAAwBC,EAAezR,IACxEuR,GAAqBhI,SAGlBgI,GAAqBvO,QAf5B,CAiBR,CCrBA,SAAS0O,GAAoBhqC,EAASiqC,EAAWl0B,GAAqI,IAA1H,MAAEsxB,EAAQ,EAAC,SAAE/O,EAAW,IAAG,OAAEuM,EAAS,EAAC,WAAEC,EAAa,OAAM,KAAEnE,EAAO,UAAS,MAAE0D,GAAQ7lC,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG0rC,EAAa1rC,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,QAAG+H,EACvK,MAAM4jC,EAAkB,CACpB,CAACF,GAAYl0B,GAEbsuB,IACA8F,EAAgBzc,OAAS2W,GAC7B,MAAM/I,EAASwO,GAAwBnJ,EAAMrI,GAIzCnkB,MAAMmQ,QAAQgX,KACd6O,EAAgB7O,OAASA,GACzB7qB,GAAY9S,OACZm7B,GAAiBE,QAErB,MAAMjZ,EAAU,CACZsnB,QACA/O,WACAgD,OAASnnB,MAAMmQ,QAAQgX,GAAmB,SAATA,EACjC5e,KAAM,OACN0tB,WAAYvF,EAAS,EACrBwF,UAA0B,YAAfvF,EAA2B,YAAc,UAEpDoF,IACAnqB,EAAQmqB,cAAgBA,GAC5B,MAAM5nB,EAAYtiB,EAAQ0kB,QAAQylB,EAAiBpqB,GAMnD,OALItP,GAAY9S,OACZ2kB,EAAUijB,SAAS+E,QAAQ,KACvBxR,GAAiBE,UAGlB1W,CACX,CCpCA,SAASioB,GAAYv8B,GACjB,MAAuB,oBAATA,GAAuB,mBAAoBA,CAC7D,C,kBCSA,MAAMw8B,WAAwBnF,GAC1B3lC,WAAAA,CAAYqgB,GAIR,GAHAzC,QACArd,KAAKwqC,aAAe,KACpBxqC,KAAK8lC,WAAY,GACZhmB,EACD,OACJ,MAAM,QAAE/f,EAAO,KAAEmJ,EAAI,UAAE4M,EAAS,cAAEm0B,EAAa,aAAEjB,GAAe,EAAK,cAAErzB,EAAa,WAAEL,GAAgBwK,EACtG9f,KAAKyqC,gBAAkB5zB,QAAQozB,GAC/BjqC,KAAKgpC,aAAeA,EACpBhpC,KAAK8f,QAAUA,EACEA,EAAQ/R,KACzB,MAAMqc,ECpBd,SAA8B5oB,GAAuB,IAAtB,KAAEuM,GAAkBvM,EAATse,GAAOnZ,EAAAA,GAAAA,GAAAnF,EAAAqlB,IAC7C,OAAIyjB,GAAYv8B,IAAS27B,KACd37B,EAAKyyB,eAAe1gB,IAGX,QAAhB4qB,EAAA5qB,EAAQuY,gBAAQ,IAAAqS,IAAK5qB,EAAQuY,SAAW,KAC5B,QAAZsS,EAAA7qB,EAAQ4gB,YAAI,IAAAiK,IAAK7qB,EAAQ4gB,KAAO,WAE7B5gB,GAJF,IAAA4qB,EAAAC,CAKT,CDW2BC,CAAsB9qB,GACzC9f,KAAKqiB,UAAY0nB,GAAoBhqC,EAASmJ,EAAM4M,EAAWsU,EAAY6f,IAC/C,IAAxB7f,EAAWoc,UACXxmC,KAAKqiB,UAAUokB,QAEnBzmC,KAAKqiB,UAAUwoB,SAAW,KAEtB,GADA7qC,KAAKwqC,aAAexqC,KAAK2e,MACpBsrB,EAAe,CAChB,MAAM3sB,EAAWqnB,GAAiB7uB,EAAW9V,KAAK8f,QAASnK,EAAe3V,KAAK8kC,OAC3E9kC,KAAK8qC,kBACL9qC,KAAK8qC,kBAAkBxtB,GE/B3C,SAAkBvd,EAASmJ,EAAMxL,GCFfwL,IAASA,EAAKc,WAAW,MDGvC+gC,CAAS7hC,GACHnJ,EAAQuC,MAAMoqB,YAAYxjB,EAAMxL,GAC/BqC,EAAQuC,MAAM4G,GAAQxL,CACjC,CFkCoBstC,CAASjrC,EAASmJ,EAAMoU,GAE5Btd,KAAKqiB,UAAUhQ,QACnB,CACU,OAAViD,QAAU,IAAVA,GAAAA,IACAtV,KAAKwlC,iBAEb,CACAe,IAAAA,GACQvmC,KAAK8lC,YAET9lC,KAAKqiB,UAAUkkB,OACI,aAAfvmC,KAAK+Q,OACL/Q,KAAKqlC,iBAEb,CACAoB,KAAAA,GACIzmC,KAAKqiB,UAAUokB,OACnB,CACAxxB,QAAAA,GAAW,IAAAg2B,EAAAC,EACc,QAArBD,GAAAC,EAAAlrC,KAAKqiB,WAAUwlB,cAAM,IAAAoD,GAArBA,EAAA9tC,KAAA+tC,EACJ,CACA74B,MAAAA,GACI,IACIrS,KAAKqiB,UAAUhQ,QACnB,CACA,MAAOrV,GAAK,CAChB,CACAqkB,IAAAA,GACI,GAAIrhB,KAAK8lC,UACL,OACJ9lC,KAAK8lC,WAAY,EACjB,MAAM,MAAE/0B,GAAU/Q,KACJ,SAAV+Q,GAA8B,aAAVA,IAGpB/Q,KAAK8qC,kBACL9qC,KAAK8qC,oBAGL9qC,KAAKmrC,eAEJnrC,KAAKyqC,iBACNzqC,KAAKqS,SACb,CAaA84B,YAAAA,GAC+B,IAAAC,EAAAC,EAAtBrrC,KAAKyqC,kBACqB,QAA3BW,GAAAC,EAAArrC,KAAKqiB,WAAU8oB,oBAAY,IAAAC,GAA3BA,EAAAjuC,KAAAkuC,GAER,CACA,YAAIhT,GAAW,IAAAiT,EAAAC,EACX,MAAMlT,GAAgC,QAArBiT,EAAAtrC,KAAKqiB,UAAUmpB,cAAM,IAAAF,GAAmB,QAAnBC,EAArBD,EAAuBG,yBAAiB,IAAAF,OAAA,EAAxCA,EAAApuC,KAAAmuC,GAA6CjT,WAAY,EAC1E,OAAOM,GAAsBr7B,OAAO+6B,GACxC,CACA,QAAI1Z,GACA,OAAOga,GAAsBr7B,OAAO0C,KAAKqiB,UAAUnC,cAAgB,EACvE,CACA,QAAIvB,CAAKC,GACL5e,KAAKwqC,aAAe,KACpBxqC,KAAKqiB,UAAUnC,YAAcuY,GAAsB7Z,EACvD,CAKA,SAAIkmB,GACA,OAAO9kC,KAAKqiB,UAAUqpB,YAC1B,CACA,SAAI5G,CAAMmD,GAEFA,EAAW,IACXjoC,KAAKwqC,aAAe,MACxBxqC,KAAKqiB,UAAUqpB,aAAezD,CAClC,CACA,SAAIl3B,GACA,OAA6B,OAAtB/Q,KAAKwqC,aACN,WACAxqC,KAAKqiB,UAAUspB,SACzB,CACA,aAAI9F,GACA,OAAOvoC,OAAO0C,KAAKqiB,UAAUwjB,UACjC,CACA,aAAIA,CAAU+F,GACV5rC,KAAKqiB,UAAUwjB,UAAY+F,CAC/B,CAIA/C,cAAAA,CAAcrnC,GAAwB,IAAvB,SAAEsnC,EAAQ,QAAEG,GAASznC,EACT,IAAAqqC,EAAnB7rC,KAAKgpC,eACgB,QAArB6C,EAAA7rC,KAAKqiB,UAAUmpB,cAAM,IAAAK,GAArBA,EAAuBC,aAAa,CAAEzQ,OAAQ,YAGlD,OADAr7B,KAAKqiB,UAAUwoB,SAAW,KACtB/B,GAAYK,MACZnpC,KAAKqiB,UAAUymB,SAAWA,EACnB14B,IAGA64B,EAAQjpC,KAEvB,EItJJ,MAAM+rC,GAA6B,CAC/B5J,WAAU,GACVD,UAAS,GACTK,UAASA,IAKb,SAASyJ,GAAoB5hB,GACM,kBAApBA,EAAWsW,MACAtW,EAAWsW,QAJnBqL,KAKV3hB,EAAWsW,KAAOqL,GAA2B3hB,EAAWsW,MAEhE,C,2DCHA,MAAMuL,WAAgC1B,GAClC9qC,WAAAA,CAAYqgB,GAURksB,GAAoBlsB,GAQpBqlB,GAAsBrlB,GACtBzC,MAAMyC,GACFA,EAAQ+lB,YACR7lC,KAAK6lC,UAAY/lB,EAAQ+lB,WAE7B7lC,KAAK8f,QAAUA,CACnB,CASAgrB,iBAAAA,CAAkBptC,GAAO,IAAAwuC,EACrB,MAAAhG,EAAmElmC,KAAK8f,SAAlE,YAAEvK,EAAW,SAAE8S,EAAQ,WAAE/S,EAAU,QAAEvV,GAAqBmmC,EAATpmB,GAAOnZ,EAAAA,GAAAA,GAAAu/B,EAAArf,IAC9D,IAAKtR,EACD,OACJ,QAAcjP,IAAV5I,EAEA,YADA6X,EAAY1R,IAAInG,GAGpB,MAAMyuC,EAAkB,IAAIvG,IAAW1hC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAClC4b,GAAO,IACV0mB,UAAU,KAERoC,EAAanQ,GAAuC,QAAlByT,EAAClsC,KAAKwqC,oBAAY,IAAA0B,EAAAA,EAAIlsC,KAAK2e,MACnEpJ,EAAYoM,gBAAgBwqB,EAAgBhF,OAAOyB,EAhDvC,IAgDiElrC,MAAOyuC,EAAgBhF,OAAOyB,GAAYlrC,MAhD3G,IAiDZyuC,EAAgB9qB,MACpB,EClDJ,MAAM+qB,GAAeA,CAAC1uC,EAAOwL,IAEZ,WAATA,MAKiB,kBAAVxL,IAAsBwW,MAAMmQ,QAAQ3mB,OAE1B,kBAAVA,IACNgc,GAAQrP,KAAK3M,IAAoB,MAAVA,GACvBA,EAAMsM,WAAW,UCjB1B,MAAMqiC,GAAoB,IAAIjlC,IAAI,CAC9B,UACA,WACA,SACA,cAIEklC,GAA8BpD,GAAK,IAAM1rC,OAAOqJ,eAAe1J,KAAKovC,QAAQ7sC,UAAW,Y,oHCO7F,MAAM8sC,WAAkCpH,GACpC3lC,WAAAA,CAAW+B,GAA0J,IAAAirC,EAAA,IAAzJ,SAAEjG,GAAW,EAAI,MAAEY,EAAQ,EAAC,KAAEr5B,EAAO,YAAW,OAAE62B,EAAS,EAAC,YAAE8B,EAAc,EAAC,WAAE7B,EAAa,OAAM,UAAE/uB,EAAS,KAAE5M,EAAI,YAAEqM,EAAW,QAAExV,GAAqByB,EAATse,GAAOnZ,EAAAA,GAAAA,GAAAnF,EAAAqlB,IAC7JxJ,QAIArd,KAAKqhB,KAAO,KAAM,IAAAqrB,EACOC,EAAjB3sC,KAAK4sC,aACL5sC,KAAK4sC,WAAWvrB,OACC,QAAjBsrB,EAAA3sC,KAAK6sC,oBAAY,IAAAF,GAAjBA,EAAAxvC,KAAA6C,OAEiB,QAArB0sC,EAAA1sC,KAAK8sC,wBAAgB,IAAAJ,GAArBA,EAAuBr6B,UAE3BrS,KAAK+sC,UAAYpuB,GAAKtL,MACtB,MAAM25B,GAAmB9oC,EAAAA,EAAAA,GAAA,CACrBsiC,WACAY,QACAr5B,OACA62B,SACA8B,cACA7B,aACA37B,OACAqM,cACAxV,WACG+f,GAEDmtB,GAA4B,OAAPltC,QAAO,IAAPA,OAAO,EAAPA,EAASqV,mBAAoBA,GACxDpV,KAAK8sC,iBAAmB,IAAIG,EAAmBn3B,EAAW,CAACivB,EAAmBpvB,EAAeu3B,IAAWltC,KAAKmtC,oBAAoBpI,EAAmBpvB,EAAeq3B,GAAsBE,GAAShkC,EAAMqM,EAAaxV,GAChM,QAArB0sC,EAAAzsC,KAAK8sC,wBAAgB,IAAAL,GAArBA,EAAuBh3B,iBAC3B,CACA03B,mBAAAA,CAAoBr3B,EAAWH,EAAemK,EAASstB,GACnDptC,KAAK8sC,sBAAmBxmC,EACxB,MAAM,KAAE4C,EAAI,KAAE6E,EAAI,SAAE2R,EAAQ,MAAE0nB,EAAK,UAAEiG,EAAS,SAAEhlB,GAAavI,EAC7D9f,KAAKstC,WAAa3uB,GAAKtL,MCxC/B,SAAoByC,EAAW5M,EAAM6E,EAAM2R,GAMvC,MAAM6tB,EAAiBz3B,EAAU,GACjC,GAAuB,OAAnBy3B,EACA,OAAO,EAMX,GAAa,YAATrkC,GAA+B,eAATA,EACtB,OAAO,EACX,MAAMskC,EAAiB13B,EAAUA,EAAUtX,OAAS,GAC9CivC,EAAqBrB,GAAamB,EAAgBrkC,GAClDwkC,EAAqBtB,GAAaoB,EAAgBtkC,GAGxD,MAFmD,6BAAF/G,OAA+B+G,EAAI,WAAA/G,OAAUorC,EAAc,UAAAprC,OAASqrC,EAAc,QAAArrC,OAAOsrC,EAAqBD,EAAiBD,EAAc,oCAEzLE,IAAuBC,KA9BhC,SAA6B53B,GACzB,MAAM3V,EAAU2V,EAAU,GAC1B,GAAyB,IAArBA,EAAUtX,OACV,OAAO,EACX,IAAK,IAAI1B,EAAI,EAAGA,EAAIgZ,EAAUtX,OAAQ1B,IAClC,GAAIgZ,EAAUhZ,KAAOqD,EACjB,OAAO,CAEnB,CAyBYwtC,CAAoB73B,KACb,WAAT/H,GAAqBu8B,GAAYv8B,KAAU2R,EACrD,CDmBakuB,CAAW93B,EAAW5M,EAAM6E,EAAM2R,MAC/BpP,GAAmBu9B,mBAAsBzG,GACjC,OAAR/e,QAAQ,IAARA,GAAAA,EAAWsc,GAAiB7uB,EAAWgK,EAASnK,IAEpDG,EAAU,GAAKA,EAAUA,EAAUtX,OAAS,GAC5C45B,GAAqBtY,GACrBA,EAAQ8kB,OAAS,GAcrB,MAAMiB,EAAYuH,EACXptC,KAAKstC,YAEFttC,KAAKstC,WAAattC,KAAK+sC,UA9Df,GA+DJ/sC,KAAKstC,WAFTttC,KAAK+sC,eAITzmC,EACAwnC,GAAe5pC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACjB2hC,YACAlwB,iBACGmK,GAAO,IACVhK,cAOEuM,GAAagrB,GDlF3B,SAAkCvtB,GAAS,IAAAiuB,EACvC,MAAM,YAAEx4B,EAAW,KAAErM,EAAI,YAAEw9B,EAAW,WAAE7B,EAAU,QAAE1I,EAAO,KAAEpuB,GAAS+R,EAQtE,MAP2B,OAAXvK,QAAW,IAAXA,GAAkB,QAAPw4B,EAAXx4B,EAAasL,aAAK,IAAAktB,OAAA,EAAlBA,EAAoB5tC,mBAOX6tC,aACrB,OAAO,EAEX,MAAM,SAAE3lB,EAAQ,kBAAEe,GAAsB7T,EAAYsL,MAAMoJ,WAC1D,OAAQqiB,MACJpjC,GACAmjC,GAAkB7lC,IAAI0C,KACZ,cAATA,IAAyBkgB,KAKzBf,IACAqe,GACc,WAAf7B,GACY,IAAZ1I,GACS,YAATpuB,CACR,CCwDwCkgC,CAAyBH,GACnD,IAAI7B,IAAuB/nC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACxB4pC,GAAe,IAClB/tC,QAAS+tC,EAAgBv4B,YAAYsL,MAAM1gB,WAE7C,IAAIylC,GAAYkI,GACtBzrB,EAAUijB,SAAS/iB,KAAK,IAAMviB,KAAKwlC,kBAAkB0I,MAAM99B,IACvDpQ,KAAKmuC,kBACLnuC,KAAK6sC,aAAexqB,EAAUwmB,eAAe7oC,KAAKmuC,iBAClDnuC,KAAKmuC,qBAAkB7nC,GAE3BtG,KAAK4sC,WAAavqB,CACtB,CACA,YAAIijB,GACA,OAAKtlC,KAAK4sC,WAIC5sC,KAAKqiB,UAAUijB,SAHftlC,KAAKulC,SAKpB,CACAhjB,IAAAA,CAAKkjB,EAAW2I,GACZ,OAAOpuC,KAAKslC,SAAS+E,QAAQ5E,GAAWljB,KAAK,OACjD,CACA,aAAIF,GACsB,IAAAgsB,EAAjBruC,KAAK4sC,aACe,QAArByB,EAAAruC,KAAK8sC,wBAAgB,IAAAuB,GAArBA,EAAuBj4B,SvJ/D/BrC,IAAW,EACXmB,KACAlB,KACAD,IAAW,GuJ+DP,OAAO/T,KAAK4sC,UAChB,CACA,YAAIvU,GACA,OAAOr4B,KAAKqiB,UAAUgW,QAC1B,CACA,QAAI1Z,GACA,OAAO3e,KAAKqiB,UAAU1D,IAC1B,CACA,QAAIA,CAAKC,GACL5e,KAAKqiB,UAAU1D,KAAOC,CAC1B,CACA,SAAIkmB,GACA,OAAO9kC,KAAKqiB,UAAUyiB,KAC1B,CACA,SAAI/zB,GACA,OAAO/Q,KAAKqiB,UAAUtR,KAC1B,CACA,SAAI+zB,CAAMmD,GACNjoC,KAAKqiB,UAAUyiB,MAAQmD,CAC3B,CACA,aAAIpC,GACA,OAAO7lC,KAAKqiB,UAAUwjB,SAC1B,CACAgD,cAAAA,CAAeC,GAOX,OANI9oC,KAAK4sC,WACL5sC,KAAK6sC,aAAe7sC,KAAKqiB,UAAUwmB,eAAeC,GAGlD9oC,KAAKmuC,gBAAkBrF,EAEpB,IAAM9oC,KAAKqhB,MACtB,CACAklB,IAAAA,GACIvmC,KAAKqiB,UAAUkkB,MACnB,CACAE,KAAAA,GACIzmC,KAAKqiB,UAAUokB,OACnB,CACAxxB,QAAAA,GACIjV,KAAKqiB,UAAUpN,UACnB,CACA5C,MAAAA,GAAS,IAAAi8B,EACDtuC,KAAK4sC,YACL5sC,KAAKqiB,UAAUhQ,SAEE,QAArBi8B,EAAAtuC,KAAK8sC,wBAAgB,IAAAwB,GAArBA,EAAuBj8B,QAC3B,EE3KJ,MAAMqyB,GAAahnC,GAAoB,OAAVA,ECE7B,MAAM6wC,GAAoB,CACtBxgC,KAAM,SACNmuB,UAAW,IACXC,QAAS,GACTI,UAAW,IAQTiS,GAAsB,CACxBzgC,KAAM,YACNsqB,SAAU,IAMRqI,GAAO,CACT3yB,KAAM,YACN2yB,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBrI,SAAU,IAERlO,GAAuBA,CAACskB,EAAQjtC,KAAoB,IAAlB,UAAEsU,GAAWtU,EACjD,OAAIsU,EAAUtX,OAAS,EACZgwC,GAEFrnC,EAAeX,IAAIioC,GACjBA,EAASzkC,WAAW,SAxBG,CAClC+D,KAAM,SACNmuB,UAAW,IACXC,QAAoB,IAsBarmB,EAAU,GAtBnB,EAAIvO,KAAKoB,KAAK,KAAO,GAC7C4zB,UAAW,IAsBDgS,GAEH7N,I,8HC9BX,MAAMgO,GAAqB,SAACxlC,EAAMxL,EAAO+f,GAAM,IAAE2M,EAAU7rB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGwB,EAAOxB,UAAAC,OAAA,EAAAD,UAAA,QAAA+H,EAAE+mC,EAAS9uC,UAAAC,OAAA,EAAAD,UAAA,QAAA+H,EAAA,OAAMgP,IACtF,MAAMq5B,EAAkBhX,GAAmBvN,EAAYlhB,IAAS,CAAC,EAM3Dk+B,EAAQuH,EAAgBvH,OAAShd,EAAWgd,OAAS,EAK3D,IAAI,QAAEG,EAAU,GAAMnd,EACtBmd,GAAoB9O,GAAsB2O,GAC1C,MAAMtnB,GAAO5b,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACT4R,UAAW5B,MAAMmQ,QAAQ5G,GAAUA,EAAS,CAAC,KAAMA,GACnDijB,KAAM,UACNhhB,SAAUhiB,EAAM+gB,eACbkwB,GAAe,IAClBvH,OAAQG,EACRlf,SAAW3gB,IACPhK,EAAMmG,IAAI6D,GACVinC,EAAgBtmB,UAAYsmB,EAAgBtmB,SAAS3gB,IAEzD4N,WAAYA,KACRA,IACAq5B,EAAgBr5B,YAAcq5B,EAAgBr5B,cAElDpM,OACAqM,YAAa7X,EACbqC,QAASstC,OAAY/mC,EAAYvG,KC/BzC,SAA4ByB,GAA2I,IAA1I,KAAEotC,EAAMxH,MAAOyH,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAEpK,EAAM,WAAEC,EAAU,YAAE6B,EAAW,KAAE/7B,EAAI,QAAE48B,GAAwB/lC,EAAZ4oB,GAAUzjB,EAAAA,GAAAA,GAAAnF,EAAAqlB,IAC/J,QAASrpB,OAAOO,KAAKqsB,GAAY5rB,MACrC,EDmCSywC,CAAoBN,IACrBnxC,OAAO+yB,OAAOzQ,EAASqK,GAAqBjhB,EAAM4W,IAOtDA,EAAQuY,WAAavY,EAAQuY,SAAWI,GAAsB3Y,EAAQuY,WACtEvY,EAAQ4mB,cAAgB5mB,EAAQ4mB,YAAcjO,GAAsB3Y,EAAQ4mB,mBAIvDpgC,IAAjBwZ,EAAQnV,OACRmV,EAAQhK,UAAU,GAAKgK,EAAQnV,MAEnC,IAAIukC,GAAa,EAwBjB,KAvBqB,IAAjBpvB,EAAQ/R,MACc,IAArB+R,EAAQuY,WAAmBvY,EAAQ4mB,eACpCtO,GAAqBtY,GACC,IAAlBA,EAAQsnB,QACR8H,GAAa,KAGjB5+B,GAAmBu9B,mBACnBv9B,GAAmB6+B,kBACnBD,GAAa,EACb9W,GAAqBtY,GACrBA,EAAQsnB,MAAQ,GAMpBtnB,EAAQkpB,cAAgB2F,EAAgB5gC,OAAS4gC,EAAgBjO,KAM7DwO,IAAe7B,QAA6B/mC,IAAhB5I,EAAMqI,MAAqB,CACvD,MAAM4P,EFlFd,SAA0BG,EAAStU,EAAmCmU,GAAe,IAAhD,OAAEivB,EAAM,WAAEC,EAAa,QAAQrjC,EAChE,MAAMujC,EAAoBjvB,EAAU5X,OAAOwmC,IACrCxlB,EAAQ0lB,GAAyB,SAAfC,GAAyBD,EAAS,IAAM,EAC1D,EACAG,EAAkBvmC,OAAS,EACjC,OAAQ0gB,QAA2B5Y,IAAlBqP,EAEXA,EADAovB,EAAkB7lB,EAE5B,CE0E8BylB,CAAiB7kB,EAAQhK,UAAW64B,GAC1D,QAAsBroC,IAAlBqP,EAKA,YAJAnC,GAAMT,OAAO,KACT+M,EAAQuI,SAAS1S,GACjBmK,EAAQxK,cAIpB,CACA,OAAOq5B,EAAgBS,OACjB,IAAIxJ,GAAY9lB,GAChB,IAAI0sB,GAA0B1sB,GACvC,E,kCEnFD,SAASuvB,GAAoB7tC,EAAoC4C,GAAK,IAAxC,cAAEkrC,EAAa,eAAEC,GAAgB/tC,EAC3D,MAAMguC,EAAcF,EAAczoC,eAAezC,KAAgC,IAAxBmrC,EAAenrC,GAExE,OADAmrC,EAAenrC,IAAO,EACforC,CACX,CACA,SAASC,GAAcj7B,EAAek7B,GAAmE,IAA9C,MAAEtI,EAAQ,EAAC,mBAAEuI,EAAkB,KAAE5hC,GAAMxP,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,GAC9F,WAAE6rB,EAAa5V,EAAc2V,uBAAsB,cAAE4I,GAA6B2c,EAAXjyB,GAAM9W,EAAAA,GAAAA,GAAK+oC,EAAmB7oB,IACrG8oB,IACAvlB,EAAaulB,GACjB,MAAMC,EAAa,GACbC,EAAqB9hC,GACvByG,EAAcohB,gBACdphB,EAAcohB,eAAeka,WAAW/hC,GAC5C,IAAK,MAAM3J,KAAOqZ,EAAQ,KAAAsyB,EACtB,MAAMryC,EAAQ8W,EAAcC,SAASrQ,EAAoC,QAAjC2rC,EAAEv7B,EAAcuR,aAAa3hB,UAAI,IAAA2rC,EAAAA,EAAI,MACvE/c,EAAcvV,EAAOrZ,GAC3B,QAAoBkC,IAAhB0sB,GACC6c,GACGR,GAAqBQ,EAAoBzrC,GAC7C,SAEJ,MAAMuqC,GAAezqC,EAAAA,EAAAA,GAAA,CACjBkjC,SACGzP,GAAmBvN,GAAc,CAAC,EAAGhmB,IAKtCsR,EAAehY,EAAMqI,MAC3B,QAAqBO,IAAjBoP,IACChY,EAAMilB,cACNzO,MAAMmQ,QAAQ2O,IACfA,IAAgBtd,IACfi5B,EAAgBjvB,SACjB,SAMJ,IAAI2tB,GAAY,EAChB,GAAIrmC,OAAOgpC,uBAAwB,CAC/B,MAAMC,EAAW9X,GAAqB3jB,GACtC,GAAIy7B,EAAU,CACV,MAAMpK,EAAY7+B,OAAOgpC,uBAAuBC,EAAU7rC,EAAKoP,IAC7C,OAAdqyB,IACA8I,EAAgB9I,UAAYA,EAC5BwH,GAAY,EAEpB,CACJ,CACArV,GAAqBxjB,EAAepQ,GACpC1G,EAAMukB,MAAMysB,GAAmBtqC,EAAK1G,EAAOs1B,EAAaxe,EAAciR,oBAAsB1Y,EAAevG,IAAIpC,GACzG,CAAE2J,MAAM,GACR4gC,EAAiBn6B,EAAe64B,IACtC,MAAMhrB,EAAY3kB,EAAM2kB,UACpBA,GACAutB,EAAWxxC,KAAKikB,EAExB,CAQA,OAPI0Q,GACA5Q,QAAQ+tB,IAAIN,GAAYrtB,KAAK,KACzB/O,GAAMT,OAAO,KACTggB,GnEvDhB,SAAmBve,EAAesQ,GAE9B,IAAAtjB,EADiBk2B,GAAeljB,EAAesQ,IACsB,CAAC,GAAlE,cAAEiO,EAAgB,CAAC,EAAC,WAAE3I,EAAa,CAAC,GAAc5oB,EAARic,GAAM9W,EAAAA,GAAAA,GAAAnF,EAAAqlB,IACpDpJ,GAAMvZ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQuZ,GAAWsV,GACzB,IAAK,MAAM3uB,KAAOqZ,EAEdqa,GAAetjB,EAAepQ,EADhB2zB,GAA6Bta,EAAOrZ,IAG1D,CmE+CiC+rC,CAAU37B,EAAeue,OAI/C6c,CACX,CChFA,SAASQ,GAAiB9uC,EAAUmD,EAAOqqC,GAA0D,IAA3CC,EAAexwC,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EAAGywC,EAAgBzwC,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EAC9F,MAAM2gB,EAAQhL,MAAMvJ,KAAKrJ,GACpB+uC,KAAK,CAACl5B,EAAGC,IAAMD,EAAEsR,iBAAiBrR,IAClCtQ,QAAQrC,GACP6rC,EAAchvC,EAASZ,KACvB6vC,GAAsBD,EAAc,GAAKvB,EAE/C,MADiD,oBAAlBD,EAEzBA,EAAc5vB,EAAOoxB,GACA,IAArBtB,EACI9vB,EAAQ6vB,EACRwB,EAAqBrxB,EAAQ6vB,CAC3C,CCRA,SAASyB,GAAeh8B,EAAewW,GAAuB,IAAAylB,EAAA,IAAd3wB,EAAOvhB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAMqQ,EAAW8oB,GAAeljB,EAAewW,EAA0B,SAAjBlL,EAAQ/R,KAC7B,QAD4C0iC,EACzEj8B,EAAc6Q,uBAAe,IAAAorB,OAAA,EAA7BA,EAA+BttC,YAC/BmD,GACN,IAAI,WAAE8jB,EAAa5V,EAAc2V,wBAA0B,CAAC,GAAMvb,GAAY,CAAC,EAC3EkR,EAAQ6vB,qBACRvlB,EAAatK,EAAQ6vB,oBAMzB,MAAMe,EAAe9hC,EACf,IAAMuT,QAAQ+tB,IAAIT,GAAcj7B,EAAe5F,EAAUkR,IACzD,IAAMqC,QAAQC,UAKduuB,EAAqBn8B,EAAcgS,iBAAmBhS,EAAcgS,gBAAgB9lB,KACpF,WAAsB,IAArBkwC,EAAYryC,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EACd,MAAM,cAAEuwC,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsB5kB,EAClE,OAkBZ,SAAyB5V,EAAewW,GAA2F,IAAlFoc,EAAK7oC,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EAAGuwC,EAAavwC,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EAAGwwC,EAAexwC,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EAAGywC,EAAgBzwC,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EAAGuhB,EAAOvhB,UAAAC,OAAA,EAAAD,UAAA,QAAA+H,EAC7H,MAAMspC,EAAa,GACnB,IAAK,MAAMnrC,KAAS+P,EAAcgS,gBAC9B/hB,EAAM6a,OAAO,iBAAkB0L,GAC/B4kB,EAAWxxC,KAAKoyC,GAAe/rC,EAAOumB,GAAO9mB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtC4b,GAAO,IACVsnB,MAAOA,GACuB,oBAAlB0H,EAA+B,EAAIA,GAC3CsB,GAAiB57B,EAAcgS,gBAAiB/hB,EAAOqqC,EAAeC,EAAiBC,MAC5FzsB,KAAK,IAAM9d,EAAM6a,OAAO,oBAAqB0L,KAEpD,OAAO7I,QAAQ+tB,IAAIN,EACvB,CA9BmBiB,CAAgBr8B,EAAewW,EAAS4lB,EAAc9B,EAAeC,EAAiBC,EAAkBlvB,EACnH,EACE,IAAMqC,QAAQC,WAKd,KAAEwsB,GAASxkB,EACjB,GAAIwkB,EAAM,CACN,MAAOkC,EAAOC,GAAiB,mBAATnC,EAChB,CAAC8B,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOI,IAAQvuB,KAAK,IAAMwuB,IAC9B,CAEI,OAAO5uB,QAAQ+tB,IAAI,CAACQ,IAAgBC,EAAmB7wB,EAAQsnB,QAEvE,CC3CA,SAAS4J,GAAeznB,EAAMjJ,GAC1B,IAAKpM,MAAMmQ,QAAQ/D,GACf,OAAO,EACX,MAAM2wB,EAAa3wB,EAAK9hB,OACxB,GAAIyyC,IAAe1nB,EAAK/qB,OACpB,OAAO,EACX,IAAK,IAAI1B,EAAI,EAAGA,EAAIm0C,EAAYn0C,IAC5B,GAAIwjB,EAAKxjB,KAAOysB,EAAKzsB,GACjB,OAAO,EAEf,OAAO,CACX,CCRA,MAAMo0C,GAAkB3sB,GAAa/lB,OACrC,SAAS2yC,GAAkB38B,GACvB,IAAKA,EACD,OACJ,IAAKA,EAAcgQ,sBAAuB,CACtC,MAAM9gB,EAAU8Q,EAAcnU,QACxB8wC,GAAkB38B,EAAcnU,SAChC,CAAC,EAIP,YAHoCiG,IAAhCkO,EAAcvU,MAAMgD,UACpBS,EAAQT,QAAUuR,EAAcvU,MAAMgD,SAEnCS,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAI5G,EAAI,EAAGA,EAAIo0C,GAAiBp0C,IAAK,CACtC,MAAMoM,EAAOqb,GAAaznB,GACpBqzB,EAAO3b,EAAcvU,MAAMiJ,IAC7Bkb,GAAe+L,KAAkB,IAATA,KACxBzsB,EAAQwF,GAAQinB,EAExB,CACA,OAAOzsB,CACX,C,wCCfM0tC,GAAuB,IAAI9sB,IAAsBgf,UACjD+N,GAAoB/sB,GAAqB9lB,OAC/C,SAAS8yC,GAAY98B,GACjB,OAAQo7B,GAAeztB,QAAQ+tB,IAAIN,EAAWvqC,IAAI7D,IAAA,IAAC,UAAE6gB,EAAS,QAAEvC,GAASte,EAAA,OCT7E,SAA8BgT,EAAesQ,GAA0B,IAE/DzC,EAFiDvC,EAAOvhB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFAiW,EAAc8K,OAAO,iBAAkBwF,GAEnC5Q,MAAMmQ,QAAQS,GAAa,CAC3B,MAAM8qB,EAAa9qB,EAAWzf,IAAK2lB,GAAYwlB,GAAeh8B,EAAewW,EAASlL,IACtFuC,EAAYF,QAAQ+tB,IAAIN,EAC5B,MACK,GAA0B,kBAAf9qB,EACZzC,EAAYmuB,GAAeh8B,EAAesQ,EAAYhF,OAErD,CACD,MAAMyxB,EAA2C,oBAAfzsB,EAC5B4S,GAAeljB,EAAesQ,EAAYhF,EAAQ3c,QAClD2hB,EACNzC,EAAYF,QAAQ+tB,IAAIT,GAAcj7B,EAAe+8B,EAAoBzxB,GAC7E,CACA,OAAOuC,EAAUE,KAAK,KAClB/N,EAAc8K,OAAO,oBAAqBwF,IAElD,CDVkF0sB,CAAqBh9B,EAAe6N,EAAWvC,KACjI,CACA,SAAS2xB,GAAqBj9B,GAC1B,IAAIiQ,EAAU6sB,GAAY98B,GACtBzD,EAAQ2gC,KACRpsC,GAAkB,EAKtB,MAAMqsC,EAA2B5jC,GAAS,CAACuD,EAAKwT,KAAe,IAAA2rB,EAC3D,MAAM7hC,EAAW8oB,GAAeljB,EAAesQ,EAAqB,SAAT/W,EACxB,QADuC0iC,EACpEj8B,EAAc6Q,uBAAe,IAAAorB,OAAA,EAA7BA,EAA+BttC,YAC/BmD,GACN,GAAIsI,EAAU,CACV,MAAM,WAAEwb,EAAU,cAAE2I,GAA6BnkB,EAAX6O,GAAM9W,EAAAA,GAAAA,GAAKiI,EAAQiY,IACzDvV,GAAGpN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQoN,GAAQmM,GAAWsV,EAClC,CACA,OAAOzhB,GAmBX,SAASukB,EAAe+b,GACpB,MAAM,MAAE3xC,GAAUuU,EACZ9Q,EAAUytC,GAAkB38B,EAAcnU,SAAW,CAAC,EAKtDuvC,EAAa,GAKbiC,EAAc,IAAIzqC,IAMxB,IAAI0qC,EAAkB,CAAC,EAKnBC,EAAsBlW,IAO1B,IAAK,IAAI/+B,EAAI,EAAGA,EAAIu0C,GAAmBv0C,IAAK,CACxC,MAAMiR,EAAOqjC,GAAqBt0C,GAC5Bk1C,EAAYjhC,EAAMhD,GAClBoiB,OAAuB7pB,IAAhBrG,EAAM8N,GACb9N,EAAM8N,GACNrK,EAAQqK,GACRkkC,EAAgB7tB,GAAe+L,GAK/B+hB,EAAcnkC,IAAS6jC,EAAoBI,EAAUG,SAAW,MAClD,IAAhBD,IACAH,EAAsBj1C,GAO1B,IAAIs1C,EAAcjiB,IAASzsB,EAAQqK,IAC/BoiB,IAASlwB,EAAM8N,IACfkkC,EAYJ,GAXIG,GACA9sC,GACAkP,EAAciS,yBACd2rB,GAAc,GAMlBJ,EAAU1C,eAAaprC,EAAAA,EAAAA,GAAA,GAAQ4tC,IAI7BE,EAAUG,UAA4B,OAAhBD,IAElB/hB,IAAS6hB,EAAUK,UAErBluB,GAAoBgM,IACJ,mBAATA,EACP,SAOJ,MAAMmiB,EAAmBC,GAAuBP,EAAUK,SAAUliB,GACpE,IAAIqiB,EAAoBF,GAEnBvkC,IAAS6jC,GACNI,EAAUG,WACTC,GACDH,GAEHn1C,EAAIi1C,GAAuBE,EAC5BQ,GAAuB,EAK3B,MAAMC,EAAiBx+B,MAAMmQ,QAAQ8L,GAAQA,EAAO,CAACA,GAKrD,IAAIwiB,EAAiBD,EAAerhC,OAAOsgC,EAAwB5jC,GAAO,CAAC,IACvD,IAAhBmkC,IACAS,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMZ,EAC9Ba,GAAO3uC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN0uC,GACAD,GAEDG,EAAiB1uC,IACnBouC,GAAoB,EAChBX,EAAYrrC,IAAIpC,KAChBquC,GAAuB,EACvBZ,EAAY5tC,OAAOG,IAEvB4tC,EAAUzC,eAAenrC,IAAO,EAChC,MAAMmR,EAAcf,EAAcC,SAASrQ,GACvCmR,IACAA,EAAYsU,WAAY,IAEhC,IAAK,MAAMzlB,KAAOyuC,EAAS,CACvB,MAAMtpB,EAAOopB,EAAevuC,GACtBkc,EAAOsyB,EAAmBxuC,GAEhC,GAAI0tC,EAAgBjrC,eAAezC,GAC/B,SAIJ,IAAI2uC,GAAkB,EAElBA,EADAlb,GAAkBtO,IAASsO,GAAkBvX,IAC1B0wB,GAAeznB,EAAMjJ,GAGtBiJ,IAASjJ,EAE3ByyB,OACazsC,IAATijB,GAA+B,OAATA,EAEtBupB,EAAc1uC,GAIdytC,EAAYz/B,IAAIhO,QAGNkC,IAATijB,GAAsBsoB,EAAYrrC,IAAIpC,GAK3C0uC,EAAc1uC,GAOd4tC,EAAU1C,cAAclrC,IAAO,CAEvC,CAKA4tC,EAAUK,SAAWliB,EACrB6hB,EAAUY,mBAAqBD,EAC3BX,EAAUG,WACVL,GAAe5tC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4tC,GAAoBa,IAE3CrtC,GAAmBkP,EAAc+Q,wBACjCitB,GAAoB,GAMxB,MAAMQ,EAAuBZ,GAAeE,EAExCE,KADoBQ,GAAwBP,IAE5C7C,EAAWxxC,QAAQs0C,EAAertC,IAAKgd,IACnC,MAAMvC,EAAU,CAAE/R,QAMlB,GAAyB,kBAAdsU,GACP/c,IACC0tC,GACDx+B,EAAciS,wBACdjS,EAAcnU,OAAQ,CACtB,MAAM,OAAEA,GAAWmU,EACby+B,EAAgBvb,GAAer3B,EAAQgiB,GAC7C,GAAIhiB,EAAO2nB,kBAAoBirB,EAAe,CAC1C,MAAM,cAAEnE,GAAkBmE,EAAc7oB,YAAc,CAAC,EACvDtK,EAAQsnB,MAAQgJ,GAAiB/vC,EAAO2nB,iBAAkBxT,EAAes6B,EAC7E,CACJ,CACA,MAAO,CACHzsB,UAAWA,EACXvC,aAIhB,CAMA,GAAI+xB,EAAYnxC,KAAM,CAClB,MAAMwyC,EAAoB,CAAC,EAK3B,GAA6B,mBAAlBjzC,EAAMgD,QAAuB,CACpC,MAAMkwC,EAAoBzb,GAAeljB,EAAeN,MAAMmQ,QAAQpkB,EAAMgD,SACtEhD,EAAMgD,QAAQ,GACdhD,EAAMgD,SACRkwC,GAAqBA,EAAkB/oB,aACvC8oB,EAAkB9oB,WAAa+oB,EAAkB/oB,WAEzD,CACAynB,EAAYpzC,QAAS2F,IACjB,MAAMgvC,EAAiB5+B,EAAcqW,cAAczmB,GAC7CmR,EAAcf,EAAcC,SAASrQ,GACvCmR,IACAA,EAAYsU,WAAY,GAE5BqpB,EAAkB9uC,GAAqB,OAAdgvC,QAAc,IAAdA,EAAAA,EAAkB,OAE/CxD,EAAWxxC,KAAK,CAAEikB,UAAW6wB,GACjC,CACA,IAAIG,EAAgBx8B,QAAQ+4B,EAAWpxC,QAOvC,OANI8G,IACmB,IAAlBrF,EAAMgD,SAAqBhD,EAAMgD,UAAYhD,EAAMwkB,SACnDjQ,EAAciS,yBACf4sB,GAAgB,GAEpB/tC,GAAkB,EACX+tC,EAAgB5uB,EAAQmrB,GAAcztB,QAAQC,SACzD,CAiBA,MAAO,CACHyT,iBACAyd,UAfJ,SAAmBvlC,EAAMokC,GAAU,IAAAoB,EAE/B,GAAIxiC,EAAMhD,GAAMokC,WAAaA,EACzB,OAAOhwB,QAAQC,UAEU,QAA7BmxB,EAAA/+B,EAAcgS,uBAAe,IAAA+sB,GAA7BA,EAA+B90C,QAASgG,IAAK,IAAA+uC,EAAA,OAAyB,QAAzBA,EAAK/uC,EAAMmxB,sBAAc,IAAA4d,OAAA,EAApBA,EAAsBF,UAAUvlC,EAAMokC,KACxFphC,EAAMhD,GAAMokC,SAAWA,EACvB,MAAMvC,EAAa/Z,EAAe9nB,GAClC,IAAK,MAAM3J,KAAO2M,EACdA,EAAM3M,GAAKkrC,cAAgB,CAAC,EAEhC,OAAOM,CACX,EAII6D,mBA1RJ,SAA4BC,GACxBjvB,EAAUivB,EAAal/B,EAC3B,EAyRIs7B,SAAUA,IAAM/+B,EAChB4iC,MAAOA,KACH5iC,EAAQ2gC,KACRpsC,GAAkB,GAG9B,CACA,SAASitC,GAAuBjyB,EAAMiJ,GAClC,MAAoB,kBAATA,EACAA,IAASjJ,IAEXpM,MAAMmQ,QAAQkF,KACXynB,GAAeznB,EAAMjJ,EAGrC,CACA,SAASszB,KACL,MAAO,CACHzB,SAFyB5zC,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,IAAAA,UAAA,GAGzB+wC,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBqD,mBAAoB,CAAC,EAE7B,CACA,SAASlB,KACL,MAAO,CACHjtB,QAASmvB,IAAgB,GACzBC,YAAaD,KACbE,WAAYF,KACZxiB,SAAUwiB,KACVG,UAAWH,KACXI,WAAYJ,KACZzwB,KAAMywB,KAEd,CElWA,MAAM9qB,GACFrpB,WAAAA,CAAYw0C,GACRj0C,KAAK8nB,WAAY,EACjB9nB,KAAKi0C,KAAOA,CAChB,CACAlhC,MAAAA,GAAW,ECHf,IAAIpR,GAAK,ECCT,MAAMiuC,GAAa,CACfvtB,UAAW,CACPyG,QCDR,cAA+BA,GAM3BrpB,WAAAA,CAAYw0C,GACR52B,MAAM42B,GACNA,EAAKre,iBAAmBqe,EAAKre,eAAiB6b,GAAqBwC,GACvE,CACAC,mCAAAA,GACI,MAAM,QAAEzvB,GAAYzkB,KAAKi0C,KAAKhqB,WAC1B9F,GAAoBM,KACpBzkB,KAAKm0C,gBAAkB1vB,EAAQ2vB,UAAUp0C,KAAKi0C,MAEtD,CAIAntB,KAAAA,GACI9mB,KAAKk0C,qCACT,CACAnhC,MAAAA,GACI,MAAM,QAAE0R,GAAYzkB,KAAKi0C,KAAKhqB,YACtBxF,QAAS4vB,GAAgBr0C,KAAKi0C,KAAKn0C,WAAa,CAAC,EACrD2kB,IAAY4vB,GACZr0C,KAAKk0C,qCAEb,CACAxsB,OAAAA,GAAU,IAAA4sB,EACNt0C,KAAKi0C,KAAKre,eAAe+d,QACL,QAApBW,EAAAt0C,KAAKm0C,uBAAe,IAAAG,GAApBA,EAAAn3C,KAAA6C,KACJ,ID7BAmjB,KAAM,CACF2F,QDLR,cAAmCA,GAC/BrpB,WAAAA,GACI4d,SAAS9e,WACTyB,KAAK2B,GAAKA,IACd,CACAoR,MAAAA,GACI,IAAK/S,KAAKi0C,KAAK5uB,gBACX,OACJ,MAAM,UAAEjlB,EAAS,eAAE8C,GAAmBlD,KAAKi0C,KAAK5uB,iBACxCjlB,UAAWm0C,GAAkBv0C,KAAKi0C,KAAK5qB,qBAAuB,CAAC,EACvE,IAAKrpB,KAAKi0C,KAAKre,gBAAkBx1B,IAAcm0C,EAC3C,OAEJ,MAAMC,EAAgBx0C,KAAKi0C,KAAKre,eAAe0d,UAAU,QAASlzC,GAC9D8C,IAAmB9C,GACnBo0C,EAAcjyB,KAAK,KACfrf,EAAelD,KAAK2B,KAGhC,CACAmlB,KAAAA,GACI,MAAM,SAAE9iB,EAAQ,eAAEd,GAAmBlD,KAAKi0C,KAAK5uB,iBAAmB,CAAC,EAC/DniB,GACAA,EAAelD,KAAK2B,IAEpBqC,IACAhE,KAAK0nB,QAAU1jB,EAAShE,KAAK2B,IAErC,CACA+lB,OAAAA,GAAY,KGhCV+sB,GAAa,CACfvyC,GAAG,EACH6F,GAAG,GAEP,SAAS2sC,KACL,OAAOD,GAAWvyC,GAAKuyC,GAAW1sC,CACtC,CCNA,SAAS4sC,GAAYl3B,EAAQ0D,EAAW9B,GAAsC,IAA7BS,EAAOvhB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAEq2C,SAAS,GAElE,OADAn3B,EAAO8J,iBAAiBpG,EAAW9B,EAASS,GACrC,IAAMrC,EAAOo3B,oBAAoB1zB,EAAW9B,EACvD,CCHA,MAAMy1B,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,GACtB,MAAO,CACH3pC,MAAO,CACHlJ,EAAG6yC,EAAMK,MACTrtC,EAAGgtC,EAAMM,OAGrB,CCNA,SAASC,GAAgB73B,EAAQ0D,EAAW9B,EAASS,GACjD,OAAO60B,GAAYl3B,EAAQ0D,EDMP9B,IACZ01B,GAAUD,GAAiBC,IAAU11B,EAAQ01B,EAAOI,GAAiBJ,ICPvCQ,CAAel2B,GAAUS,EACnE,CCGA,SAAS01B,GAAW9pC,GAChB,OAAOA,EAAKjB,IAAMiB,EAAKlB,GAC3B,CAIA,SAASirC,GAAczkC,EAAOsI,EAAQmE,GAAsB,IAAdD,EAAMjf,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,GACnDyS,EAAMwM,OAASA,EACfxM,EAAM3F,YAAcX,EAAU4O,EAAO9O,IAAK8O,EAAO7O,IAAKuG,EAAMwM,QAC5DxM,EAAM5I,MAAQotC,GAAW/3B,GAAU+3B,GAAWl8B,GAC9CtI,EAAMzF,UACFb,EAAU+S,EAAOjT,IAAKiT,EAAOhT,IAAKuG,EAAMwM,QAAUxM,EAAM3F,aACvD2F,EAAM5I,OAjBG,OAiBmB4I,EAAM5I,OAhBzB,QAiBVyR,MAAM7I,EAAM5I,UACZ4I,EAAM5I,MAAQ,IAEb4I,EAAMzF,YAlBO,KAmBdyF,EAAMzF,WAlBQ,KAmBdsO,MAAM7I,EAAMzF,cACZyF,EAAMzF,UAAY,EAE1B,CACA,SAASmqC,GAAa1kC,EAAOsI,EAAQmE,EAAQD,GACzCi4B,GAAczkC,EAAM9O,EAAGoX,EAAOpX,EAAGub,EAAOvb,EAAGsb,EAASA,EAAOlR,aAAUhG,GACrEmvC,GAAczkC,EAAMjJ,EAAGuR,EAAOvR,EAAG0V,EAAO1V,EAAGyV,EAASA,EAAOjR,aAAUjG,EACzE,CACA,SAASqvC,GAAiBl4B,EAAQm4B,EAAUv1C,GACxCod,EAAOjT,IAAMnK,EAAOmK,IAAMorC,EAASprC,IACnCiT,EAAOhT,IAAMgT,EAAOjT,IAAMgrC,GAAWI,EACzC,CAKA,SAASC,GAAyBp4B,EAAQiG,EAAQrjB,GAC9Cod,EAAOjT,IAAMkZ,EAAOlZ,IAAMnK,EAAOmK,IACjCiT,EAAOhT,IAAMgT,EAAOjT,IAAMgrC,GAAW9xB,EACzC,CACA,SAASoyB,GAAqBr4B,EAAQiG,EAAQrjB,GAC1Cw1C,GAAyBp4B,EAAOvb,EAAGwhB,EAAOxhB,EAAG7B,EAAO6B,GACpD2zC,GAAyBp4B,EAAO1V,EAAG2b,EAAO3b,EAAG1H,EAAO0H,EACxD,CCjDA,SAASguC,GAAS/jC,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCDA,MAAMgkC,GAAmBx0C,IAAiB,IAAhB,QAAErB,GAASqB,EACjC,OAAOrB,EAAUA,EAAQ81C,cAAcC,YAAc,MCFnDlqC,GAAWA,CAACmL,EAAGC,IAAM7P,KAAKc,IAAI8O,EAAIC,GCSxC,MAAM++B,GACF12C,WAAAA,CAAYs1C,EAAOqB,GAAiH,IAAvG,mBAAEl3C,EAAkB,cAAEm3C,EAAgBrvC,OAAM,iBAAEsvC,GAAmB,EAAK,kBAAEC,EAAoB,GAAIh4C,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EAgE7H,GA5DAyB,KAAKw2C,WAAa,KAIlBx2C,KAAKy2C,cAAgB,KAIrBz2C,KAAK02C,kBAAoB,KAIzB12C,KAAKo2C,SAAW,CAAC,EAIjBp2C,KAAKq2C,cAAgBrvC,OACrBhH,KAAK22C,YAAc,KACf,IAAM32C,KAAKy2C,gBAAiBz2C,KAAK02C,kBAC7B,OACJ,MAAME,EAAOC,GAAW72C,KAAK02C,kBAAmB12C,KAAK82C,SAC/CC,EAAmC,OAApB/2C,KAAKw2C,WAIpBQ,EDtClB,SAAoB7/B,EAAGC,GAEnB,MAAM6/B,EAASjrC,GAASmL,EAAEjV,EAAGkV,EAAElV,GACzBg1C,EAASlrC,GAASmL,EAAEpP,EAAGqP,EAAErP,GAC/B,OAAOR,KAAKoB,KAAKsuC,GAAU,EAAIC,GAAU,EAC7C,CCiC4CC,CAAWP,EAAKnpB,OAAQ,CAAEvrB,EAAG,EAAG6F,EAAG,KAAQ/H,KAAKu2C,kBAChF,IAAKQ,IAAiBC,EAClB,OACJ,MAAM,MAAE5rC,GAAUwrC,GACZ,UAAE3lC,GAAcsB,GACtBvS,KAAK82C,QAAQ14C,MAAI8F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIkH,GAAK,IAAE6F,eAC9B,MAAM,QAAEmmC,EAAO,OAAEC,GAAWr3C,KAAKo2C,SAC5BW,IACDK,GAAWA,EAAQp3C,KAAKy2C,cAAeG,GACvC52C,KAAKw2C,WAAax2C,KAAKy2C,eAE3BY,GAAUA,EAAOr3C,KAAKy2C,cAAeG,IAEzC52C,KAAKs3C,kBAAoB,CAACvC,EAAO6B,KAC7B52C,KAAKy2C,cAAgB1B,EACrB/0C,KAAK02C,kBAAoBhqC,GAAekqC,EAAM52C,KAAKd,oBAEnDsU,GAAMT,OAAO/S,KAAK22C,aAAa,IAEnC32C,KAAKu3C,gBAAkB,CAACxC,EAAO6B,KAC3B52C,KAAKw3C,MACL,MAAM,MAAEC,EAAK,aAAEC,EAAY,gBAAEC,GAAoB33C,KAAKo2C,SAGtD,GAFIp2C,KAAKs2C,kBACLqB,GAAmBA,KACjB33C,KAAKy2C,gBAAiBz2C,KAAK02C,kBAC7B,OACJ,MAAMkB,EAAUf,GAA0B,kBAAf9B,EAAMhnC,KAC3B/N,KAAK02C,kBACLhqC,GAAekqC,EAAM52C,KAAKd,oBAAqBc,KAAK82C,SACtD92C,KAAKw2C,YAAciB,GACnBA,EAAM1C,EAAO6C,GAEjBF,GAAgBA,EAAa3C,EAAO6C,KAGnC9C,GAAiBC,GAClB,OACJ/0C,KAAKs2C,iBAAmBA,EACxBt2C,KAAKo2C,SAAWA,EAChBp2C,KAAKd,mBAAqBA,EAC1Bc,KAAKu2C,kBAAoBA,EACzBv2C,KAAKq2C,cAAgBA,GAAiBrvC,OACtC,MACM6wC,EAAcnrC,GADPyoC,GAAiBJ,GACW/0C,KAAKd,qBACxC,MAAEkM,GAAUysC,GACZ,UAAE5mC,GAAcsB,GACtBvS,KAAK82C,QAAU,EAAA5yC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAMkH,GAAK,IAAE6F,eAC5B,MAAM,eAAE6mC,GAAmB1B,EAC3B0B,GACIA,EAAe/C,EAAO8B,GAAWgB,EAAa73C,KAAK82C,UACvD92C,KAAK+3C,gBAAkBxf,GAAK+c,GAAgBt1C,KAAKq2C,cAAe,cAAer2C,KAAKs3C,mBAAoBhC,GAAgBt1C,KAAKq2C,cAAe,YAAar2C,KAAKu3C,iBAAkBjC,GAAgBt1C,KAAKq2C,cAAe,gBAAiBr2C,KAAKu3C,iBAC9O,CACAS,cAAAA,CAAe5B,GACXp2C,KAAKo2C,SAAWA,CACpB,CACAoB,GAAAA,GACIx3C,KAAK+3C,iBAAmB/3C,KAAK+3C,kBAC7BtkC,GAAYzT,KAAK22C,YACrB,EAEJ,SAASjqC,GAAekqC,EAAM13C,GAC1B,OAAOA,EAAqB,CAAEkM,MAAOlM,EAAmB03C,EAAKxrC,QAAWwrC,CAC5E,CACA,SAASqB,GAAc9gC,EAAGC,GACtB,MAAO,CAAElV,EAAGiV,EAAEjV,EAAIkV,EAAElV,EAAG6F,EAAGoP,EAAEpP,EAAIqP,EAAErP,EACtC,CACA,SAAS8uC,GAAUr1C,EAAYs1C,GAAS,IAApB,MAAE1rC,GAAO5J,EACzB,MAAO,CACH4J,QACA4F,MAAOinC,GAAc7sC,EAAO8sC,GAAgBpB,IAC5CrpB,OAAQwqB,GAAc7sC,EAAO+sC,GAAiBrB,IAC9Cp3B,SAAUjB,GAAYq4B,EAAS,IAEvC,CACA,SAASqB,GAAiBrB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASoB,GAAgBpB,GACrB,OAAOA,EAAQA,EAAQt4C,OAAS,EACpC,CACA,SAASigB,GAAYq4B,EAASsB,GAC1B,GAAItB,EAAQt4C,OAAS,EACjB,MAAO,CAAE0D,EAAG,EAAG6F,EAAG,GAEtB,IAAIjL,EAAIg6C,EAAQt4C,OAAS,EACrB65C,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBpB,GAClC,KAAOh6C,GAAK,IACRu7C,EAAmBvB,EAAQh6C,KACvBw7C,EAAUrnC,UAAYonC,EAAiBpnC,UACvCwnB,GAAsB2f,MAG1Bt7C,IAEJ,IAAKu7C,EACD,MAAO,CAAEn2C,EAAG,EAAG6F,EAAG,GAEtB,MAAM4W,EAAOga,GAAsB2f,EAAUrnC,UAAYonC,EAAiBpnC,WAC1E,GAAa,IAAT0N,EACA,MAAO,CAAEzc,EAAG,EAAG6F,EAAG,GAEtB,MAAMq3B,EAAkB,CACpBl9B,GAAIo2C,EAAUp2C,EAAIm2C,EAAiBn2C,GAAKyc,EACxC5W,GAAIuwC,EAAUvwC,EAAIswC,EAAiBtwC,GAAK4W,GAQ5C,OANIygB,EAAgBl9B,IAAM25B,MACtBuD,EAAgBl9B,EAAI,GAEpBk9B,EAAgBr3B,IAAM8zB,MACtBuD,EAAgBr3B,EAAI,GAEjBq3B,CACX,CC3HA,SAASmZ,GAA4B7sC,EAAMlB,EAAKC,GAC5C,MAAO,CACHD,SAAalE,IAARkE,EAAoBkB,EAAKlB,IAAMA,OAAMlE,EAC1CmE,SAAanE,IAARmE,EACCiB,EAAKjB,IAAMA,GAAOiB,EAAKjB,IAAMiB,EAAKlB,UAClClE,EAEd,CAcA,SAASkyC,GAA4BC,EAAYC,GAC7C,IAAIluC,EAAMkuC,EAAgBluC,IAAMiuC,EAAWjuC,IACvCC,EAAMiuC,EAAgBjuC,IAAMguC,EAAWhuC,IAO3C,OAJIiuC,EAAgBjuC,IAAMiuC,EAAgBluC,IACtCiuC,EAAWhuC,IAAMguC,EAAWjuC,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAMkuC,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHvuC,IAAKwuC,GAAoBH,EAAaC,GACtCruC,IAAKuuC,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC5GA,MAAMC,GAAsB,IAAIh1B,QAChC,MAAMi1B,GACF15C,WAAAA,CAAY+U,GACRxU,KAAKo5C,aAAe,KACpBp5C,KAAKy0C,YAAa,EAClBz0C,KAAKq5C,iBAAmB,KACxBr5C,KAAKqL,YAAc,CAAEnJ,EAAG,EAAG6F,EAAG,GAI9B/H,KAAKs5C,aAAc,EACnBt5C,KAAKu5C,uBAAwB,EAI7Bv5C,KAAKw5C,QnJrBK,CACdt3C,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImJ0BjCzK,KAAKy5C,mBAAqB,KAI1Bz5C,KAAK05C,cAAgB,KACrB15C,KAAKwU,cAAgBA,CACzB,CACAyN,KAAAA,CAAM03B,GAA+D,IAAlD,aAAEC,GAAe,EAAK,kBAAErD,GAAmBh4C,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI9D,MAAM,gBAAE8mB,GAAoBrlB,KAAKwU,cACjC,GAAI6Q,IAAiD,IAA9BA,EAAgBjlB,UACnC,OACJ,MAmGM,iBAAEk2C,GAAqBt2C,KAAKiqB,WAClCjqB,KAAK65C,WAAa,IAAI1D,GAAWwD,EAAa,CAC1C7B,eArGoB/C,IACpB,MAAM,iBAAEuB,GAAqBt2C,KAAKiqB,WAGlCqsB,EAAmBt2C,KAAK85C,iBAAmB95C,KAAK+5C,gBAC5CH,GACA55C,KAAK45C,aAAazE,GAAiBJ,GAAO3pC,QAgG9CgsC,QA7FYA,CAACrC,EAAO6B,KAEpB,MAAM,KAAExzB,EAAI,gBAAE42B,EAAe,YAAEC,GAAgBj6C,KAAKiqB,WACpD,GAAI7G,IAAS42B,IACLh6C,KAAKo5C,cACLp5C,KAAKo5C,eACTp5C,KAAKo5C,aC9DJ,OADI1tC,ED+D2B0X,IC9Df,MAAT1X,EACZ+oC,GAAW/oC,GACJ,MAGP+oC,GAAW/oC,IAAQ,EACZ,KACH+oC,GAAW/oC,IAAQ,IAKvB+oC,GAAWvyC,GAAKuyC,GAAW1sC,EACpB,MAGP0sC,GAAWvyC,EAAIuyC,GAAW1sC,GAAI,EACvB,KACH0sC,GAAWvyC,EAAIuyC,GAAW1sC,GAAI,KD8CzB/H,KAAKo5C,cACN,OClEpB,IAAqB1tC,EDoET1L,KAAKy5C,mBAAqB1E,EAC1B/0C,KAAK05C,cAAgB9C,EACrB52C,KAAKy0C,YAAa,EAClBz0C,KAAKq5C,iBAAmB,KACxBr5C,KAAKk6C,qBACDl6C,KAAKwU,cAAc2R,aACnBnmB,KAAKwU,cAAc2R,WAAWg0B,oBAAqB,EACnDn6C,KAAKwU,cAAc2R,WAAW1I,YAASnX,GAK3CyvC,GAAUrqC,IACN,IAAIvL,EAAUH,KAAKo6C,mBAAmB1uC,GAAM3F,OAAS,EAIrD,GAAI0H,EAAQpD,KAAKlK,GAAU,CACvB,MAAM,WAAEgmB,GAAenmB,KAAKwU,cAC5B,GAAI2R,GAAcA,EAAWzC,OAAQ,CACjC,MAAM22B,EAAel0B,EAAWzC,OAAO42B,UAAU5uC,GACjD,GAAI2uC,EAAc,CAEdl6C,EADeq1C,GAAW6E,IACNzwC,WAAWzJ,GAAW,IAC9C,CACJ,CACJ,CACAH,KAAKqL,YAAYK,GAAQvL,IAGzB85C,GACAzmC,GAAMP,WAAW,IAAMgnC,EAAYlF,EAAO6B,IAE9C5e,GAAqBh4B,KAAKwU,cAAe,aACzC,MAAM,eAAEohB,GAAmB51B,KAAKwU,cAChCohB,GAAkBA,EAAe0d,UAAU,aAAa,IAgDxD+D,OA9CWA,CAACtC,EAAO6B,KACnB52C,KAAKy5C,mBAAqB1E,EAC1B/0C,KAAK05C,cAAgB9C,EACrB,MAAM,gBAAEoD,EAAe,kBAAEO,EAAiB,gBAAEC,EAAe,OAAEC,GAAYz6C,KAAKiqB,WAE9E,IAAK+vB,IAAoBh6C,KAAKo5C,aAC1B,OACJ,MAAM,OAAE3rB,GAAWmpB,EAEnB,GAAI2D,GAA+C,OAA1Bv6C,KAAKq5C,iBAM1B,OALAr5C,KAAKq5C,iBAiXrB,SAA6B5rB,GAA4B,IAApBitB,EAAan8C,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,GAC7C6rC,EAAY,KACZ7iC,KAAKc,IAAIolB,EAAO1lB,GAAK2yC,EACrBtQ,EAAY,IAEP7iC,KAAKc,IAAIolB,EAAOvrB,GAAKw4C,IAC1BtQ,EAAY,KAEhB,OAAOA,CACX,CA1XwCuQ,CAAoBltB,QAEd,OAA1BztB,KAAKq5C,kBACLmB,GAAmBA,EAAgBx6C,KAAKq5C,mBAKhDr5C,KAAK46C,WAAW,IAAKhE,EAAKxrC,MAAOqiB,GACjCztB,KAAK46C,WAAW,IAAKhE,EAAKxrC,MAAOqiB,GAOjCztB,KAAKwU,cAAcnT,SAKnBo5C,GAAUA,EAAO1F,EAAO6B,IAgBxBc,aAdiBA,CAAC3C,EAAO6B,KACzB52C,KAAKy5C,mBAAqB1E,EAC1B/0C,KAAK05C,cAAgB9C,EACrB52C,KAAKqhB,KAAK0zB,EAAO6B,GACjB52C,KAAKy5C,mBAAqB,KAC1Bz5C,KAAK05C,cAAgB,MAUrB/B,gBARoBA,IAAM5B,GAAUrqC,IAAI,IAAAmvC,EAAA,MAAsC,WAAjC76C,KAAK86C,kBAAkBpvC,KAC7B,QAD+CmvC,EACtF76C,KAAKo6C,mBAAmB1uC,GAAM2W,iBAAS,IAAAw4B,OAAA,EAAvCA,EAAyCtU,WAQ1C,CACCrnC,mBAAoBc,KAAKwU,cAAc6V,wBACvCisB,mBACAC,oBACAF,cAAeL,GAAiBh2C,KAAKwU,gBAE7C,CAIA6M,IAAAA,CAAK0zB,EAAO6C,GACR,MAAMmD,EAAahG,GAAS/0C,KAAKy5C,mBAC3BuB,EAAepD,GAAW53C,KAAK05C,cAC/BjF,EAAaz0C,KAAKy0C,WAExB,GADAz0C,KAAKqS,UACAoiC,IAAeuG,IAAiBD,EACjC,OACJ,MAAM,SAAEr7B,GAAas7B,EACrBh7C,KAAKkiB,eAAexC,GACpB,MAAM,UAAEu7B,GAAcj7C,KAAKiqB,WACvBgxB,GACAznC,GAAMP,WAAW,IAAMgoC,EAAUF,EAAYC,GAErD,CAIA3oC,MAAAA,GACIrS,KAAKy0C,YAAa,EAClB,MAAM,WAAEtuB,EAAU,eAAEyP,GAAmB51B,KAAKwU,cACxC2R,IACAA,EAAWg0B,oBAAqB,GAEpCn6C,KAAK65C,YAAc75C,KAAK65C,WAAWrC,MACnCx3C,KAAK65C,gBAAavzC,EAClB,MAAM,gBAAE0zC,GAAoBh6C,KAAKiqB,YAC5B+vB,GAAmBh6C,KAAKo5C,eACzBp5C,KAAKo5C,eACLp5C,KAAKo5C,aAAe,MAExBxjB,GAAkBA,EAAe0d,UAAU,aAAa,EAC5D,CACAsH,UAAAA,CAAWlvC,EAAMwvC,EAAQztB,GACrB,MAAM,KAAErK,GAASpjB,KAAKiqB,WAEtB,IAAKwD,IAAW0tB,GAAWzvC,EAAM0X,EAAMpjB,KAAKq5C,kBACxC,OACJ,MAAM+B,EAAYp7C,KAAKo6C,mBAAmB1uC,GAC1C,IAAI6d,EAAOvpB,KAAKqL,YAAYK,GAAQ+hB,EAAO/hB,GAEvC1L,KAAKs5C,aAAet5C,KAAKs5C,YAAY5tC,KACrC6d,EDtMZ,SAA0Bne,EAAK5J,EAAgBg4C,GAAS,IAAvB,IAAEhvC,EAAG,IAAEC,GAAKjJ,EAazC,YAZY8E,IAARkE,GAAqBY,EAAQZ,EAE7BY,EAAQouC,EACF9uC,EAAUF,EAAKY,EAAOouC,EAAQhvC,KAC9BjD,KAAKkD,IAAIW,EAAOZ,QAETlE,IAARmE,GAAqBW,EAAQX,IAElCW,EAAQouC,EACF9uC,EAAUD,EAAKW,EAAOouC,EAAQ/uC,KAC9BlD,KAAKiD,IAAIY,EAAOX,IAEnBW,CACX,CCwLmBiwC,CAAiB9xB,EAAMvpB,KAAKs5C,YAAY5tC,GAAO1L,KAAKw5C,QAAQ9tC,KAEvE0vC,EAAUv3C,IAAI0lB,EAClB,CACA2wB,kBAAAA,GAAqB,IAAAoB,EACjB,MAAM,gBAAEzmB,EAAe,YAAEgkB,GAAgB74C,KAAKiqB,WACxCvG,EAAS1jB,KAAKwU,cAAc2R,aAC7BnmB,KAAKwU,cAAc2R,WAAWzC,OAC7B1jB,KAAKwU,cAAc2R,WAAWo1B,SAAQ,GACT,QADeD,EAC5Ct7C,KAAKwU,cAAc2R,kBAAU,IAAAm1B,OAAA,EAA7BA,EAA+B53B,OAC/B83B,EAAkBx7C,KAAKs5C,YACzBzkB,GAAmBnB,GAAYmB,GAC1B70B,KAAKs5C,cACNt5C,KAAKs5C,YAAct5C,KAAKy7C,yBAKxBz7C,KAAKs5C,eADLzkB,IAAmBnR,IDvLnC,SAAiC42B,EAASlrC,GAAgC,IAA9B,IAAErO,EAAG,KAAEE,EAAI,OAAEsJ,EAAM,MAAEpJ,GAAOiO,EACpE,MAAO,CACHlN,EAAGq2C,GAA4B+B,EAAUp4C,EAAGjB,EAAME,GAClD4G,EAAGwwC,GAA4B+B,EAAUvyC,EAAGhH,EAAKwJ,GAEzD,CCmLmCmxC,CAAwBh4B,EAAO42B,UAAWzlB,GAMrE70B,KAAKw5C,QDhIb,WAA0D,IAA9BX,EAAWt6C,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAGo6C,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHz2C,EAAG02C,GAAmBC,EAAa,OAAQ,SAC3C9wC,EAAG6wC,GAAmBC,EAAa,MAAO,UAElD,CCqHuB8C,CAAmB9C,GAK9B2C,IAAoBx7C,KAAKs5C,aACzB51B,GACA1jB,KAAKs5C,cACJt5C,KAAKu5C,uBACNxD,GAAUrqC,KACmB,IAArB1L,KAAKs5C,aACLt5C,KAAKo6C,mBAAmB1uC,KACxB1L,KAAKs5C,YAAY5tC,GD1JrC,SAA+BgY,EAAQ41B,GACnC,MAAMsC,EAAsB,CAAC,EAO7B,YANwBt1C,IAApBgzC,EAAY9uC,MACZoxC,EAAoBpxC,IAAM8uC,EAAY9uC,IAAMkZ,EAAOlZ,UAE/BlE,IAApBgzC,EAAY7uC,MACZmxC,EAAoBnxC,IAAM6uC,EAAY7uC,IAAMiZ,EAAOlZ,KAEhDoxC,CACX,CCiJ6CC,CAAsBn4B,EAAO42B,UAAU5uC,GAAO1L,KAAKs5C,YAAY5tC,MAIxG,CACA+vC,qBAAAA,GACI,MAAQ5mB,gBAAiBykB,EAAW,yBAAEwC,GAA6B97C,KAAKiqB,WACxE,IAAKqvB,IAAgB5lB,GAAY4lB,GAC7B,OAAO,EACX,MAAMyC,EAAqBzC,EAAYn5C,SAEjC,WAAEgmB,GAAenmB,KAAKwU,cAE5B,IAAK2R,IAAeA,EAAWzC,OAC3B,OAAO,EACX,MAAMs4B,ErM5Pd,SAAwBj8C,EAASk8C,EAAoB/8C,GACjD,MAAMg9C,EAAc1vC,EAAmBzM,EAASb,IAC1C,OAAEi9C,GAAWF,EAKnB,OAJIE,IACApwC,EAAcmwC,EAAYh6C,EAAGi6C,EAAO1uB,OAAOvrB,GAC3C6J,EAAcmwC,EAAYn0C,EAAGo0C,EAAO1uB,OAAO1lB,IAExCm0C,CACX,CqMoP+BE,CAAeL,EAAoB51B,EAAWzkB,KAAM1B,KAAKwU,cAAc6V,yBAC9F,IAAIgyB,EDnMZ,SAAiC/B,EAAW0B,GACxC,MAAO,CACH95C,EAAGs2C,GAA4B8B,EAAUp4C,EAAG85C,EAAe95C,GAC3D6F,EAAGywC,GAA4B8B,EAAUvyC,EAAGi0C,EAAej0C,GAEnE,CC8LkCu0C,CAAwBn2B,EAAWzC,OAAO42B,UAAW0B,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EzM9PpC,SAAgC1sC,GAAW,IAAV,EAAElN,EAAC,EAAE6F,GAAGqH,EACrC,MAAO,CAAErO,IAAKgH,EAAEyC,IAAKrJ,MAAOe,EAAEuI,IAAKF,OAAQxC,EAAE0C,IAAKxJ,KAAMiB,EAAEsI,IAC9D,CyM4P6DgyC,CAAwBH,IACzEr8C,KAAKu5C,wBAA0BgD,EAC3BA,IACAF,EAAsB/xC,EAAwBiyC,GAEtD,CACA,OAAOF,CACX,CACAn6B,cAAAA,CAAexC,GACX,MAAM,KAAE0D,EAAI,aAAEq5B,EAAY,YAAE5D,EAAW,eAAE6D,EAAc,iBAAEpG,EAAgB,oBAAEqG,GAAyB38C,KAAKiqB,WACnGqvB,EAAct5C,KAAKs5C,aAAe,CAAC,EACnCsD,EAAqB7G,GAAUrqC,IACjC,IAAKyvC,GAAWzvC,EAAM0X,EAAMpjB,KAAKq5C,kBAC7B,OAEJ,IAAIjvB,EAAckvB,GAAeA,EAAY5tC,IAAU,CAAC,EACpD4qC,IACAlsB,EAAa,CAAE5f,IAAK,EAAGC,IAAK,IAOhC,MAAMm1B,EAAkBiZ,EAAc,IAAM,IACtClZ,EAAgBkZ,EAAc,GAAK,IACnCrZ,GAAOt7B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACT6J,KAAM,UACN2R,SAAU+8B,EAAe/8B,EAAShU,GAAQ,EAC1Ck0B,kBACAD,gBACAD,aAAc,IACdjD,UAAW,EACXF,UAAW,IACRmgB,GACAtyB,GAKP,OAAOpqB,KAAK68C,wBAAwBnxC,EAAM8zB,KAG9C,OAAOrd,QAAQ+tB,IAAI0M,GAAoBr6B,KAAKo6B,EAChD,CACAE,uBAAAA,CAAwBnxC,EAAM0e,GAC1B,MAAMgxB,EAAYp7C,KAAKo6C,mBAAmB1uC,GAE1C,OADAssB,GAAqBh4B,KAAKwU,cAAe9I,GAClC0vC,EAAUn5B,MAAMysB,GAAmBhjC,EAAM0vC,EAAW,EAAGhxB,EAAYpqB,KAAKwU,eAAe,GAClG,CACAulC,aAAAA,GACIhE,GAAUrqC,GAAS1L,KAAKo6C,mBAAmB1uC,GAAM2V,OACrD,CACAy4B,cAAAA,GACI/D,GAAUrqC,IAAI,IAAAoxC,EAAA,OAA4C,QAA5CA,EAAK98C,KAAKo6C,mBAAmB1uC,GAAM2W,iBAAS,IAAAy6B,OAAA,EAAvCA,EAAyCrW,SAChE,CACAqU,iBAAAA,CAAkBpvC,GAAM,IAAAqxC,EACpB,OAA8C,QAA9CA,EAAO/8C,KAAKo6C,mBAAmB1uC,GAAM2W,iBAAS,IAAA06B,OAAA,EAAvCA,EAAyChsC,KACpD,CAOAqpC,kBAAAA,CAAmB1uC,GACf,MAAMsxC,EAAU,QAAH76C,OAAWuJ,EAAKqjB,eACvB9uB,EAAQD,KAAKwU,cAAcyV,WAC3BgzB,EAAsBh9C,EAAM+8C,GAClC,OAAOC,GAEDj9C,KAAKwU,cAAcC,SAAS/I,GAAOzL,EAAMgD,QACrChD,EAAMgD,QAAQyI,QACdpF,IAAc,EAC5B,CACAszC,YAAAA,CAAaxuC,GACT2qC,GAAUrqC,IACN,MAAM,KAAE0X,GAASpjB,KAAKiqB,WAEtB,IAAKkxB,GAAWzvC,EAAM0X,EAAMpjB,KAAKq5C,kBAC7B,OACJ,MAAM,WAAElzB,GAAenmB,KAAKwU,cACtB4mC,EAAYp7C,KAAKo6C,mBAAmB1uC,GAC1C,GAAIya,GAAcA,EAAWzC,OAAQ,CACjC,MAAM,IAAElZ,EAAG,IAAEC,GAAQ0b,EAAWzC,OAAO42B,UAAU5uC,GACjD0vC,EAAUv3C,IAAIuH,EAAMM,GAAQhB,EAAUF,EAAKC,EAAK,IACpD,GAER,CAMAyyC,8BAAAA,GACI,IAAKl9C,KAAKwU,cAAcrU,QACpB,OACJ,MAAM,KAAEijB,EAAI,gBAAEyR,GAAoB70B,KAAKiqB,YACjC,WAAE9D,GAAenmB,KAAKwU,cAC5B,IAAKkf,GAAYmB,KAAqB1O,IAAenmB,KAAKs5C,YACtD,OAKJt5C,KAAK+5C,gBAKL,MAAMoD,EAAc,CAAEj7C,EAAG,EAAG6F,EAAG,GAC/BguC,GAAUrqC,IACN,MAAM0vC,EAAYp7C,KAAKo6C,mBAAmB1uC,GAC1C,GAAI0vC,IAAkC,IAArBp7C,KAAKs5C,YAAuB,CACzC,MAAM7tB,EAAS2vB,EAAUr1C,MACzBo3C,EAAYzxC,GDlT5B,SAAoB4N,EAAQmE,GACxB,IAAID,EAAS,GACb,MAAM4/B,EAAe5H,GAAWl8B,GAC1B+jC,EAAe7H,GAAW/3B,GAOhC,OANI4/B,EAAeD,EACf5/B,EAAS3S,GAAS4S,EAAOjT,IAAKiT,EAAOhT,IAAM2yC,EAAc9jC,EAAO9O,KAE3D4yC,EAAeC,IACpB7/B,EAAS3S,GAASyO,EAAO9O,IAAK8O,EAAO7O,IAAM4yC,EAAc5/B,EAAOjT,MAE7DwC,EAAM,EAAG,EAAGwQ,EACvB,CCuSoC8/B,CAAW,CAAE9yC,IAAKihB,EAAQhhB,IAAKghB,GAAUzrB,KAAKs5C,YAAY5tC,GAClF,IAKJ,MAAM,kBAAE0d,GAAsBppB,KAAKwU,cAAcyV,WACjDjqB,KAAKwU,cAAcrU,QAAQmC,MAAM8G,UAAYggB,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNjD,EAAWzkB,MAAQykB,EAAWzkB,KAAK67C,eACnCp3B,EAAWq3B,eACXx9C,KAAKk6C,qBAKLnE,GAAUrqC,IACN,IAAKyvC,GAAWzvC,EAAM0X,EAAM,MACxB,OAIJ,MAAMg4B,EAAYp7C,KAAKo6C,mBAAmB1uC,IACpC,IAAElB,EAAG,IAAEC,GAAQzK,KAAKs5C,YAAY5tC,GACtC0vC,EAAUv3C,IAAI6G,EAAUF,EAAKC,EAAK0yC,EAAYzxC,MAEtD,CACA+xC,YAAAA,GACI,IAAKz9C,KAAKwU,cAAcrU,QACpB,OACJ+4C,GAAoBr1C,IAAI7D,KAAKwU,cAAexU,MAC5C,MAIM09C,EAAsBpI,GAJZt1C,KAAKwU,cAAcrU,QAIkB,cAAgB40C,IACjE,MAAM,KAAE3xB,EAAI,aAAEuN,GAAe,GAAS3wB,KAAKiqB,WAC3C7G,GAAQuN,GAAgB3wB,KAAKiiB,MAAM8yB,KAEjC4I,EAAyBA,KAC3B,MAAM,gBAAE9oB,GAAoB70B,KAAKiqB,WAC7ByJ,GAAYmB,IAAoBA,EAAgB10B,UAChDH,KAAKs5C,YAAct5C,KAAKy7C,2BAG1B,WAAEt1B,GAAenmB,KAAKwU,cACtBopC,EAA4Bz3B,EAAWoB,iBAAiB,UAAWo2B,GACrEx3B,IAAeA,EAAWzC,SAC1ByC,EAAWzkB,MAAQykB,EAAWzkB,KAAK67C,eACnCp3B,EAAWq3B,gBAEfhqC,GAAMZ,KAAK+qC,GAKX,MAAME,EAAqBlJ,GAAY3tC,OAAQ,SAAU,IAAMhH,KAAKk9C,kCAK9DY,EAA2B33B,EAAWoB,iBAAiB,YAAc/lB,IAAiC,IAAhC,MAAEwP,EAAK,iBAAE+sC,GAAkBv8C,EAC/FxB,KAAKy0C,YAAcsJ,IACnBhI,GAAUrqC,IACN,MAAM6J,EAAcvV,KAAKo6C,mBAAmB1uC,GACvC6J,IAELvV,KAAKqL,YAAYK,IAASsF,EAAMtF,GAAMH,UACtCgK,EAAY1R,IAAI0R,EAAYxP,MAAQiL,EAAMtF,GAAMH,cAEpDvL,KAAKwU,cAAcnT,YAG3B,MAAO,KACHw8C,IACAH,IACAE,IACAE,GAA4BA,IAEpC,CACA7zB,QAAAA,GACI,MAAMhqB,EAAQD,KAAKwU,cAAcyV,YAC3B,KAAE7G,GAAO,EAAK,kBAAEm3B,GAAoB,EAAK,gBAAEP,GAAkB,EAAK,gBAAEnlB,GAAkB,EAAK,YAAEgkB,EAAcF,GAAc,aAAE8D,GAAe,GAAUx8C,EAC1J,OAAAiE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOjE,GAAK,IACRmjB,OACAm3B,oBACAP,kBACAnlB,kBACAgkB,cACA4D,gBAER,EAEJ,SAAStB,GAAW/Q,EAAWhnB,EAAMi2B,GACjC,QAAkB,IAATj2B,GAAiBA,IAASgnB,KACT,OAArBiP,GAA6BA,IAAqBjP,EAC3D,CEvdA,MAAM4T,GAAgB3+B,GAAY,CAAC01B,EAAO6B,KAClCv3B,GACA7L,GAAMP,WAAW,IAAMoM,EAAQ01B,EAAO6B,K,eCJ9C,MAAMqH,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQ3yC,GAC7B,OAAIA,EAAKjB,MAAQiB,EAAKlB,IACX,EACH6zC,GAAU3yC,EAAKjB,IAAMiB,EAAKlB,KAAQ,GAC9C,CAQA,MAAM8zC,GAAsB,CACxBC,QAASA,CAAC9yB,EAAQwoB,KACd,IAAKA,EAAKx2B,OACN,OAAOgO,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAI/d,EAAGrD,KAAKohB,GAIR,OAAOA,EAHPA,EAAS7hB,WAAW6hB,EAK5B,CAKA,MAAMvpB,EAAIk8C,GAAgB3yB,EAAQwoB,EAAKx2B,OAAOvb,GACxC6F,EAAIq2C,GAAgB3yB,EAAQwoB,EAAKx2B,OAAO1V,GAC9C,MAAO,GAAP5F,OAAUD,EAAC,MAAAC,OAAK4F,EAAC,OClCnBy2C,GAAmB,CACrBD,QAASA,CAAC9yB,EAAMjqB,KAAqC,IAAnC,UAAEi9C,EAAS,gBAAEC,GAAiBl9C,EAC5C,MAAMm9C,EAAWlzB,EACXmzB,EAASllC,GAAQxM,MAAMue,GAE7B,GAAImzB,EAAOpgD,OAAS,EAChB,OAAOmgD,EACX,MAAMrkB,EAAW5gB,GAAQL,kBAAkBoS,GACrCgC,EAA8B,kBAAdmxB,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgBx8C,EAAEkG,MAAQq2C,EAAUv8C,EAC7C48C,EAASJ,EAAgB32C,EAAEK,MAAQq2C,EAAU12C,EACnD62C,EAAO,EAAInxB,IAAWoxB,EACtBD,EAAO,EAAInxB,IAAWqxB,EAOtB,MAAMC,EAAer0C,EAAUm0C,EAAQC,EAAQ,IAO/C,MALkC,kBAAvBF,EAAO,EAAInxB,KAClBmxB,EAAO,EAAInxB,IAAWsxB,GAEQ,kBAAvBH,EAAO,EAAInxB,KAClBmxB,EAAO,EAAInxB,IAAWsxB,GACnBzkB,EAASskB,KCTxB,IAAII,IAAsB,EAC1B,MAAMC,WAAiCxvB,EAAAA,UAMnCyvB,iBAAAA,GACI,MAAM,cAAE1qC,EAAa,YAAE2qC,EAAW,kBAAEC,EAAiB,SAAEvyB,GAAa7sB,KAAKC,OACnE,WAAEkmB,GAAe3R,GzI1B/B,SAA2B6qC,GACvB,IAAK,MAAMj7C,KAAOi7C,EACd1yB,GAAgBvoB,GAAOi7C,EAAWj7C,GAC9B6F,EAAkB7F,KAClBuoB,GAAgBvoB,GAAKk7C,eAAgB,EAGjD,CyIoBQC,CAAkBC,IACdr5B,IACIg5B,EAAYM,OACZN,EAAYM,MAAMrtC,IAAI+T,GACtBi5B,GAAqBA,EAAkBp7C,UAAY6oB,GACnDuyB,EAAkBp7C,SAASmiB,GAE3B64B,IACA74B,EAAWzkB,KAAKg+C,YAEpBv5B,EAAWoB,iBAAiB,oBAAqB,KAC7CvnB,KAAKiF,iBAETkhB,EAAW+O,YAAUhxB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAChBiiB,EAAWrG,SAAO,IACrB5c,eAAgBA,IAAMlD,KAAKiF,mBAGnCg5C,GAAsBE,gBAAiB,CAC3C,CACAt+C,uBAAAA,CAAwBC,GACpB,MAAM,iBAAE6/C,EAAgB,cAAEnrC,EAAa,KAAE4O,EAAI,UAAEhjB,GAAcJ,KAAKC,OAC5D,WAAEkmB,GAAe3R,EACvB,OAAK2R,GASLA,EAAW/lB,UAAYA,EACvB4+C,IAAsB,EAClB57B,GACAtjB,EAAU6/C,mBAAqBA,QACVr5C,IAArBq5C,GACA7/C,EAAUM,YAAcA,EACxB+lB,EAAWy5B,aAGX5/C,KAAKiF,eAELnF,EAAUM,YAAcA,IACpBA,EACA+lB,EAAW05B,UAEL15B,EAAW25B,YAMjBtsC,GAAMP,WAAW,KACb,MAAM8sC,EAAQ55B,EAAW65B,WACpBD,GAAUA,EAAME,QAAQzhD,QACzBwB,KAAKiF,kBAKd,MArCI,IAsCf,CACA7D,kBAAAA,GACI,MAAM,WAAE+kB,GAAenmB,KAAKC,MAAMuU,cAC9B2R,IACAA,EAAWzkB,KAAKg+C,YAChB18B,GAAU/P,WAAW,MACZkT,EAAW+5B,kBAAoB/5B,EAAWg6B,UAC3CngD,KAAKiF,iBAIrB,CACAm7C,oBAAAA,GACI,MAAM,cAAE5rC,EAAa,YAAE2qC,EAAaC,kBAAmBiB,GAAoBrgD,KAAKC,OAC1E,WAAEkmB,GAAe3R,EACvBwqC,IAAsB,EAClB74B,IACAA,EAAWm6B,4BACPnB,GAAeA,EAAYM,OAC3BN,EAAYM,MAAM73B,OAAOzB,GACzBk6B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAWp6B,GAEtC,CACAlhB,YAAAA,GACI,MAAM,aAAEA,GAAiBjF,KAAKC,MAC9BgF,GAAgBA,GACpB,CACA5D,MAAAA,GACI,OAAO,IACX,EAEJ,SAASk1B,GAAct2B,GACnB,MAAOG,EAAW6E,IAAgBC,EAAAA,GAAAA,MAC5Bi6C,GAAcn9C,EAAAA,EAAAA,YAAW1C,GAAAA,GAC/B,OAAQyD,EAAAA,GAAAA,KAAIk8C,IAAwB/6C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOjE,GAAK,IAAEk/C,YAAaA,EAAaC,mBAAmBp9C,EAAAA,EAAAA,YAAWgyB,IAA2B5zB,UAAWA,EAAW6E,aAAcA,IAC7K,CACA,MAAMu6C,GAAyB,CAC3BtkC,cAAYhX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLo6C,IAAmB,IACtBkC,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRplC,oBAAqBkjC,GACrBjjC,qBAAsBijC,GACtB/iC,uBAAwB+iC,GACxBhjC,wBAAyBgjC,GACzBmC,UAAWjC,I,eCzIf,SAASkC,GAAa3gD,GAClB,OAAO4gD,EAAAA,GAAAA,GAAS5gD,IAAY,oBAAqBA,CACrD,CCRA,MAAM6gD,GAAiBA,CAACzpC,EAAGC,IAAMD,EAAE7I,MAAQ8I,EAAE9I,MCG7C,MAAMuyC,GACFphD,WAAAA,GACIO,KAAKsB,SAAW,GAChBtB,KAAK8gD,SAAU,CACnB,CACA1uC,GAAAA,CAAI3N,GACAqa,GAAc9e,KAAKsB,SAAUmD,GAC7BzE,KAAK8gD,SAAU,CACnB,CACAl5B,MAAAA,CAAOnjB,GACHwa,GAAWjf,KAAKsB,SAAUmD,GAC1BzE,KAAK8gD,SAAU,CACnB,CACAriD,OAAAA,CAAQuT,GACJhS,KAAK8gD,SAAW9gD,KAAKsB,SAAS+uC,KAAKuQ,IACnC5gD,KAAK8gD,SAAU,EACf9gD,KAAKsB,SAAS7C,QAAQuT,EAC1B,ECdJ,SAASo1B,GAAMp1B,EAAU+uC,GACrB,MAAM9+B,EAAQtD,GAAKtL,MACb2tC,EAAex/C,IAAmB,IAAlB,UAAEyP,GAAWzP,EAC/B,MAAM+lC,EAAUt2B,EAAYgR,EACxBslB,GAAWwZ,IACXttC,GAAYutC,GACZhvC,EAASu1B,EAAUwZ,KAI3B,OADAvtC,GAAMb,MAAMquC,GAAc,GACnB,IAAMvtC,GAAYutC,EAC7B,CCdA,MAAMC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQziD,OACrB2iD,GAAYzjD,GAA2B,kBAAVA,EAAqBkM,WAAWlM,GAASA,EACtE0jD,GAAQ1jD,GAA2B,kBAAVA,GAAsBgQ,EAAGrD,KAAK3M,GAwC7D,SAAS2jD,GAAUt9C,EAAQu9C,GACvB,YAA8Bh7C,IAAvBvC,EAAOu9C,GACRv9C,EAAOu9C,GACPv9C,EAAOmX,YACjB,CAwBA,MAAMqmC,GAAgCC,GAAS,EAAG,GAAKlf,IACjDmf,GAAiCD,GAAS,GAAK,IAAMpxC,IAC3D,SAASoxC,GAASh3C,EAAKC,EAAK4wB,GACxB,OAAQl8B,GAEAA,EAAIqL,EACG,EACPrL,EAAIsL,EACG,EACJ4wB,EAAOxwB,GAASL,EAAKC,EAAKtL,GAEzC,CChFA,SAASuiD,GAAah2C,EAAMi2C,GACxBj2C,EAAKlB,IAAMm3C,EAAWn3C,IACtBkB,EAAKjB,IAAMk3C,EAAWl3C,GAC1B,CAMA,SAASm3C,GAAYh2C,EAAKi2C,GACtBH,GAAa91C,EAAI1J,EAAG2/C,EAAU3/C,GAC9Bw/C,GAAa91C,EAAI7D,EAAG85C,EAAU95C,EAClC,CAMA,SAAS+5C,GAAkB9wC,EAAO+wC,GAC9B/wC,EAAMzF,UAAYw2C,EAAYx2C,UAC9ByF,EAAM5I,MAAQ25C,EAAY35C,MAC1B4I,EAAM3F,YAAc02C,EAAY12C,YAChC2F,EAAMwM,OAASukC,EAAYvkC,MAC/B,CCtBA,SAASwkC,GAAiB52C,EAAOG,EAAWnD,EAAOiD,EAAaG,GAM5D,OAJAJ,EAAQD,EADRC,GAASG,EACiB,EAAInD,EAAOiD,QACpB/E,IAAbkF,IACAJ,EAAQD,EAAWC,EAAO,EAAII,EAAUH,IAErCD,CACX,CAsBA,SAAS62C,GAAqBv2C,EAAMw2C,EAAU1gD,EAA8Bgc,EAAQ2kC,GAAY,IAA/C/9C,EAAKg+C,EAAUC,GAAU7gD,GAlB1E,SAAyBkK,GAA8F,IAAxFH,EAAShN,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EAAG6J,EAAK7J,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,EAAGif,EAAMjf,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,GAAKiN,EAAQjN,UAAAC,OAAA,EAAAD,UAAA,QAAA+H,EAAEq7C,EAAUpjD,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAGmN,EAAMy2C,EAAU5jD,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAGmN,EACzG+B,EAAQpD,KAAKkB,KACbA,EAAY3B,WAAW2B,GAEvBA,EADyBb,EAAUy3C,EAAW33C,IAAK23C,EAAW13C,IAAKc,EAAY,KAChD42C,EAAW33C,KAE9C,GAAyB,kBAAde,EACP,OACJ,IAAIF,EAAcX,EAAUi3C,EAAWn3C,IAAKm3C,EAAWl3C,IAAK+S,GACxD9R,IAASi2C,IACTt2C,GAAeE,GACnBG,EAAKlB,IAAMw3C,GAAiBt2C,EAAKlB,IAAKe,EAAWnD,EAAOiD,EAAaG,GACrEE,EAAKjB,IAAMu3C,GAAiBt2C,EAAKjB,IAAKc,EAAWnD,EAAOiD,EAAaG,EACzE,CAMI82C,CAAgB52C,EAAMw2C,EAAW99C,GAAM89C,EAAWE,GAAWF,EAAWG,GAAYH,EAAW95C,MAAOoV,EAAQ2kC,EAClH,CAIA,MAAMI,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,GAAoB72C,EAAKs2C,EAAYL,EAAWa,GACrDT,GAAqBr2C,EAAI1J,EAAGggD,EAAYK,GAAOV,EAAYA,EAAU3/C,OAAIoE,EAAWo8C,EAAYA,EAAUxgD,OAAIoE,GAC9G27C,GAAqBr2C,EAAI7D,EAAGm6C,EAAYM,GAAOX,EAAYA,EAAU95C,OAAIzB,EAAWo8C,EAAYA,EAAU36C,OAAIzB,EAClH,CChDA,SAASq8C,GAAgB3xC,GACrB,OAA2B,IAApBA,EAAMzF,WAAmC,IAAhByF,EAAM5I,KAC1C,CACA,SAASw6C,GAAY5xC,GACjB,OAAO2xC,GAAgB3xC,EAAM9O,IAAMygD,GAAgB3xC,EAAMjJ,EAC7D,CACA,SAAS86C,GAAW1rC,EAAGC,GACnB,OAAOD,EAAE3M,MAAQ4M,EAAE5M,KAAO2M,EAAE1M,MAAQ2M,EAAE3M,GAC1C,CAIA,SAASq4C,GAAkB3rC,EAAGC,GAC1B,OAAQ7P,KAAKiP,MAAMW,EAAE3M,OAASjD,KAAKiP,MAAMY,EAAE5M,MACvCjD,KAAKiP,MAAMW,EAAE1M,OAASlD,KAAKiP,MAAMY,EAAE3M,IAC3C,CACA,SAASs4C,GAAiB5rC,EAAGC,GACzB,OAAO0rC,GAAkB3rC,EAAEjV,EAAGkV,EAAElV,IAAM4gD,GAAkB3rC,EAAEpP,EAAGqP,EAAErP,EACnE,CACA,SAASi7C,GAAYp3C,GACjB,OAAO4pC,GAAW5pC,EAAI1J,GAAKszC,GAAW5pC,EAAI7D,EAC9C,CACA,SAASk7C,GAAgB9rC,EAAGC,GACxB,OAAQD,EAAE5L,YAAc6L,EAAE7L,WACtB4L,EAAE/O,QAAUgP,EAAEhP,OACd+O,EAAE9L,cAAgB+L,EAAE/L,WAC5B,CC1BA,MAAM63C,GACFzjD,WAAAA,GACIO,KAAKigD,QAAU,EACnB,CACA7tC,GAAAA,CAAI6hC,GACAn1B,GAAc9e,KAAKigD,QAAShM,GAC5BA,EAAK5tB,gBACT,CACAuB,MAAAA,CAAOqsB,GAKH,GAJAh1B,GAAWjf,KAAKigD,QAAShM,GACrBA,IAASj0C,KAAKmjD,WACdnjD,KAAKmjD,cAAW78C,GAEhB2tC,IAASj0C,KAAKojD,KAAM,CACpB,MAAMD,EAAWnjD,KAAKigD,QAAQjgD,KAAKigD,QAAQzhD,OAAS,GAChD2kD,GACAnjD,KAAK6/C,QAAQsD,EAErB,CACJ,CACArD,QAAAA,CAAS7L,GACL,MAAMoP,EAAcrjD,KAAKigD,QAAQqD,UAAWC,GAAWtP,IAASsP,GAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAIrmD,EAAIumD,EAAavmD,GAAK,EAAGA,IAAK,CACnC,MAAMymD,EAASvjD,KAAKigD,QAAQnjD,GAC5B,IAAyB,IAArBymD,EAAOnjD,UAAqB,CAC5B+iD,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAnjD,KAAK6/C,QAAQsD,IACN,EAKf,CACAtD,OAAAA,CAAQ5L,EAAMuP,GACV,MAAML,EAAWnjD,KAAKojD,KACtB,GAAInP,IAASkP,IAEbnjD,KAAKmjD,SAAWA,EAChBnjD,KAAKojD,KAAOnP,EACZA,EAAKwP,OACDN,GAAU,CACVA,EAAS12C,UAAY02C,EAAS98B,iBAC9B4tB,EAAK5tB,iBACL4tB,EAAKyP,WAAaP,EACdK,IACAvP,EAAKyP,WAAWC,iBAAkB,GAElCR,EAASS,WACT3P,EAAK2P,SAAWT,EAASS,SACzB3P,EAAK2P,SAAS79B,aACVo9B,EAASU,iBAAmBV,EAASp9B,cAEzCkuB,EAAKvyC,MAAQuyC,EAAKvyC,KAAKoiD,aACvB7P,EAAK8P,eAAgB,GAEzB,MAAM,UAAE1uB,GAAc4e,EAAKn0B,SACT,IAAduV,GACA8tB,EAASa,MAcjB,CACJ,CACAC,qBAAAA,GACIjkD,KAAKigD,QAAQxhD,QAASw1C,IAClB,MAAM,QAAEn0B,EAAO,aAAEokC,GAAiBjQ,EAClCn0B,EAAQ5c,gBAAkB4c,EAAQ5c,iBAC9BghD,GACAA,EAAapkC,QAAQ5c,gBACjBghD,EAAapkC,QAAQ5c,kBAGrC,CACAmjB,cAAAA,GACIrmB,KAAKigD,QAAQxhD,QAASw1C,IAClBA,EAAKxnC,UAAYwnC,EAAK5tB,gBAAe,IAE7C,CAKA89B,kBAAAA,GACQnkD,KAAKojD,MAAQpjD,KAAKojD,KAAKQ,WACvB5jD,KAAKojD,KAAKQ,cAAWt9C,EAE7B,ECvFJ,MAAM89C,GAAU,CACZC,MAAO,EACPC,uBAAwB,EACxBC,sBAAuB,GAErBC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMrC,IAAI7iD,GAAK,EACT,SAAS8iD,GAAyBrgD,EAAKoQ,EAAezQ,EAAQ2gD,GAC1D,MAAM,aAAE3+B,GAAiBvR,EAErBuR,EAAa3hB,KACbL,EAAOK,GAAO2hB,EAAa3hB,GAC3BoQ,EAAc2U,eAAe/kB,EAAK,GAC9BsgD,IACAA,EAAsBtgD,GAAO,GAGzC,CACA,SAASugD,GAAuCC,GAE5C,GADAA,EAAeC,2BAA4B,EACvCD,EAAeljD,OAASkjD,EACxB,OACJ,MAAM,cAAEpwC,GAAkBowC,EAAe9kC,QACzC,IAAKtL,EACD,OACJ,MAAMy7B,EAAW9X,GAAqB3jB,GACtC,GAAIxN,OAAO0uB,4BAA4Bua,EAAU,aAAc,CAC3D,MAAM,OAAEvsB,EAAM,SAAEmJ,GAAa+3B,EAAe9kC,QAC5C9Y,OAAO89C,+BAA+B7U,EAAU,YAAaz8B,KAASkQ,GAAUmJ,GACpF,CACA,MAAM,OAAExsB,GAAWukD,EACfvkD,IAAWA,EAAOwkD,2BAClBF,GAAuCtkD,EAE/C,CACA,SAASi1B,GAAoB9zB,GAA6F,IAA5F,qBAAEujD,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,GAAiB3jD,EACpH,OAAO,MACH/B,WAAAA,GAA2D,IAA/CsmB,EAAYxnB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG8B,EAAM9B,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAgB,OAAbymD,QAAa,IAAbA,OAAa,EAAbA,IAIpChlD,KAAK2B,GAAKA,KAIV3B,KAAKolD,YAAc,EACnBplD,KAAKqlD,kBAAoB,EAOzBrlD,KAAKsB,SAAW,IAAI8F,IAKpBpH,KAAK8f,QAAU,CAAC,EAMhB9f,KAAKslD,iBAAkB,EACvBtlD,KAAKm6C,oBAAqB,EAO1Bn6C,KAAK+jD,eAAgB,EAKrB/jD,KAAKulD,mBAAoB,EAKzBvlD,KAAKwlD,yBAA0B,EAK/BxlD,KAAKsoB,kBAAmB,EAIxBtoB,KAAKylD,uBAAwB,EAC7BzlD,KAAK0lD,uBAAwB,EAK7B1lD,KAAK8jD,YAAa,EAIlB9jD,KAAK2lD,OAAQ,EAKb3lD,KAAK4lD,YAAa,EAIlB5lD,KAAK6lD,sBAAuB,EAO5B7lD,KAAK6kD,2BAA4B,EASjC7kD,KAAKy+C,UAAY,CAAEv8C,EAAG,EAAG6F,EAAG,GAI5B/H,KAAK8lD,cAAgB,IAAIvhD,IACzBvE,KAAK+lD,iBAAkB,EAEvB/lD,KAAKgmD,iBAAkB,EACvBhmD,KAAKimD,eAAiB,IAAMjmD,KAAK+S,SACjC/S,KAAKkmD,2BAA4B,EACjClmD,KAAKmmD,kBAAoB,KACjBnmD,KAAK8jD,aACL9jD,KAAK8jD,YAAa,EAClB9jD,KAAKomD,sBAQbpmD,KAAKqmD,iBAAmB,KACpBrmD,KAAKkmD,2BAA4B,EAK7B11C,GAAY9S,QACZ0mD,GAAQC,MACJD,GAAQE,uBACJF,GAAQG,sBACJ,GAEhBvkD,KAAKqkD,MAAM5lD,QAAQ6nD,IACnBtmD,KAAKqkD,MAAM5lD,QAAQ8nD,IACnBvmD,KAAKqkD,MAAM5lD,QAAQ+nD,IACnBxmD,KAAKqkD,MAAM5lD,QAAQgoD,IACfj2C,GAAYC,sBACZD,GAAYC,qBAAqB2zC,KAMzCpkD,KAAK0mD,yBAA2B,EAChC1mD,KAAK2mD,cAAe,EACpB3mD,KAAK4mD,WAAY,EACjB5mD,KAAK6mD,kBAAoB,EAKzB7mD,KAAK8mD,YAAc,IAAIviD,IACvBvE,KAAK+lB,aAAeA,EACpB/lB,KAAK0B,KAAOrB,EAASA,EAAOqB,MAAQrB,EAASL,KAC7CA,KAAK+mD,KAAO1mD,EAAS,IAAIA,EAAO0mD,KAAM1mD,GAAU,GAChDL,KAAKK,OAASA,EACdL,KAAKsO,MAAQjO,EAASA,EAAOiO,MAAQ,EAAI,EACzC,IAAK,IAAIxR,EAAI,EAAGA,EAAIkD,KAAK+mD,KAAKvoD,OAAQ1B,IAClCkD,KAAK+mD,KAAKjqD,GAAG+oD,sBAAuB,EAEpC7lD,KAAK0B,OAAS1B,OACdA,KAAKqkD,MAAQ,IAAIxD,GACzB,CACAt5B,gBAAAA,CAAiBre,EAAMmW,GAInB,OAHKrf,KAAK8lD,cAAct/C,IAAI0C,IACxBlJ,KAAK8lD,cAAcjiD,IAAIqF,EAAM,IAAIiW,IAE9Bnf,KAAK8lD,cAAc//C,IAAImD,GAAMkJ,IAAIiN,EAC5C,CACA2nC,eAAAA,CAAgB99C,GACZ,MAAM+9C,EAAsBjnD,KAAK8lD,cAAc//C,IAAImD,GAAM,QAAA+hB,EAAA1sB,UAAAC,OADpC0sB,EAAI,IAAAhX,MAAA+W,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,EAAA,GAAA5sB,UAAA4sB,GAEzB87B,GAAuBA,EAAoB3nC,UAAU4L,EACzD,CACAg8B,YAAAA,CAAah+C,GACT,OAAOlJ,KAAK8lD,cAAct/C,IAAI0C,EAClC,CAIA4d,KAAAA,CAAMra,GACF,GAAIzM,KAAKyM,SACL,OCpOhB,IAAyB1M,EDqObC,KAAK2lD,MAAQjF,GAAaj0C,MCpO3Bi0C,GADc3gD,EDqO2C0M,ICpOZ,QAApB1M,EAAQuvB,SDqOhCtvB,KAAKyM,SAAWA,EAChB,MAAM,SAAEogB,EAAQ,OAAEnJ,EAAM,cAAElP,GAAkBxU,KAAK8f,QASjD,GARItL,IAAkBA,EAAcrU,SAChCqU,EAAcsS,MAAMra,GAExBzM,KAAK0B,KAAK2iD,MAAMjyC,IAAIpS,MACpBA,KAAKK,QAAUL,KAAKK,OAAOiB,SAAS8Q,IAAIpS,MACpCA,KAAK0B,KAAKqkD,kBAAoBriC,GAAUmJ,KACxC7sB,KAAK+jD,eAAgB,GAErBgB,EAAsB,CACtB,IAAIoC,EACAC,EAAa,EACjB,MAAMC,EAAsBA,IAAOrnD,KAAK0B,KAAKgkD,uBAAwB,EAErElyC,GAAMZ,KAAK,KACPw0C,EAAapgD,OAAOogD,aAExBrC,EAAqBt4C,EAAU,KAC3B,MAAM66C,EAAgBtgD,OAAOogD,WACzBE,IAAkBF,IAEtBA,EAAaE,EACbtnD,KAAK0B,KAAKgkD,uBAAwB,EAClCyB,GAAeA,IACfA,EAAc/f,GAAMigB,EAAqB,KACrCpJ,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/Cl+C,KAAKqkD,MAAM5lD,QAAQ8oD,OAG/B,CACI16B,GACA7sB,KAAK0B,KAAK8lD,mBAAmB36B,EAAU7sB,OAGd,IAAzBA,KAAK8f,QAAQ2E,SACbjQ,IACCqY,GAAYnJ,IACb1jB,KAAKunB,iBAAiB,YAAanY,IAA+E,IAA9E,MAAE4B,EAAK,iBAAE+sC,EAAgB,yBAAE0J,EAA0B/jC,OAAQgkC,GAAYt4C,EACzG,GAAIpP,KAAK2nD,yBAGL,OAFA3nD,KAAKyd,YAASnX,OACdtG,KAAK4nD,oBAAiBthD,GAI1B,MAAMuhD,EAAmB7nD,KAAK8f,QAAQsK,YAClC5V,EAAc2V,wBACd29B,IACE,uBAAEC,EAAsB,0BAAEC,GAA+BxzC,EAAcyV,WAKvEg+B,GAAoBjoD,KAAKkoD,eAC1BnF,GAAiB/iD,KAAKkoD,aAAcR,GAYnCS,GAAgCpK,GAAoB0J,EAC1D,GAAIznD,KAAK8f,QAAQiV,YACb/0B,KAAK0jD,YACLyE,GACCpK,IACIkK,IAAqBjoD,KAAKkgD,kBAAoB,CAC/ClgD,KAAK0jD,aACL1jD,KAAKkkD,aAAelkD,KAAK0jD,WACzB1jD,KAAKkkD,aAAaA,kBAAe59C,GAErC,MAAM8hD,GAAgBlkD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfyzB,GAAmBkwB,EAAkB,WAAS,IACjDxf,OAAQ0f,EACRzyC,WAAY0yC,KAEZxzC,EAAciR,oBACdzlB,KAAK8f,QAAQiV,cACbqzB,EAAiBhhB,MAAQ,EACzBghB,EAAiBr6C,MAAO,GAE5B/N,KAAKkiB,eAAekmC,GAKpBpoD,KAAKqoD,mBAAmBr3C,EAAOm3C,EACnC,MAOSpK,GACDwJ,GAAgBvnD,MAEhBA,KAAKmgD,UAAYngD,KAAK8f,QAAQ5c,gBAC9BlD,KAAK8f,QAAQ5c,iBAGrBlD,KAAKkoD,aAAeR,GAGhC,CACAhgC,OAAAA,GACI1nB,KAAK8f,QAAQ+M,UAAY7sB,KAAK4/C,aAC9B5/C,KAAK0B,KAAK2iD,MAAMz8B,OAAO5nB,MACvB,MAAM+/C,EAAQ//C,KAAKggD,WACnBD,GAASA,EAAMn4B,OAAO5nB,MACtBA,KAAKK,QAAUL,KAAKK,OAAOiB,SAAS2C,OAAOjE,MAC3CA,KAAKyM,cAAWnG,EAChBtG,KAAK8lD,cAAcrzC,QACnBgB,GAAYzT,KAAKqmD,iBACrB,CAEAiC,WAAAA,GACItoD,KAAKylD,uBAAwB,CACjC,CACA8C,aAAAA,GACIvoD,KAAKylD,uBAAwB,CACjC,CACA+C,eAAAA,GACI,OAAOxoD,KAAKylD,uBAAyBzlD,KAAK0lD,qBAC9C,CACAiC,sBAAAA,GACI,OAAQ3nD,KAAKm6C,oBACRn6C,KAAKK,QAAUL,KAAKK,OAAOsnD,2BAC5B,CACR,CAEAc,WAAAA,GACQzoD,KAAKwoD,oBAETxoD,KAAK8jD,YAAa,EAClB9jD,KAAKqkD,OAASrkD,KAAKqkD,MAAM5lD,QAAQiqD,IACjC1oD,KAAKolD,cACT,CACAuD,oBAAAA,GACI,MAAM,cAAEn0C,GAAkBxU,KAAK8f,QAC/B,OAAOtL,GAAiBA,EAAcyV,WAAWb,iBACrD,CACAw2B,UAAAA,GAAyC,IAA9BgJ,IAAqBrqD,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,KAAAA,UAAA,GAE5B,GADAyB,KAAK0B,KAAKqkD,iBAAkB,EACxB/lD,KAAK0B,KAAK8mD,kBAEV,YADAxoD,KAAK8f,QAAQ5c,gBAAkBlD,KAAK8f,QAAQ5c,kBAoBhD,GALI8D,OAAO89C,iCACN9kD,KAAK6kD,2BACNF,GAAuC3kD,OAE1CA,KAAK0B,KAAKoiD,YAAc9jD,KAAK0B,KAAK+mD,cAC/BzoD,KAAK+jD,cACL,OACJ/jD,KAAK+jD,eAAgB,EACrB,IAAK,IAAIjnD,EAAI,EAAGA,EAAIkD,KAAK+mD,KAAKvoD,OAAQ1B,IAAK,CACvC,MAAMm3C,EAAOj0C,KAAK+mD,KAAKjqD,GACvBm3C,EAAK4R,sBAAuB,EAC5B5R,EAAKsJ,aAAa,YACdtJ,EAAKn0B,QAAQiV,YACbkf,EAAK2L,YAAW,EAExB,CACA,MAAM,SAAE/yB,EAAQ,OAAEnJ,GAAW1jB,KAAK8f,QAClC,QAAiBxZ,IAAbumB,IAA2BnJ,EAC3B,OACJ,MAAM0F,EAAoBppB,KAAK2oD,uBAC/B3oD,KAAK6oD,2BAA6Bz/B,EAC5BA,EAAkBppB,KAAK+lB,aAAc,SACrCzf,EACNtG,KAAK8oD,iBACLF,GAAyB5oD,KAAKgnD,gBAAgB,aAClD,CACAj0C,MAAAA,GACI/S,KAAKgmD,iBAAkB,EAKvB,GAJyBhmD,KAAKwoD,kBAQ1B,OAHAxoD,KAAKuoD,gBACLvoD,KAAKomD,yBACLpmD,KAAKqkD,MAAM5lD,QAAQsqD,IAMvB,GAAI/oD,KAAKolD,aAAeplD,KAAKqlD,kBAEzB,YADArlD,KAAKqkD,MAAM5lD,QAAQuqD,IAGvBhpD,KAAKqlD,kBAAoBrlD,KAAKolD,YACzBplD,KAAK8jD,YAIN9jD,KAAK8jD,YAAa,EAIlB9jD,KAAKqkD,MAAM5lD,QAAQwqD,IAKnBjpD,KAAKqkD,MAAM5lD,QAAQ++C,IAKnBx9C,KAAKqkD,MAAM5lD,QAAQyqD,KAjBnBlpD,KAAKqkD,MAAM5lD,QAAQuqD,IAmBvBhpD,KAAKomD,oBAML,MAAM/yC,EAAMsL,GAAKtL,MACjBd,GAAUvB,MAAQhE,EAAM,EAAG,IAAO,GAAIqG,EAAMd,GAAUtB,WACtDsB,GAAUtB,UAAYoC,EACtBd,GAAUrB,cAAe,EACzBwC,GAAWX,OAAOT,QAAQC,IAC1BmB,GAAWV,UAAUV,QAAQC,IAC7BmB,GAAWrS,OAAOiR,QAAQC,IAC1BA,GAAUrB,cAAe,CAC7B,CACAwuC,SAAAA,GACS1/C,KAAKgmD,kBACNhmD,KAAKgmD,iBAAkB,EACvBhjC,GAAUpQ,KAAK5S,KAAKimD,gBAE5B,CACAG,iBAAAA,GACIpmD,KAAKqkD,MAAM5lD,QAAQ0qD,IACnBnpD,KAAK8mD,YAAYroD,QAAQ2qD,GAC7B,CACAC,wBAAAA,GACSrpD,KAAKkmD,4BACNlmD,KAAKkmD,2BAA4B,EACjC1yC,GAAMR,UAAUhT,KAAKqmD,kBAAkB,GAAO,GAEtD,CACA/F,yBAAAA,GAMI9sC,GAAMP,WAAW,KACTjT,KAAK+jD,cACL/jD,KAAK0B,KAAKg+C,YAGV1/C,KAAK0B,KAAKykD,qBAGtB,CAIA2C,cAAAA,IACQ9oD,KAAK4jD,UAAa5jD,KAAKyM,WAE3BzM,KAAK4jD,SAAW5jD,KAAKu7C,WACjBv7C,KAAK4jD,UACJpO,GAAWx1C,KAAK4jD,SAAS0F,YAAYpnD,IACrCszC,GAAWx1C,KAAK4jD,SAAS0F,YAAYvhD,KACtC/H,KAAK4jD,cAAWt9C,GAExB,CACAk3C,YAAAA,GACI,IAAKx9C,KAAKyM,SACN,OAEJ,GADAzM,KAAKu9C,iBACCv9C,KAAK8f,QAAQqV,sBAAuBn1B,KAAKmgD,YAC1CngD,KAAK+jD,cACN,OASJ,GAAI/jD,KAAK0jD,aAAe1jD,KAAK0jD,WAAWj3C,SACpC,IAAK,IAAI3P,EAAI,EAAGA,EAAIkD,KAAK+mD,KAAKvoD,OAAQ1B,IAAK,CAC1BkD,KAAK+mD,KAAKjqD,GAClBygD,cACT,CAEJ,MAAMgM,EAAavpD,KAAK0jB,OACxB1jB,KAAK0jB,OAAS1jB,KAAKu7C,SAAQ,GAC3Bv7C,KAAKwpD,gBnK3hBC,CACdtnD,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImK6hB7BzK,KAAK+jD,eAAgB,EACrB/jD,KAAK0+C,qBAAkBp4C,EACvBtG,KAAKgnD,gBAAgB,UAAWhnD,KAAK0jB,OAAO42B,WAC5C,MAAM,cAAE9lC,GAAkBxU,KAAK8f,QAC/BtL,GACIA,EAAc8K,OAAO,gBAAiBtf,KAAK0jB,OAAO42B,UAAWiP,EAAaA,EAAWjP,eAAYh0C,EACzG,CACAi3C,YAAAA,GAAgC,IAAnBkM,EAAKlrD,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,UACb6V,EAAmByC,QAAQ7W,KAAK8f,QAAQgV,cAAgB90B,KAAKyM,UAMjE,GALIzM,KAAKm8C,QACLn8C,KAAKm8C,OAAOiJ,cAAgBplD,KAAK0B,KAAK0jD,aACtCplD,KAAKm8C,OAAOsN,QAAUA,IACtBr1C,GAAmB,GAEnBA,GAAoBpU,KAAKyM,SAAU,CACnC,MAAMi9C,EAASxE,EAAkBllD,KAAKyM,UACtCzM,KAAKm8C,OAAS,CACViJ,YAAaplD,KAAK0B,KAAK0jD,YACvBqE,QACAC,SACAj8B,OAAQw3B,EAAcjlD,KAAKyM,UAC3Bk9C,QAAS3pD,KAAKm8C,OAASn8C,KAAKm8C,OAAOuN,OAASA,EAEpD,CACJ,CACAvE,cAAAA,GACI,IAAKA,EACD,OACJ,MAAMyE,EAAmB5pD,KAAK+jD,eAC1B/jD,KAAK6lD,sBACL7lD,KAAK8f,QAAQqV,oBACX00B,EAAgB7pD,KAAK0+C,kBAAoBkE,GAAY5iD,KAAK0+C,iBAC1Dt1B,EAAoBppB,KAAK2oD,uBACzBmB,EAAyB1gC,EACzBA,EAAkBppB,KAAK+lB,aAAc,SACrCzf,EACAyjD,EAA8BD,IAA2B9pD,KAAK6oD,2BAChEe,GACA5pD,KAAKyM,WACJo9C,GACG7+C,EAAahL,KAAK+lB,eAClBgkC,KACJ5E,EAAenlD,KAAKyM,SAAUq9C,GAC9B9pD,KAAK6lD,sBAAuB,EAC5B7lD,KAAKqmB,iBAEb,CACAk1B,OAAAA,GAAgC,IAAxByO,IAAezrD,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,KAAAA,UAAA,GACnB,MAAM0rD,EAAUjqD,KAAKo8C,iBACrB,IAAI9B,EAAYt6C,KAAKkqD,oBAAoBD,GAs+BrD,IAAkBr+C,EA59BN,OAJIo+C,IACA1P,EAAYt6C,KAAKgqD,gBAAgB1P,IAg+B7C6P,IADcv+C,EA79BG0uC,GA89BHp4C,GACdioD,GAAUv+C,EAAI7D,GA99BC,CACHq9C,YAAaplD,KAAK0B,KAAK0jD,YACvBkE,YAAaW,EACb3P,YACAv0B,aAAc,CAAC,EACfzM,OAAQtZ,KAAK2B,GAErB,CACAy6C,cAAAA,GAAiB,IAAAgO,EACb,MAAM,cAAE51C,GAAkBxU,KAAK8f,QAC/B,IAAKtL,EACD,MnKlmBE,CACdtS,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImKomB7B,MAAMmB,EAAM4I,EAAchI,qBAE1B,MADmC,QAAX49C,EAAApqD,KAAKm8C,cAAM,IAAAiO,OAAA,EAAXA,EAAaT,UAAW3pD,KAAK+mD,KAAKljC,KAAKwmC,KACzC,CAElB,MAAM,OAAElO,GAAWn8C,KAAK0B,KACpBy6C,IACApwC,EAAcH,EAAI1J,EAAGi6C,EAAO1uB,OAAOvrB,GACnC6J,EAAcH,EAAI7D,EAAGo0C,EAAO1uB,OAAO1lB,GAE3C,CACA,OAAO6D,CACX,CACAs+C,mBAAAA,CAAoBt+C,GAAK,IAAA0+C,EACrB,MAAMC,EnKhnBA,CACdroD,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImKmnB7B,GADAm3C,GAAY2I,EAAkB3+C,GACf,QAAf0+C,EAAItqD,KAAKm8C,cAAM,IAAAmO,GAAXA,EAAaX,QACb,OAAOY,EAMX,IAAK,IAAIztD,EAAI,EAAGA,EAAIkD,KAAK+mD,KAAKvoD,OAAQ1B,IAAK,CACvC,MAAMm3C,EAAOj0C,KAAK+mD,KAAKjqD,IACjB,OAAEq/C,EAAM,QAAEr8B,GAAYm0B,EACxBA,IAASj0C,KAAK0B,MAAQy6C,GAAUr8B,EAAQgV,eAKpCqnB,EAAOwN,SACP/H,GAAY2I,EAAkB3+C,GAElCG,EAAcw+C,EAAiBroD,EAAGi6C,EAAO1uB,OAAOvrB,GAChD6J,EAAcw+C,EAAiBxiD,EAAGo0C,EAAO1uB,OAAO1lB,GAExD,CACA,OAAOwiD,CACX,CACAC,cAAAA,CAAe5+C,GAA4B,IAAvB6+C,EAAalsD,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,IAAAA,UAAA,GAC7B,MAAMmsD,EnK3oBA,CACdxoD,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImK6oB7Bm3C,GAAY8I,EAAgB9+C,GAC5B,IAAK,IAAI9O,EAAI,EAAGA,EAAIkD,KAAK+mD,KAAKvoD,OAAQ1B,IAAK,CACvC,MAAMm3C,EAAOj0C,KAAK+mD,KAAKjqD,IAClB2tD,GACDxW,EAAKn0B,QAAQgV,cACbmf,EAAKkI,QACLlI,IAASA,EAAKvyC,MACd2K,EAAaq+C,EAAgB,CACzBxoD,GAAI+xC,EAAKkI,OAAO1uB,OAAOvrB,EACvB6F,GAAIksC,EAAKkI,OAAO1uB,OAAO1lB,IAG1BiD,EAAaipC,EAAKluB,eAEvB1Z,EAAaq+C,EAAgBzW,EAAKluB,aACtC,CAIA,OAHI/a,EAAahL,KAAK+lB,eAClB1Z,EAAaq+C,EAAgB1qD,KAAK+lB,cAE/B2kC,CACX,CACAV,eAAAA,CAAgBp+C,GACZ,MAAM++C,EnKlqBA,CACdzoD,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImKoqB7Bm3C,GAAY+I,EAAqB/+C,GACjC,IAAK,IAAI9O,EAAI,EAAGA,EAAIkD,KAAK+mD,KAAKvoD,OAAQ1B,IAAK,CACvC,MAAMm3C,EAAOj0C,KAAK+mD,KAAKjqD,GACvB,IAAKm3C,EAAKxnC,SACN,SACJ,IAAKzB,EAAaipC,EAAKluB,cACnB,SACJhb,EAASkpC,EAAKluB,eAAiBkuB,EAAK6U,iBACpC,MAAMpG,EAAY5+B,KAElB89B,GAAYc,EADIzO,EAAKmI,kBAErBqG,GAAoBkI,EAAqB1W,EAAKluB,aAAckuB,EAAK2P,SAAW3P,EAAK2P,SAAStJ,eAAYh0C,EAAWo8C,EACrH,CAIA,OAHI13C,EAAahL,KAAK+lB,eAClB08B,GAAoBkI,EAAqB3qD,KAAK+lB,cAE3C4kC,CACX,CACAC,cAAAA,CAAe55C,GACXhR,KAAK6qD,YAAc75C,EACnBhR,KAAK0B,KAAK2nD,2BACVrpD,KAAKulD,mBAAoB,CAC7B,CACArwB,UAAAA,CAAWpV,GACP9f,KAAK8f,SAAO5b,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLlE,KAAK8f,SACLA,GAAO,IACVuV,eAAiC/uB,IAAtBwZ,EAAQuV,WAA0BvV,EAAQuV,WAE7D,CACA0zB,iBAAAA,GACI/oD,KAAKm8C,YAAS71C,EACdtG,KAAK0jB,YAASpd,EACdtG,KAAK4jD,cAAWt9C,EAChBtG,KAAK6oD,gCAA6BviD,EAClCtG,KAAK6qD,iBAAcvkD,EACnBtG,KAAKyd,YAASnX,EACdtG,KAAK+jD,eAAgB,CACzB,CACA+G,kCAAAA,GACS9qD,KAAK+qD,gBAQN/qD,KAAK+qD,eAAerE,2BACpBn0C,GAAUtB,WACVjR,KAAK+qD,eAAexE,oBAAmB,EAE/C,CACAA,kBAAAA,GAA+C,IAAAx/B,EAAA,IAA5BikC,EAAkBzsD,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,IAAAA,UAAA,GAMjC,MAAM6kD,EAAOpjD,KAAKirD,UAClBjrD,KAAKulD,oBAAsBvlD,KAAKulD,kBAAoBnC,EAAKmC,mBACzDvlD,KAAKsoB,mBAAqBtoB,KAAKsoB,iBAAmB86B,EAAK96B,kBACvDtoB,KAAKwlD,0BAA4BxlD,KAAKwlD,wBAA0BpC,EAAKoC,yBACrE,MAAM0F,EAAWr0C,QAAQ7W,KAAKkkD,eAAiBlkD,OAASojD,EAWxD,KANkB4H,GACbE,GAAYlrD,KAAKwlD,yBAClBxlD,KAAKulD,mBACM,QADWx+B,EACtB/mB,KAAKK,cAAM,IAAA0mB,GAAXA,EAAaw+B,mBACbvlD,KAAKmrD,gCACLnrD,KAAK0B,KAAKgkD,uBAEV,OACJ,MAAM,OAAEhiC,EAAM,SAAEmJ,GAAa7sB,KAAK8f,QAIlC,GAAK9f,KAAK0jB,SAAYA,GAAUmJ,GAAhC,CAQA,GANA7sB,KAAK0mD,yBAA2Bn0C,GAAUtB,WAMrCjR,KAAK6qD,cAAgB7qD,KAAK4nD,eAAgB,CAC3C,MAAMmD,EAAiB/qD,KAAKorD,6BACxBL,GACAA,EAAernC,QACY,IAA3B1jB,KAAK6mD,mBACL7mD,KAAK+qD,eAAiBA,EACtB/qD,KAAK8qD,qCACL9qD,KAAK4nD,enKlwBP,CACd1lD,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImKowBrBzK,KAAKqrD,qBnKnwBP,CACdnpD,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImKqwBrBqrC,GAAqB91C,KAAKqrD,qBAAsBrrD,KAAK0jB,OAAO42B,UAAWyQ,EAAernC,OAAO42B,WAC7FsH,GAAY5hD,KAAK4nD,eAAgB5nD,KAAKqrD,uBAGtCrrD,KAAK+qD,eAAiB/qD,KAAK4nD,oBAAiBthD,CAEpD,CAKA,GAAKtG,KAAK4nD,gBAAmB5nD,KAAK6qD,YAAlC,CtBpvBZ,IAAyBptC,EAAQm4B,EAAUv1C,EsB6xB/B,GApCKL,KAAKyd,SACNzd,KAAKyd,OnKrxBH,CACdvb,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImKuxBzBzK,KAAKsrD,qBnKtxBH,CACdppD,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,KmK4xBzBzK,KAAK4nD,gBACL5nD,KAAKqrD,sBACLrrD,KAAK+qD,gBACL/qD,KAAK+qD,eAAettC,QACpBzd,KAAK8qD,qCtBpwBIrtC,EsBqwBOzd,KAAKyd,OtBrwBJm4B,EsBqwBY51C,KAAK4nD,etBrwBPvnD,EsBqwBuBL,KAAK+qD,eAAettC,OtBpwBlFk4B,GAAiBl4B,EAAOvb,EAAG0zC,EAAS1zC,EAAG7B,EAAO6B,GAC9CyzC,GAAiBl4B,EAAO1V,EAAG6tC,EAAS7tC,EAAG1H,EAAO0H,IsBwwB7B/H,KAAK6qD,aACNh0C,QAAQ7W,KAAKkkD,cAEblkD,KAAKyd,OAASzd,KAAKwqD,eAAexqD,KAAK0jB,OAAO42B,WAG9CsH,GAAY5hD,KAAKyd,OAAQzd,KAAK0jB,OAAO42B,WAEzC3uC,EAAc3L,KAAKyd,OAAQzd,KAAK6qD,cAMhCjJ,GAAY5hD,KAAKyd,OAAQzd,KAAK0jB,OAAO42B,WAKrCt6C,KAAKmrD,+BAAgC,CACrCnrD,KAAKmrD,gCAAiC,EACtC,MAAMJ,EAAiB/qD,KAAKorD,6BACxBL,GACAl0C,QAAQk0C,EAAe7G,gBACnBrtC,QAAQ7W,KAAKkkD,gBAChB6G,EAAejrC,QAAQgV,cACxBi2B,EAAettC,QACY,IAA3Bzd,KAAK6mD,mBACL7mD,KAAK+qD,eAAiBA,EACtB/qD,KAAK8qD,qCACL9qD,KAAK4nD,enKn0BP,CACd1lD,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImKq0BrBzK,KAAKqrD,qBnKp0BP,CACdnpD,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImKs0BrBqrC,GAAqB91C,KAAKqrD,qBAAsBrrD,KAAKyd,OAAQstC,EAAettC,QAC5EmkC,GAAY5hD,KAAK4nD,eAAgB5nD,KAAKqrD,uBAGtCrrD,KAAK+qD,eAAiB/qD,KAAK4nD,oBAAiBthD,CAEpD,CAIIkK,GAAY9S,OACZ0mD,GAAQE,wBAhEF,CA5BA,CA8Fd,CACA8G,0BAAAA,GACI,GAAKprD,KAAKK,SACN0K,EAAS/K,KAAKK,OAAO0lB,gBACrB9a,EAAejL,KAAKK,OAAO0lB,cAG/B,OAAI/lB,KAAKK,OAAO6sB,eACLltB,KAAKK,OAGLL,KAAKK,OAAO+qD,4BAE3B,CACAl+B,YAAAA,GACI,OAAOrW,SAAS7W,KAAK4nD,gBACjB5nD,KAAK6qD,aACL7qD,KAAK8f,QAAQiV,aACb/0B,KAAK0jB,OACb,CACA8iC,cAAAA,GAAiB,IAAA7+B,EACb,MAAMy7B,EAAOpjD,KAAKirD,UACZC,EAAWr0C,QAAQ7W,KAAKkkD,eAAiBlkD,OAASojD,EACxD,IAAImI,GAAU,EAuBd,IAlBIvrD,KAAKulD,mBAAgC,QAAf59B,EAAI3nB,KAAKK,cAAM,IAAAsnB,GAAXA,EAAa49B,qBACvCgG,GAAU,GAMVL,IACClrD,KAAKwlD,yBAA2BxlD,KAAKsoB,oBACtCijC,GAAU,GAMVvrD,KAAK0mD,2BAA6Bn0C,GAAUtB,YAC5Cs6C,GAAU,GAEVA,EACA,OACJ,MAAM,OAAE7nC,EAAM,SAAEmJ,GAAa7sB,KAAK8f,QAWlC,GANA9f,KAAKslD,gBAAkBzuC,QAAS7W,KAAKK,QAAUL,KAAKK,OAAOilD,iBACvDtlD,KAAKkgD,kBACLlgD,KAAKwrD,kBACJxrD,KAAKslD,kBACNtlD,KAAK6qD,YAAc7qD,KAAK4nD,oBAAiBthD,IAExCtG,KAAK0jB,SAAYA,IAAUmJ,EAC5B,OAKJ+0B,GAAY5hD,KAAKwpD,gBAAiBxpD,KAAK0jB,OAAO42B,WAI9C,MAAMmR,EAAiBzrD,KAAKy+C,UAAUv8C,EAChCwpD,EAAiB1rD,KAAKy+C,UAAU12C,GtNz3BlD,SAAyB6D,EAAK6yC,EAAWkN,GAAsC,IAA5BC,EAAkBrtD,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,IAAAA,UAAA,GACjE,MAAMstD,EAAaF,EAASntD,OAC5B,IAAKqtD,EACD,OAGJ,IAAI5X,EACAjjC,EAFJytC,EAAUv8C,EAAIu8C,EAAU12C,EAAI,EAG5B,IAAK,IAAIjL,EAAI,EAAGA,EAAI+uD,EAAY/uD,IAAK,CACjCm3C,EAAO0X,EAAS7uD,GAChBkU,EAAQijC,EAAKyK,gBAKb,MAAM,cAAElqC,GAAkBy/B,EAAKn0B,QAC3BtL,GACAA,EAAcvU,MAAMqC,OACkB,aAAtCkS,EAAcvU,MAAMqC,MAAMwpD,UAG1BF,GACA3X,EAAKn0B,QAAQgV,cACbmf,EAAKkI,QACLlI,IAASA,EAAKvyC,MACd2K,EAAaT,EAAK,CACd1J,GAAI+xC,EAAKkI,OAAO1uB,OAAOvrB,EACvB6F,GAAIksC,EAAKkI,OAAO1uB,OAAO1lB,IAG3BiJ,IAEAytC,EAAUv8C,GAAK8O,EAAM9O,EAAEkG,MACvBq2C,EAAU12C,GAAKiJ,EAAMjJ,EAAEK,MAEvBuD,EAAcC,EAAKoF,IAEnB46C,GAAsB5gD,EAAaipC,EAAKluB,eACxC1Z,EAAaT,EAAKqoC,EAAKluB,cAE/B,CAKI04B,EAAUv8C,EAAI4J,GACd2yC,EAAUv8C,EAAI2J,IACd4yC,EAAUv8C,EAAI,GAEdu8C,EAAU12C,EAAI+D,GACd2yC,EAAU12C,EAAI8D,IACd4yC,EAAU12C,EAAI,EAEtB,CsNy0BYgkD,CAAgB/rD,KAAKwpD,gBAAiBxpD,KAAKy+C,UAAWz+C,KAAK+mD,KAAMmE,IAK7D9H,EAAK1/B,QACJ0/B,EAAK3lC,QACgB,IAArBzd,KAAKy+C,UAAUv8C,GAAgC,IAArBlC,KAAKy+C,UAAU12C,IAC1Cq7C,EAAK3lC,OAAS2lC,EAAK1/B,OAAO42B,UAC1B8I,EAAKkI,qBnKt6BH,CACdppD,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,KmKy6B7B,MAAM,OAAEgT,GAAW2lC,EACd3lC,GAYAzd,KAAK0+C,iBAAoB1+C,KAAKgsD,qBAI/BlK,GAAkB9hD,KAAKgsD,oBAAoB9pD,EAAGlC,KAAK0+C,gBAAgBx8C,GACnE4/C,GAAkB9hD,KAAKgsD,oBAAoBjkD,EAAG/H,KAAK0+C,gBAAgB32C,IAJnE/H,KAAKisD,yBAeTvW,GAAa11C,KAAK0+C,gBAAiB1+C,KAAKwpD,gBAAiB/rC,EAAQzd,KAAK+lB,cAClE/lB,KAAKy+C,UAAUv8C,IAAMupD,GACrBzrD,KAAKy+C,UAAU12C,IAAM2jD,GACpBzI,GAAgBjjD,KAAK0+C,gBAAgBx8C,EAAGlC,KAAKgsD,oBAAoB9pD,IACjE+gD,GAAgBjjD,KAAK0+C,gBAAgB32C,EAAG/H,KAAKgsD,oBAAoBjkD,KAClE/H,KAAK2mD,cAAe,EACpB3mD,KAAKqmB,iBACLrmB,KAAKgnD,gBAAgB,mBAAoBvpC,IAKzCjN,GAAY9S,OACZ0mD,GAAQG,yBAnCJvkD,KAAKgsD,sBACLhsD,KAAKisD,yBACLjsD,KAAKqmB,iBAmCjB,CACA29B,IAAAA,GACIhkD,KAAK4mD,WAAY,CAErB,CACAnD,IAAAA,GACIzjD,KAAK4mD,WAAY,CAErB,CACAvgC,cAAAA,GAAiC,IAAA6lC,EAAA,IAAlBC,IAAS5tD,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,KAAAA,UAAA,GAEpB,GAD0B,QAA1B2tD,EAAAlsD,KAAK8f,QAAQtL,qBAAa,IAAA03C,GAA1BA,EAA4B7lC,iBACxB8lC,EAAW,CACX,MAAMpM,EAAQ//C,KAAKggD,WACnBD,GAASA,EAAM15B,gBACnB,CACIrmB,KAAKkkD,eAAiBlkD,KAAKkkD,aAAaz3C,WACxCzM,KAAKkkD,kBAAe59C,EAE5B,CACA2lD,sBAAAA,GACIjsD,KAAKgsD,oBnK7+BG,CAChB9pD,EAPoB,CACpBqJ,UAAW,EACXnD,MAAO,EACPoV,OAAQ,EACRnS,YAAa,GAIbtD,EARoB,CACpBwD,UAAW,EACXnD,MAAO,EACPoV,OAAQ,EACRnS,YAAa,ImKg/BLrL,KAAK0+C,gBnK9+BG,CAChBx8C,EAPoB,CACpBqJ,UAAW,EACXnD,MAAO,EACPoV,OAAQ,EACRnS,YAAa,GAIbtD,EARoB,CACpBwD,UAAW,EACXnD,MAAO,EACPoV,OAAQ,EACRnS,YAAa,ImKi/BLrL,KAAKosD,6BnK/+BG,CAChBlqD,EAPoB,CACpBqJ,UAAW,EACXnD,MAAO,EACPoV,OAAQ,EACRnS,YAAa,GAIbtD,EARoB,CACpBwD,UAAW,EACXnD,MAAO,EACPoV,OAAQ,EACRnS,YAAa,GmKk/BT,CACAg9C,kBAAAA,CAAmBr3C,GAA6C,IAAtCm3C,EAA4B5pD,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,IAAAA,UAAA,GAClD,MAAMqlD,EAAW5jD,KAAK4jD,SAChByI,EAAuBzI,EAAWA,EAAS79B,aAAe,CAAC,EAC3DumC,GAAWpoD,EAAAA,EAAAA,GAAA,GAAQlE,KAAK+lB,cACxB8kC,EnKr/BE,CAChB3oD,EAPoB,CACpBqJ,UAAW,EACXnD,MAAO,EACPoV,OAAQ,EACRnS,YAAa,GAIbtD,EARoB,CACpBwD,UAAW,EACXnD,MAAO,EACPoV,OAAQ,EACRnS,YAAa,ImKw/BArL,KAAK+qD,gBACL/qD,KAAK+qD,eAAejrC,QAAQiV,aAC7B/0B,KAAK4nD,eAAiB5nD,KAAKqrD,0BAAuB/kD,GAEtDtG,KAAKmrD,gCAAkChD,EACvC,MAAMoE,EnKt/BA,CACdrqD,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImK0/BvB+hD,GAFiB5I,EAAWA,EAAStqC,YAAShT,MAC/BtG,KAAK0jB,OAAS1jB,KAAK0jB,OAAOpK,YAAShT,GAElDy5C,EAAQ//C,KAAKggD,WACbyM,GAAgB1M,GAASA,EAAME,QAAQzhD,QAAU,EACjDkuD,EAAyB71C,QAAQ21C,IAClCC,IAC0B,IAA3BzsD,KAAK8f,QAAQuV,YACZr1B,KAAK+mD,KAAKljC,KAAK8oC,KAEpB,IAAIC,EADJ5sD,KAAK6mD,kBAAoB,EAEzB7mD,KAAK6sD,eAAkBphC,IACnB,MAAM5gB,EAAW4gB,EAAS,IFngC1C,IAAmBtU,EAAGC,EEwhDNoC,EAAQ7O,EAAMC,EAAIzL,EAphBlB2tD,GAAajC,EAAY3oD,EAAG8O,EAAM9O,EAAG2I,GACrCiiD,GAAajC,EAAY9iD,EAAGiJ,EAAMjJ,EAAG8C,GACrC7K,KAAK4qD,eAAeC,GAChB7qD,KAAK4nD,gBACL5nD,KAAKqrD,sBACLrrD,KAAK0jB,QACL1jB,KAAK+qD,gBACL/qD,KAAK+qD,eAAernC,SACpBoyB,GAAqByW,EAAgBvsD,KAAK0jB,OAAO42B,UAAWt6C,KAAK+qD,eAAernC,OAAO42B,WA4gB3F9gC,EA3gBWxZ,KAAK4nD,eA2gBRj9C,EA3gBwB3K,KAAKqrD,qBA2gBvBzgD,EA3gB6C2hD,EA2gBzCptD,EA3gByD0L,EA4gBvFkiD,GAAQvzC,EAAOtX,EAAGyI,EAAKzI,EAAG0I,EAAG1I,EAAG/C,GAChC4tD,GAAQvzC,EAAOzR,EAAG4C,EAAK5C,EAAG6C,EAAG7C,EAAG5I,GAxgBZytD,IFlhCLz1C,EEmhCenX,KAAK4nD,eFnhCjBxwC,EEmhCiCw1C,EFlhC5C/J,GAAW1rC,EAAEjV,EAAGkV,EAAElV,IAAM2gD,GAAW1rC,EAAEpP,EAAGqP,EAAErP,MEmhC7B/H,KAAKulD,mBAAoB,GAExBqH,IACDA,EnKvhCN,CACd1qD,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,KmKyhCrBm3C,GAAYgL,EAAoB5sD,KAAK4nD,iBAErC4E,IACAxsD,KAAK6jD,gBAAkByI,EL/hC3C,SAAmB7uC,EAAQuvC,EAAQ5J,EAAMv4C,EAAU6hD,EAAwBD,GAC3C,IAAAQ,EAAAC,EAA5B,GAAIR,EACAjvC,EAAO/C,QAAUhQ,EAAU,EAAe,QAAduiD,EAAE7J,EAAK1oC,eAAO,IAAAuyC,EAAAA,EAAI,EAAG1L,GAAgB12C,IACjE4S,EAAO0vC,YAAcziD,EAAwB,QAAfwiD,EAACF,EAAOtyC,eAAO,IAAAwyC,EAAAA,EAAI,EAAG,EAAGzL,GAAiB52C,SAEvE,GAAI4hD,EAAc,KAAAW,EAAAC,EACnB5vC,EAAO/C,QAAUhQ,EAAwB,QAAf0iD,EAACJ,EAAOtyC,eAAO,IAAA0yC,EAAAA,EAAI,EAAe,QAAdC,EAAEjK,EAAK1oC,eAAO,IAAA2yC,EAAAA,EAAI,EAAGxiD,EACvE,CAIA,IAAK,IAAI/N,EAAI,EAAGA,EAAIokD,GAAYpkD,IAAK,CACjC,MAAMwwD,EAAc,SAAHnrD,OAAY8+C,GAAQnkD,GAAE,UACvC,IAAIywD,EAAelM,GAAU2L,EAAQM,GACjCE,EAAanM,GAAU+B,EAAMkK,QACZhnD,IAAjBinD,QAA6CjnD,IAAfknD,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACApM,GAAKmM,KAAkBnM,GAAKoM,IAE5B/vC,EAAO6vC,GAAe/lD,KAAKkD,IAAIC,EAAUy2C,GAASoM,GAAepM,GAASqM,GAAa3iD,GAAW,IAC9F4C,EAAQpD,KAAKmjD,IAAe//C,EAAQpD,KAAKkjD,MACzC9vC,EAAO6vC,IAAgB,MAI3B7vC,EAAO6vC,GAAeE,EAE9B,EAIIR,EAAOvlD,QAAU27C,EAAK37C,UACtBgW,EAAOhW,OAASiD,EAAUsiD,EAAOvlD,QAAU,EAAG27C,EAAK37C,QAAU,EAAGoD,GAExE,CK0/BoB4iD,CAAUnB,EAAaD,EAAsBrsD,KAAK+lB,aAAclb,EAAU6hD,EAAwBD,IAEtGzsD,KAAK0B,KAAK2nD,2BACVrpD,KAAKqmB,iBACLrmB,KAAK6mD,kBAAoBh8C,GAE7B7K,KAAK6sD,eAAe7sD,KAAK8f,QAAQiV,WAAa,IAAO,EACzD,CACA7S,cAAAA,CAAepC,GAAS,IAAA4tC,EAAAC,EACpB3tD,KAAKgnD,gBAAgB,kBACA,QAArB0G,EAAA1tD,KAAKkgD,wBAAgB,IAAAwN,GAArBA,EAAuBrsC,OACN,QAAjBssC,EAAA3tD,KAAKkkD,oBAAY,IAAAyJ,GAAkB,QAAlBA,EAAjBA,EAAmBzN,wBAAgB,IAAAyN,GAAnCA,EAAqCtsC,OACjCrhB,KAAKwrD,mBACL/3C,GAAYzT,KAAKwrD,kBACjBxrD,KAAKwrD,sBAAmBllD,GAO5BtG,KAAKwrD,iBAAmBh4C,GAAMT,OAAO,KACjCkrC,GAAsBC,wBAAyB,EAC/CrlB,GAAiBnV,SACjB1jB,KAAKuV,cAAgBvV,KAAKuV,YAAcA,GAAY,IACpDvV,KAAKkgD,iBE7jCrB,SAA4BxiD,EAAOoY,EAAWgK,GAC1C,MAAM8tC,EAAgBpvC,GAAc9gB,GAASA,EAAQ6X,GAAY7X,GAEjE,OADAkwD,EAAc3rC,MAAMysB,GAAmB,GAAIkf,EAAe93C,EAAWgK,IAC9D8tC,EAAcvrC,SACzB,CFyjCwCwrC,CAAmB7tD,KAAKuV,YAAa,CAAC,EAAG,MAAKrR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC/D4b,GAAO,IACVJ,SAAU,EACV0vB,QAAQ,EACR/mB,SAAWoD,IACPzrB,KAAK6sD,eAAephC,GACpB3L,EAAQuI,UAAYvI,EAAQuI,SAASoD,IAEzC4a,OAAQA,KACJxN,GAAiBnV,UAErBpO,WAAYA,KACRujB,GAAiBnV,SACjB5D,EAAQxK,YAAcwK,EAAQxK,aAC9BtV,KAAK8tD,wBAGT9tD,KAAKkkD,eACLlkD,KAAKkkD,aAAahE,iBAAmBlgD,KAAKkgD,kBAE9ClgD,KAAKwrD,sBAAmBllD,GAEhC,CACAwnD,iBAAAA,GACQ9tD,KAAKkkD,eACLlkD,KAAKkkD,aAAahE,sBAAmB55C,EACrCtG,KAAKkkD,aAAaP,qBAAkBr9C,GAExC,MAAMy5C,EAAQ//C,KAAKggD,WACnBD,GAASA,EAAMkE,wBACfjkD,KAAKkkD,aACDlkD,KAAKkgD,iBACDlgD,KAAK6jD,qBACDv9C,EACZtG,KAAKgnD,gBAAgB,oBACzB,CACAO,eAAAA,GACQvnD,KAAKkgD,mBACLlgD,KAAK6sD,gBAAkB7sD,KAAK6sD,eAvkCpB,KAwkCR7sD,KAAKkgD,iBAAiB7+B,QAE1BrhB,KAAK8tD,mBACT,CACAC,uBAAAA,GACI,MAAM3K,EAAOpjD,KAAKirD,UAClB,IAAI,qBAAEK,EAAoB,OAAE7tC,EAAM,OAAEiG,EAAM,aAAEqC,GAAiBq9B,EAC7D,GAAKkI,GAAyB7tC,GAAWiG,EAAzC,CAOA,GAAI1jB,OAASojD,GACTpjD,KAAK0jB,QACLA,GACAsqC,GAA0BhuD,KAAK8f,QAAQsV,cAAep1B,KAAK0jB,OAAO42B,UAAW52B,EAAO42B,WAAY,CAChG78B,EAASzd,KAAKyd,QnK9mCZ,CACdvb,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImKgnCzB,MAAMwjD,EAAUzY,GAAWx1C,KAAK0jB,OAAO42B,UAAUp4C,GACjDub,EAAOvb,EAAEsI,IAAM44C,EAAK3lC,OAAOvb,EAAEsI,IAC7BiT,EAAOvb,EAAEuI,IAAMgT,EAAOvb,EAAEsI,IAAMyjD,EAC9B,MAAMC,EAAU1Y,GAAWx1C,KAAK0jB,OAAO42B,UAAUvyC,GACjD0V,EAAO1V,EAAEyC,IAAM44C,EAAK3lC,OAAO1V,EAAEyC,IAC7BiT,EAAO1V,EAAE0C,IAAMgT,EAAO1V,EAAEyC,IAAM0jD,CAClC,CACAtM,GAAY0J,EAAsB7tC,GAMlCpR,EAAai/C,EAAsBvlC,GAOnC2vB,GAAa11C,KAAKosD,6BAA8BpsD,KAAKwpD,gBAAiB8B,EAAsBvlC,EA/BlF,CAgCd,CACAyhC,kBAAAA,CAAmB36B,EAAUonB,GACpBj0C,KAAK8mD,YAAYtgD,IAAIqmB,IACtB7sB,KAAK8mD,YAAYjjD,IAAIgpB,EAAU,IAAIq2B,IAEzBljD,KAAK8mD,YAAY/gD,IAAI8mB,GAC7Bza,IAAI6hC,GACV,MAAM/gB,EAAS+gB,EAAKn0B,QAAQ8U,uBAC5Bqf,EAAK4L,QAAQ,CACTz1B,WAAY8I,EAASA,EAAO9I,gBAAa9jB,EACzCk9C,sBAAuBtwB,GAAUA,EAAOi7B,4BAClCj7B,EAAOi7B,4BAA4Bla,QACnC3tC,GAEd,CACA65C,MAAAA,GACI,MAAMJ,EAAQ//C,KAAKggD,WACnB,OAAOD,GAAQA,EAAMqD,OAASpjD,IAClC,CACAirD,OAAAA,GAAU,IAAAmD,EACN,MAAM,SAAEvhC,GAAa7sB,KAAK8f,QAC1B,OAAO+M,IAA0B,QAAfuhC,EAAApuD,KAAKggD,kBAAU,IAAAoO,OAAA,EAAfA,EAAiBhL,OAAepjD,IACtD,CACAquD,WAAAA,GAAc,IAAAC,EACV,MAAM,SAAEzhC,GAAa7sB,KAAK8f,QAC1B,OAAO+M,EAA0B,QAAlByhC,EAAGtuD,KAAKggD,kBAAU,IAAAsO,OAAA,EAAfA,EAAiBnL,cAAW78C,CAClD,CACA05C,QAAAA,GACI,MAAM,SAAEnzB,GAAa7sB,KAAK8f,QAC1B,GAAI+M,EACA,OAAO7sB,KAAK0B,KAAKolD,YAAY/gD,IAAI8mB,EACzC,CACAgzB,OAAAA,GAAiE,IAAzD,WAAE+F,EAAU,WAAEx7B,EAAU,sBAAEo5B,GAAwBjlD,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1D,MAAMwhD,EAAQ//C,KAAKggD,WACfD,GACAA,EAAMF,QAAQ7/C,KAAMwjD,GACpBoC,IACA5lD,KAAK0+C,qBAAkBp4C,EACvBtG,KAAK4lD,YAAa,GAElBx7B,GACApqB,KAAKk1B,WAAW,CAAE9K,cAC1B,CACA01B,QAAAA,GACI,MAAMC,EAAQ//C,KAAKggD,WACnB,QAAID,GACOA,EAAMD,SAAS9/C,KAK9B,CACA0oD,oBAAAA,GACI,MAAM,cAAEl0C,GAAkBxU,KAAK8f,QAC/B,IAAKtL,EACD,OAEJ,IAAI+5C,GAAyB,EAK7B,MAAM,aAAExoC,GAAiBvR,EAWzB,IAVIuR,EAAald,GACbkd,EAAate,QACbse,EAAahd,SACbgd,EAAa/c,SACb+c,EAAazd,SACbyd,EAAaxd,OACbwd,EAAatd,SACb8lD,GAAyB,IAGxBA,EACD,OACJ,MAAMC,EAAc,CAAC,EACjBzoC,EAAald,GACb47C,GAAyB,IAAKjwC,EAAeg6C,EAAaxuD,KAAK6jD,iBAGnE,IAAK,IAAI/mD,EAAI,EAAGA,EAAI0nD,GAAchmD,OAAQ1B,IACtC2nD,GAAyB,SAADtiD,OAAUqiD,GAAc1nD,IAAM0X,EAAeg6C,EAAaxuD,KAAK6jD,iBACvFY,GAAyB,OAADtiD,OAAQqiD,GAAc1nD,IAAM0X,EAAeg6C,EAAaxuD,KAAK6jD,iBAIzFrvC,EAAcnT,SAEd,IAAK,MAAM+C,KAAOoqD,EACdh6C,EAAc2U,eAAe/kB,EAAKoqD,EAAYpqD,IAC1CpE,KAAK6jD,kBACL7jD,KAAK6jD,gBAAgBz/C,GAAOoqD,EAAYpqD,IAKhDoQ,EAAc6R,gBAClB,CACAoG,qBAAAA,CAAsBgiC,EACtBliC,GACI,IAAKvsB,KAAKyM,UAAYzM,KAAK2lD,MACvB,OACJ,IAAK3lD,KAAK4mD,UAEN,YADA6H,EAAYC,WAAa,UAG7B,MAAMtlC,EAAoBppB,KAAK2oD,uBAC/B,GAAI3oD,KAAK4lD,WASL,OARA5lD,KAAK4lD,YAAa,EAClB6I,EAAYC,WAAa,GACzBD,EAAY/zC,QAAU,GACtB+zC,EAAYE,cACRr8B,GAA4B,OAAT/F,QAAS,IAATA,OAAS,EAATA,EAAWoiC,gBAAkB,QACpDF,EAAYrlD,UAAYggB,EAClBA,EAAkBppB,KAAK+lB,aAAc,IACrC,QAGV,MAAMq9B,EAAOpjD,KAAKirD,UAClB,IAAKjrD,KAAK0+C,kBAAoB1+C,KAAK0jB,SAAW0/B,EAAK3lC,OAe/C,OAdIzd,KAAK8f,QAAQ+M,WACb4hC,EAAY/zC,aACsBpU,IAA9BtG,KAAK+lB,aAAarL,QACZ1a,KAAK+lB,aAAarL,QAClB,EACV+zC,EAAYE,cACRr8B,GAA4B,OAAT/F,QAAS,IAATA,OAAS,EAATA,EAAWoiC,gBAAkB,SAEpD3uD,KAAK2mD,eAAiB37C,EAAahL,KAAK+lB,gBACxC0oC,EAAYrlD,UAAYggB,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNppB,KAAK2mD,cAAe,IAI5B8H,EAAYC,WAAa,GACzB,MAAME,EAAiBxL,EAAKS,iBAAmBT,EAAKr9B,aACpD/lB,KAAK+tD,0BACL,IAAI3kD,EG1xChB,SAAkC4H,EAAOytC,EAAWoQ,GAChD,IAAIzlD,EAAY,GAOhB,MAAM0lD,EAAa99C,EAAM9O,EAAEqJ,UAAYkzC,EAAUv8C,EAC3C6sD,EAAa/9C,EAAMjJ,EAAEwD,UAAYkzC,EAAU12C,EAC3CinD,GAA4B,OAAfH,QAAe,IAAfA,OAAe,EAAfA,EAAiBhmD,IAAK,EAWzC,IAVIimD,GAAcC,GAAcC,KAC5B5lD,EAAY,eAAHjH,OAAkB2sD,EAAU,QAAA3sD,OAAO4sD,EAAU,QAAA5sD,OAAO6sD,EAAU,SAMvD,IAAhBvQ,EAAUv8C,GAA2B,IAAhBu8C,EAAU12C,IAC/BqB,GAAa,SAAJjH,OAAa,EAAIs8C,EAAUv8C,EAAC,MAAAC,OAAK,EAAIs8C,EAAU12C,EAAC,OAEzD8mD,EAAiB,CACjB,MAAM,qBAAEp0C,EAAoB,OAAEhT,EAAM,QAAEsB,EAAO,QAAEC,EAAO,MAAET,EAAK,MAAEE,GAAUomD,EACrEp0C,IACArR,EAAY,eAAHjH,OAAkBsY,EAAoB,QAAAtY,OAAOiH,IACtD3B,IACA2B,GAAa,UAAJjH,OAAcsF,EAAM,UAC7BsB,IACAK,GAAa,WAAJjH,OAAe4G,EAAO,UAC/BC,IACAI,GAAa,WAAJjH,OAAe6G,EAAO,UAC/BT,IACAa,GAAa,SAAJjH,OAAaoG,EAAK,UAC3BE,IACAW,GAAa,SAAJjH,OAAasG,EAAK,SACnC,CAKA,MAAMwmD,EAAgBj+C,EAAM9O,EAAEkG,MAAQq2C,EAAUv8C,EAC1CgtD,EAAgBl+C,EAAMjJ,EAAEK,MAAQq2C,EAAU12C,EAIhD,OAHsB,IAAlBknD,GAAyC,IAAlBC,IACvB9lD,GAAa,SAAJjH,OAAa8sD,EAAa,MAAA9sD,OAAK+sD,EAAa,MAElD9lD,GAAa,MACxB,CH4uC4B+lD,CAAyBnvD,KAAKosD,6BAA8BpsD,KAAKy+C,UAAWmQ,GACxFxlC,IACAhgB,EAAYggB,EAAkBwlC,EAAgBxlD,IAElDqlD,EAAYrlD,UAAYA,EACxB,MAAM,EAAElH,EAAC,EAAE6F,GAAM/H,KAAK0+C,gBAEI,IAAAnvC,EAAA6/C,GAD1BX,EAAY1iC,gBAAkB,GAAH5pB,OAAiB,IAAXD,EAAEsb,OAAY,MAAArb,OAAgB,IAAX4F,EAAEyV,OAAY,OAC9D4lC,EAAKS,iBAKL4K,EAAY/zC,QACR0oC,IAASpjD,KAEwB,QAFpBuP,EACe,QADf6/C,EACPR,EAAel0C,eAAO,IAAA00C,EAAAA,EACpBpvD,KAAK+lB,aAAarL,eAAO,IAAAnL,EAAAA,EACzB,EACFvP,KAAK2jD,gBACD3jD,KAAK+lB,aAAarL,QAClBk0C,EAAezB,YAO7BsB,EAAY/zC,QACR0oC,IAASpjD,UACwBsG,IAA3BsoD,EAAel0C,QACXk0C,EAAel0C,QACf,QAC2BpU,IAA/BsoD,EAAezB,YACXyB,EAAezB,YACf,EAKlB,IAAK,MAAM/oD,KAAOuoB,GAAiB,CAC/B,QAA4BrmB,IAAxBsoD,EAAexqD,GACf,SACJ,MAAM,QAAEm6C,EAAO,QAAEiC,EAAO,cAAElB,GAAkB3yB,GAAgBvoB,GAOtDirD,EAA0B,SAAdjmD,EACZwlD,EAAexqD,GACfm6C,EAAQqQ,EAAexqD,GAAMg/C,GACnC,GAAI5C,EAAS,CACT,MAAM8O,EAAM9O,EAAQhiD,OACpB,IAAK,IAAI1B,EAAI,EAAGA,EAAIwyD,EAAKxyD,IACrB2xD,EAAYjO,EAAQ1jD,IAAMuyD,CAElC,MAKQ/P,EACAt/C,KAAK8f,QAAQtL,cAAc0R,YAAYqF,KAAKnnB,GAAOirD,EAGnDZ,EAAYrqD,GAAOirD,CAG/B,CAMIrvD,KAAK8f,QAAQ+M,WACb4hC,EAAYE,cACRvL,IAASpjD,KACHsyB,GAA4B,OAAT/F,QAAS,IAATA,OAAS,EAATA,EAAWoiC,gBAAkB,GAChD,OAElB,CACAxF,aAAAA,GACInpD,KAAK0jD,WAAa1jD,KAAK4jD,cAAWt9C,CACtC,CAEAipD,SAAAA,GACIvvD,KAAK0B,KAAK2iD,MAAM5lD,QAASw1C,IAAI,IAAAub,EAAA,OAA0B,QAA1BA,EAAKvb,EAAKiM,wBAAgB,IAAAsP,OAAA,EAArBA,EAAuBnuC,SACzDrhB,KAAK0B,KAAK2iD,MAAM5lD,QAAQsqD,IACxB/oD,KAAK0B,KAAKolD,YAAYr0C,OAC1B,EAER,CACA,SAAS+qC,GAAavJ,GAClBA,EAAKuJ,cACT,CACA,SAAS0L,GAAmBjV,GAAM,IAAAwb,EAC9B,MAAM7L,GAA0B,QAAf6L,EAAAxb,EAAKyP,kBAAU,IAAA+L,OAAA,EAAfA,EAAiB7L,WAAY3P,EAAK2P,SACnD,GAAI3P,EAAKkM,UACLlM,EAAKvwB,QACLkgC,GACA3P,EAAKiT,aAAa,aAAc,CAChC,MAAQ5M,UAAW52B,EAAQ4lC,YAAaoG,GAAmBzb,EAAKvwB,QAC1D,cAAE0R,GAAkB6e,EAAKn0B,QACzBorC,EAAWtH,EAAStqC,SAAW26B,EAAKvwB,OAAOpK,OAG3B,SAAlB8b,EACA2gB,GAAUrqC,IACN,MAAMikD,EAAezE,EACftH,EAAS0F,YAAY59C,GACrBk4C,EAAStJ,UAAU5uC,GACnBlN,EAASg3C,GAAWma,GAC1BA,EAAanlD,IAAMkZ,EAAOhY,GAAMlB,IAChCmlD,EAAallD,IAAMklD,EAAanlD,IAAMhM,IAGrCwvD,GAA0B54B,EAAewuB,EAAStJ,UAAW52B,IAClEqyB,GAAUrqC,IACN,MAAMikD,EAAezE,EACftH,EAAS0F,YAAY59C,GACrBk4C,EAAStJ,UAAU5uC,GACnBlN,EAASg3C,GAAW9xB,EAAOhY,IACjCikD,EAAallD,IAAMklD,EAAanlD,IAAMhM,EAIlCy1C,EAAK2T,iBAAmB3T,EAAKiM,mBAC7BjM,EAAKsR,mBAAoB,EACzBtR,EAAK2T,eAAel8C,GAAMjB,IACtBwpC,EAAK2T,eAAel8C,GAAMlB,IAAMhM,KAIhD,MAAMoxD,EnKz5CM,CAChB1tD,EAPoB,CACpBqJ,UAAW,EACXnD,MAAO,EACPoV,OAAQ,EACRnS,YAAa,GAIbtD,EARoB,CACpBwD,UAAW,EACXnD,MAAO,EACPoV,OAAQ,EACRnS,YAAa,ImK45CTqqC,GAAaka,EAAalsC,EAAQkgC,EAAStJ,WAC3C,MAAMuV,EnK35CM,CAChB3tD,EAPoB,CACpBqJ,UAAW,EACXnD,MAAO,EACPoV,OAAQ,EACRnS,YAAa,GAIbtD,EARoB,CACpBwD,UAAW,EACXnD,MAAO,EACPoV,OAAQ,EACRnS,YAAa,ImK85CL6/C,EACAxV,GAAama,EAAa5b,EAAKuW,eAAekF,GAAgB,GAAO9L,EAAS0F,aAG9E5T,GAAama,EAAansC,EAAQkgC,EAAStJ,WAE/C,MAAMyD,GAAoB6E,GAAYgN,GACtC,IAAInI,GAA2B,EAC/B,IAAKxT,EAAKyP,WAAY,CAClB,MAAMqH,EAAiB9W,EAAKmX,6BAK5B,GAAIL,IAAmBA,EAAerH,WAAY,CAC9C,MAAQE,SAAUkM,EAAgBpsC,OAAQqsC,GAAiBhF,EAC3D,GAAI+E,GAAkBC,EAAc,CAChC,MAAMC,EnKx6CR,CACd9tD,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImK06CrBqrC,GAAqBka,EAAkBpM,EAAStJ,UAAWwV,EAAexV,WAC1E,MAAMiS,EnK16CR,CACdrqD,EAFe,CAASsI,IAAK,EAAGC,IAAK,GAGrC1C,EAHe,CAASyC,IAAK,EAAGC,IAAK,ImK46CrBqrC,GAAqByW,EAAgB7oC,EAAQqsC,EAAazV,WACrDyI,GAAiBiN,EAAkBzD,KACpC9E,GAA2B,GAE3BsD,EAAejrC,QAAQiV,aACvBkf,EAAK2T,eAAiB2E,EACtBtY,EAAKoX,qBAAuB2E,EAC5B/b,EAAK8W,eAAiBA,EAE9B,CACJ,CACJ,CACA9W,EAAK+S,gBAAgB,YAAa,CAC9BtjC,SACAkgC,WACA5yC,MAAO6+C,EACPD,cACA7R,mBACA0J,4BAER,MACK,GAAIxT,EAAKkM,SAAU,CACpB,MAAM,eAAEj9C,GAAmB+wC,EAAKn0B,QAChC5c,GAAkBA,GACtB,CAMA+wC,EAAKn0B,QAAQsK,gBAAa9jB,CAC9B,CACA,SAASggD,GAAoBrS,GAIrBzjC,GAAY9S,OACZ0mD,GAAQC,QAEPpQ,EAAK5zC,SAQL4zC,EAAK/mB,iBACN+mB,EAAKsR,kBAAoBtR,EAAK5zC,OAAOklD,mBAOzCtR,EAAKuR,0BAA4BvR,EAAKuR,wBAA0B3uC,QAAQo9B,EAAKsR,mBACzEtR,EAAK5zC,OAAOklD,mBACZtR,EAAK5zC,OAAOmlD,0BAChBvR,EAAK3rB,mBAAqB2rB,EAAK3rB,iBAAmB2rB,EAAK5zC,OAAOioB,kBAClE,CACA,SAASm+B,GAAgBxS,GACrBA,EAAKsR,kBACDtR,EAAKuR,wBACDvR,EAAK3rB,kBACD,CAChB,CACA,SAAS6gC,GAAclV,GACnBA,EAAKkV,eACT,CACA,SAASJ,GAAkB9U,GACvBA,EAAK8U,mBACT,CACA,SAASC,GAAmB/U,GACxBA,EAAK8P,eAAgB,CACzB,CACA,SAASkF,GAAoBhV,GACzB,MAAM,cAAEz/B,GAAkBy/B,EAAKn0B,QAC3BtL,GAAiBA,EAAcyV,WAAWgmC,uBAC1Cz7C,EAAc8K,OAAO,uBAEzB20B,EAAKkR,gBACT,CACA,SAASoC,GAAgBtT,GACrBA,EAAKsT,kBACLtT,EAAK4W,YAAc5W,EAAK2T,eAAiB3T,EAAKx2B,YAASnX,EACvD2tC,EAAKsR,mBAAoB,CAC7B,CACA,SAASgB,GAAmBtS,GACxBA,EAAKsS,oBACT,CACA,SAASC,GAAevS,GACpBA,EAAKuS,gBACT,CACA,SAASkC,GAAqBzU,GAC1BA,EAAKyU,sBACT,CACA,SAASU,GAAoBrJ,GACzBA,EAAMoE,oBACV,CACA,SAAS2I,GAAatzC,EAAQxI,EAAO7R,GACjCqa,EAAOjO,UAAYb,EAAUsG,EAAMzF,UAAW,EAAGpM,GACjDqa,EAAOpR,MAAQsC,EAAUsG,EAAM5I,MAAO,EAAGjJ,GACzCqa,EAAOgE,OAASxM,EAAMwM,OACtBhE,EAAOnO,YAAc2F,EAAM3F,WAC/B,CACA,SAAS0hD,GAAQvzC,EAAQ7O,EAAMC,EAAIzL,GAC/Bqa,EAAOhP,IAAME,EAAUC,EAAKH,IAAKI,EAAGJ,IAAKrL,GACzCqa,EAAO/O,IAAMC,EAAUC,EAAKF,IAAKG,EAAGH,IAAKtL,EAC7C,CAKA,SAASwtD,GAAoB1Y,GACzB,OAAQA,EAAK4P,sBAAwDv9C,IAArC2tC,EAAK4P,gBAAgBsJ,WACzD,CACA,MAAMrF,GAA0B,CAC5BzvB,SAAU,IACVqI,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBwvB,GAAqBC,GAAgC,qBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAU9iC,cAAcznB,SAASqqD,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrE3oD,KAAKiP,MACLpG,GACN,SAAS+5C,GAAUz+C,GAEfA,EAAKlB,IAAM8lD,GAAW5kD,EAAKlB,KAC3BkB,EAAKjB,IAAM6lD,GAAW5kD,EAAKjB,IAC/B,CAKA,SAASujD,GAA0B54B,EAAewuB,EAAUlgC,GACxD,MAA0B,aAAlB0R,GACe,oBAAlBA,ItBzjDO13B,EsB0jDIslD,GAAYY,GtB1jDTnmC,EsB0jDoBulC,GAAYt/B,GtB1jDxB6sC,EsB0jDiC,KtBzjDrDhpD,KAAKc,IAAI3K,EAAQ+f,IAAW8yC,IADvC,IAAgB7yD,EAAO+f,EAAQ8yC,CsB2jD/B,CACA,SAASlG,GAAuBpW,GAAM,IAAAuc,EAClC,OAAOvc,IAASA,EAAKvyC,OAAmB,QAAf8uD,EAAIvc,EAAKkI,cAAM,IAAAqU,OAAA,EAAXA,EAAa7G,QAC9C,CItkDA,MAAM8G,GAAyBn7B,GAAqB,CAChDyvB,qBAAsBA,CAACljD,EAAKyd,IAAWq1B,GAAY9yC,EAAK,SAAUyd,GAClE2lC,cAAeA,KAAA,CACX/iD,EAAGK,SAASmuD,gBAAgBC,YAAcpuD,SAASquD,KAAKD,WACxD5oD,EAAGxF,SAASmuD,gBAAgBG,WAAatuD,SAASquD,KAAKC,YAE3D3L,kBAAmBA,KAAM,ICNvBjJ,GAAqB,CACvB97C,aAASmG,GAEPwqD,GAAqBx7B,GAAqB,CAC5C2vB,cAAgBx4C,IAAQ,CACpBvK,EAAGuK,EAASkkD,WACZ5oD,EAAG0E,EAASokD,YAEhB7L,cAAeA,KACX,IAAK/I,GAAmB97C,QAAS,CAC7B,MAAM4wD,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAajqC,MAAM9f,QACnB+pD,EAAa77B,WAAW,CAAEJ,cAAc,IACxCmnB,GAAmB97C,QAAU4wD,CACjC,CACA,OAAO9U,GAAmB97C,SAE9BglD,eAAgBA,CAAC14C,EAAU/O,KACvB+O,EAASnK,MAAM8G,eAAsB9C,IAAV5I,EAAsBA,EAAQ,QAE7DwnD,kBAAoBz4C,GAAaoK,QAAuD,UAA/C7P,OAAO6H,iBAAiBpC,GAAUukD,YClBzE5tC,GAAO,CACTI,IAAK,CACDsF,QpBKR,cAAyBA,GACrBrpB,WAAAA,GACI4d,SAAS9e,WACTyB,KAAKixD,0BAA4B7gD,EACrC,CACA8gD,aAAAA,CAAcC,GACVnxD,KAAKoxD,QAAU,IAAIjb,GAAWgb,EAAkBnxD,KAAKqxD,oBAAqB,CACtEnyD,mBAAoBc,KAAKi0C,KAAK5pB,wBAC9BgsB,cAAeL,GAAiBh2C,KAAKi0C,OAE7C,CACAod,iBAAAA,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAazxD,KAAKi0C,KAAKhqB,WACrE,MAAO,CACH6tB,eAAgBkG,GAAasT,GAC7Bla,QAAS4G,GAAauT,GACtBla,OAAQma,EACR/Z,MAAOA,CAAC1C,EAAO6B,YACJ52C,KAAKoxD,QACRK,GACAj+C,GAAMP,WAAW,IAAMw+C,EAAS1c,EAAO6B,KAIvD,CACA9vB,KAAAA,GACI9mB,KAAKixD,0BAA4B3b,GAAgBt1C,KAAKi0C,KAAK9zC,QAAS,cAAgB40C,GAAU/0C,KAAKkxD,cAAcnc,GACrH,CACAhiC,MAAAA,GACI/S,KAAKoxD,SAAWpxD,KAAKoxD,QAAQpZ,eAAeh4C,KAAKqxD,oBACrD,CACA3pC,OAAAA,GACI1nB,KAAKixD,4BACLjxD,KAAKoxD,SAAWpxD,KAAKoxD,QAAQ5Z,KACjC,IoBrCAp0B,KAAM,CACF0F,QCNR,cAA0BA,GACtBrpB,WAAAA,CAAYw0C,GACR52B,MAAM42B,GACNj0C,KAAK0xD,oBAAsBthD,GAC3BpQ,KAAK+3C,gBAAkB3nC,GACvBpQ,KAAK2xD,SAAW,IAAIxY,GAA0BlF,EAClD,CACAntB,KAAAA,GAGI,MAAM,aAAE8qC,GAAiB5xD,KAAKi0C,KAAKhqB,WAC/B2nC,IACA5xD,KAAK0xD,oBAAsBE,EAAaxd,UAAUp0C,KAAK2xD,WAE3D3xD,KAAK+3C,gBAAkB/3C,KAAK2xD,SAASlU,gBAAkBrtC,EAC3D,CACAsX,OAAAA,GACI1nB,KAAK0xD,sBACL1xD,KAAK+3C,iBACT,GDZIlhB,eAAgBi6B,GAChBv6B,cAAaA,KEVrB,SAASs7B,GAAaC,EAAmBhyC,GACrC,MAAMiyC,ECHV,SAAyBD,EAAmBE,EAAOC,GAC/C,GAAIH,aAA6BI,YAC7B,MAAO,CAACJ,GAEP,GAAiC,kBAAtBA,EAAgC,KAAAK,EAC5C,IAAIzwD,EAAOa,SACPyvD,IACAtwD,EAAOswD,EAAM7xD,SAEjB,MAAM4xD,EAA6C,QAArCI,EAAgB,OAAbF,QAAa,IAAbA,OAAa,EAAbA,EAAgBH,UAAkB,IAAAK,EAAAA,EAC/CzwD,EAAK0wD,iBAAiBN,GAC1B,OAAOC,EAAW79C,MAAMvJ,KAAKonD,GAAY,EAC7C,CACA,OAAO79C,MAAMvJ,KAAKmnD,EACtB,CDXqBO,CAAgBP,GAC3BQ,EAAyB,IAAIC,gBAOnC,MAAO,CAACR,GANU7tD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACd0wC,SAAS,GACN90B,GAAO,IACV0yC,OAAQF,EAAuBE,SAEpBngD,IAAMigD,EAAuBG,QAEhD,CETA,SAASC,GAAa3d,GAClB,QAA+B,UAAtBA,EAAMC,aAA2BN,KAC9C,CCDA,SAASie,GAAiB1e,EAAMc,EAAO6d,GACnC,MAAM,MAAE3yD,GAAUg0C,EACdA,EAAKre,gBAAkB31B,EAAM6zC,YAC7BG,EAAKre,eAAe0d,UAAU,aAA4B,UAAdsf,GAEhD,MACM5gD,EAAW/R,EADE,UAAY2yD,GAE3B5gD,GACAwB,GAAMP,WAAW,IAAMjB,EAAS+iC,EAAOI,GAAiBJ,IAEhE,C,eCPA,MAAM8d,GAAgBA,CAACxyD,EAAQoE,MACtBA,IAGIpE,IAAWoE,GAITouD,GAAcxyD,EAAQoE,EAAMquD,gBCfrCC,GAAoB,IAAI3rD,IAAI,CAC9B,SACA,QACA,SACA,WACA,MCLJ,MAAM4rD,GAAa,IAAIphD,QCKvB,SAASqhD,GAAajhD,GAClB,OAAQ+iC,IACc,UAAdA,EAAM3wC,KAEV4N,EAAS+iC,GAEjB,CACA,SAASme,GAAiBz1C,EAAQ1P,GAC9B0P,EAAO01C,cAAc,IAAIC,aAAa,UAAYrlD,EAAM,CAAEmnC,WAAW,EAAMme,SAAS,IACxF,CCDA,SAASC,GAAkBve,GACvB,OAAOD,GAAiBC,KAAWL,IACvC,CAoBA,SAAS6e,GAAMC,EAAkBC,GAA4B,IAAd3zC,EAAOvhB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtD,MAAOm1D,EAASC,EAAcC,GAAgB/B,GAAa2B,EAAkB1zC,GACvE+zC,EAAcrd,IAChB,MAAM/4B,EAAS+4B,EAAWsd,cAC1B,IAAKR,GAAkB9c,GACnB,OACJwc,GAAW5gD,IAAIqL,GACf,MAAMs2C,EAAaN,EAAah2C,EAAQ+4B,GAClCwd,EAAeA,CAACC,EAAUC,KAC5BltD,OAAO6tC,oBAAoB,YAAasf,GACxCntD,OAAO6tC,oBAAoB,gBAAiBuf,GACxCpB,GAAWxsD,IAAIiX,IACfu1C,GAAW/uD,OAAOwZ,GAEjB61C,GAAkBW,IAGG,oBAAfF,GACPA,EAAWE,EAAU,CAAEC,aAGzBC,EAAeE,IACjBL,EAAaK,EAAS52C,IAAWzW,QAC7ByW,IAAWlb,UACXud,EAAQw0C,iBACRzB,GAAcp1C,EAAQ42C,EAAQ52C,UAEhC22C,EAAmBG,IACrBP,EAAaO,GAAa,IAE9BvtD,OAAOugB,iBAAiB,YAAa4sC,EAAaR,GAClD3sD,OAAOugB,iBAAiB,gBAAiB6sC,EAAiBT,IAa9D,OAXAD,EAAQj1D,QAASgf,IH7DrB,IAAqC1d,GG8DH+f,EAAQw0C,gBAAkBttD,OAASyW,GAC3C8J,iBAAiB,cAAessC,EAAYF,IAC1DnzD,EAAAA,GAAAA,GAAcid,KACdA,EAAO8J,iBAAiB,QAAUwtB,GDzDlByf,EAACC,EAAYd,KACrC,MAAM5zD,EAAU00D,EAAWX,cAC3B,IAAK/zD,EACD,OACJ,MAAM20D,EAAgBzB,GAAa,KAC/B,GAAID,GAAWxsD,IAAIzG,GACf,OACJmzD,GAAiBnzD,EAAS,QAC1B,MAAM40D,EAAc1B,GAAa,KAC7BC,GAAiBnzD,EAAS,QAG9BA,EAAQwnB,iBAAiB,QAASotC,EAAahB,GAC/C5zD,EAAQwnB,iBAAiB,OAFNqtC,IAAM1B,GAAiBnzD,EAAS,UAEN4zD,KAEjD5zD,EAAQwnB,iBAAiB,UAAWmtC,EAAef,GAInD5zD,EAAQwnB,iBAAiB,OAAQ,IAAMxnB,EAAQ80C,oBAAoB,UAAW6f,GAAgBf,ICsC1Ca,CAAoBzf,EAAO4e,IHjE9C5zD,EGkEQ0d,EHjEjCs1C,GAAkBvsD,IAAIzG,EAAQuvB,WACZ,IAAtBvvB,EAAQkxB,UGiECxT,EAAOo3C,aAAa,cACrBp3C,EAAOwT,SAAW,MAIvB2iC,CACX,CC5EA,SAASkB,GAAiB7gB,EAAMc,EAAO6d,GACnC,MAAM,MAAE3yD,GAAUg0C,EAClB,GAAIA,EAAK9zC,mBAAmB40D,mBAAqB9gB,EAAK9zC,QAAQ60D,SAC1D,OAEA/gB,EAAKre,gBAAkB31B,EAAMmxB,UAC7B6iB,EAAKre,eAAe0d,UAAU,WAA0B,UAAdsf,GAE9C,MACM5gD,EAAW/R,EADE,SAAyB,QAAd2yD,EAAsB,GAAKA,IAErD5gD,GACAwB,GAAMP,WAAW,IAAMjB,EAAS+iC,EAAOI,GAAiBJ,IAEhE,C,kBCZMkgB,GAAoB,IAAI/wC,QAMxBgxC,GAAY,IAAIhxC,QAChBixC,GAAwBC,IAC1B,MAAMpjD,EAAWijD,GAAkBlvD,IAAIqvD,EAAM33C,QAC7CzL,GAAYA,EAASojD,IAEnBC,GAA4BC,IAC9BA,EAAQ72D,QAAQ02D,KAqBpB,SAASI,GAAoBx1D,EAAS+f,EAAS9N,GAC3C,MAAMwjD,EApBV,SAAiCh0D,GAAuB,IAAtB,KAAEE,GAAkBF,EAATse,GAAOnZ,EAAAA,GAAAA,GAAAnF,EAAAqlB,IAChD,MAAM4uC,EAAa/zD,GAAQa,SAItB2yD,GAAU1uD,IAAIivD,IACfP,GAAUrxD,IAAI4xD,EAAY,CAAC,GAE/B,MAAMC,EAAgBR,GAAUnvD,IAAI0vD,GAC9BrxD,EAAMuxD,KAAKC,UAAU91C,GAQ3B,OAHK41C,EAActxD,KACfsxD,EAActxD,GAAO,IAAIyxD,qBAAqBR,IAAwBnxD,EAAAA,EAAAA,GAAA,CAAIxC,QAASoe,KAEhF41C,EAActxD,EACzB,CAEsC0xD,CAAyBh2C,GAG3D,OAFAm1C,GAAkBpxD,IAAI9D,EAASiS,GAC/BwjD,EAA0BvsB,QAAQlpC,GAC3B,KACHk1D,GAAkBhxD,OAAOlE,GACzBy1D,EAA0BO,UAAUh2D,GAE5C,CC3CA,MAAMi2D,GAAiB,CACnBnyC,KAAM,EACNqsB,IAAK,GCAT,MAAM+lB,GAAoB,CACtBxyC,OAAQ,CACJqF,QDAR,cAA4BA,GACxBrpB,WAAAA,GACI4d,SAAS9e,WACTyB,KAAKk2D,gBAAiB,EACtBl2D,KAAKm2D,UAAW,CACpB,CACAC,aAAAA,GACIp2D,KAAK0nB,UACL,MAAM,SAAE2uC,EAAW,CAAC,GAAMr2D,KAAKi0C,KAAKhqB,YAC9B,KAAEvoB,EAAMia,OAAQ26C,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtDv2C,EAAU,CACZpe,KAAMA,EAAOA,EAAKvB,aAAUmG,EAC5BgwD,aACAG,UAA6B,kBAAXF,EAAsBA,EAASP,GAAeO,IA+BpE,OAAOhB,GAAoBv1D,KAAKi0C,KAAK9zC,QAAS2f,EA7BhBs1C,IAC1B,MAAM,eAAEsB,GAAmBtB,EAI3B,GAAIp1D,KAAKm2D,WAAaO,EAClB,OAMJ,GALA12D,KAAKm2D,SAAWO,EAKZF,IAASE,GAAkB12D,KAAKk2D,eAChC,OAEKQ,IACL12D,KAAKk2D,gBAAiB,GAEtBl2D,KAAKi0C,KAAKre,gBACV51B,KAAKi0C,KAAKre,eAAe0d,UAAU,cAAeojB,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoB52D,KAAKi0C,KAAKhqB,WACjDjY,EAAW0kD,EAAiBC,EAAkBC,EACpD5kD,GAAYA,EAASojD,IAG7B,CACAtuC,KAAAA,GACI9mB,KAAKo2D,eACT,CACArjD,MAAAA,GACI,GAAoC,qBAAzB8iD,qBACP,OACJ,MAAM,MAAE51D,EAAK,UAAEH,GAAcE,KAAKi0C,KAC5B4iB,EAAoB,CAAC,SAAU,SAAU,QAAQhzC,KAO/D,SAAiCriB,GAA0D,IAAzD,SAAE60D,EAAW,CAAC,GAAG70D,GAAI60D,SAAUS,EAAe,CAAC,GAAGv4D,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,OAAQ2K,GAASmtD,EAASntD,KAAU4tD,EAAa5tD,EACrD,CAToE6tD,CAAyB92D,EAAOH,IACxF+2D,GACA72D,KAAKo2D,eAEb,CACA1uC,OAAAA,GAAY,ICxDZnE,IAAK,CACDuF,QHQR,cAA2BA,GACvBhC,KAAAA,GACI,MAAM,QAAE3mB,GAAYH,KAAKi0C,KACpB9zC,IAELH,KAAK0nB,QAAU6rC,GAAMpzD,EAAS,CAAC62D,EAAUxgB,KACrCse,GAAiB90D,KAAKi0C,KAAMuC,EAAY,SACjC,CAACyd,EAAQzyD,KAAA,IAAE,QAAE0yD,GAAS1yD,EAAA,OAAKszD,GAAiB90D,KAAKi0C,KAAMggB,EAAUC,EAAU,MAAQ,YAC3F,CAAEI,gBAAiBt0D,KAAKi0C,KAAKh0C,MAAMg3D,kBAC1C,CACAvvC,OAAAA,GAAY,IGhBZrE,MAAO,CACHyF,QCTR,cAA2BA,GACvBrpB,WAAAA,GACI4d,SAAS9e,WACTyB,KAAKmyC,UAAW,CACpB,CACA+kB,OAAAA,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBn3D,KAAKi0C,KAAK9zC,QAAQmnB,QAAQ,iBAC/C,CACA,MAAOtqB,GACHm6D,GAAiB,CACrB,CACKA,GAAmBn3D,KAAKi0C,KAAKre,iBAElC51B,KAAKi0C,KAAKre,eAAe0d,UAAU,cAAc,GACjDtzC,KAAKmyC,UAAW,EACpB,CACAilB,MAAAA,GACSp3D,KAAKmyC,UAAanyC,KAAKi0C,KAAKre,iBAEjC51B,KAAKi0C,KAAKre,eAAe0d,UAAU,cAAc,GACjDtzC,KAAKmyC,UAAW,EACpB,CACArrB,KAAAA,GACI9mB,KAAK0nB,QAAU6Q,GAAKoc,GAAY30C,KAAKi0C,KAAK9zC,QAAS,QAAS,IAAMH,KAAKk3D,WAAYviB,GAAY30C,KAAKi0C,KAAK9zC,QAAS,OAAQ,IAAMH,KAAKo3D,UACzI,CACA1vC,OAAAA,GAAY,IDtBZpE,MAAO,CACHwF,QTDR,cAA2BA,GACvBhC,KAAAA,GACI,MAAM,QAAE3mB,GAAYH,KAAKi0C,KACpB9zC,IAELH,KAAK0nB,QDPb,SAAeoqC,EAAmBuF,GAA4B,IAAdv3C,EAAOvhB,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAOwzD,EAAU4B,EAActhD,GAAUw/C,GAAaC,EAAmBhyC,GACnEw3C,EAAkBC,IACpB,IAAK7E,GAAa6E,GACd,OACJ,MAAM,OAAE95C,GAAW85C,EACbC,EAAaH,EAAa55C,EAAQ85C,GACxC,GAA0B,oBAAfC,IAA8B/5C,EACrC,OACJ,MAAMg6C,EAAkBC,IACfhF,GAAagF,KAElBF,EAAWE,GACXj6C,EAAOo3B,oBAAoB,eAAgB4iB,KAE/Ch6C,EAAO8J,iBAAiB,eAAgBkwC,EAAgB9D,IAK5D,OAHA5B,EAAStzD,QAASsB,IACdA,EAAQwnB,iBAAiB,eAAgB+vC,EAAgB3D,KAEtDthD,CACX,CCduBiR,CAAMnjB,EAAS,CAAC62D,EAAUxgB,KACrCmc,GAAiB3yD,KAAKi0C,KAAMuC,EAAY,SAChCyd,GAAatB,GAAiB3yD,KAAKi0C,KAAMggB,EAAU,SAEnE,CACAvsC,OAAAA,GAAY,KWtBVhE,GAAS,CACXA,OAAQ,CACJmT,eAAgBi6B,GAChBv6B,cAAaA,KCFfohC,GAAuBvgC,ICCVlzB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZ0rC,IACAqmB,IACA7yC,IACAM,IDLuDgM,G,iBEJ9D,SAASixB,EAASjjD,GACd,MAAwB,kBAAVA,GAAgC,OAAVA,CACxC,C,gECIA,SAAS8C,EAAcT,GACnB,OAAO4gD,EAAAA,EAAAA,GAAS5gD,IAAY,iBAAkBA,CAClD,C,2DCkBA,SAASmF,IAA8B,IAAlBkvC,IAAS71C,UAAAC,OAAA,QAAA8H,IAAA/H,UAAA,KAAAA,UAAA,GAC1B,MAAMmF,GAAU1B,EAAAA,EAAAA,YAAWqC,EAAAA,GAC3B,GAAgB,OAAZX,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAEtD,EAAS,eAAE8C,EAAc,SAAEc,GAAaN,EAG1C/B,GAAKC,EAAAA,EAAAA,UACX7C,EAAAA,EAAAA,WAAU,KACN,GAAIq1C,EACA,OAAOpwC,EAASrC,IAErB,CAACyyC,IACJ,MAAMnvC,GAAe4uB,EAAAA,EAAAA,aAAY,IAAMugB,GAAalxC,GAAkBA,EAAevB,GAAK,CAACA,EAAIuB,EAAgBkxC,IAC/G,OAAQh0C,GAAa8C,EAAiB,EAAC,EAAO+B,GAAgB,EAAC,EACnE,C,kCCnCA,MAAMZ,GACUpF,E,QAAAA,eAAc,K","sources":["../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs"],"sourcesContent":["import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX, root }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        const parent = root ?? document.head;\n        parent.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (parent.contains(style)) {\n                parent.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, root }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, root: root, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", root }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, root: root, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Include externalRef in dependencies to ensure the callback updates\n     * when the ref changes, allowing proper ref forwarding.\n     */\n    [visualElement, externalRef]);\n}\n\nexport { useMotionRef };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n"],"names":["toPropertyKey","t","i","r","e","Symbol","toPrimitive","call","TypeError","String","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","LayoutGroupContext","_typeof","iterator","constructor","prototype","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","parent","offsetParent","parentWidth","isHTMLElement","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","children","PopChild","_ref","anchorX","root","id","useId","ref","useRef","nonce","useContext","useInsertionEffect","x","concat","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","contains","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","isReusedContext","context","useMemo","childId","set","isComplete","values","register","delete","_objectSpread","_","key","PresenceContext","Provider","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","includes","get","join","exitingChildren","nextChildren","splice","forceRender","Fragment","undefined","onExit","has","isEveryExitComplete","isExitComplete","_objectWithoutProperties","n","hasOwnProperty","indexOf","propertyIsEnumerable","window","init","transformPropOrder","transformProps","Set","radToDeg","rad","Math","PI","rotate","v","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","scale","abs","rotateZ","skewX","atan","skewY","skew","sqrt","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","parseValueFromTransform","transform","matrix3dMatch","match","parsers","matrix2dMatch","valueParser","split","convertTransformToNumber","parseFloat","trim","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","convertBoundingBoxToBox","bottom","min","max","mixNumber","from","to","progress","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","originX","originY","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","positionalKeys","clamp","number","parse","alpha","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","testValueType","type","dimensionValueTypes","findDimensionValueType","find","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","paddingLeft","paddingRight","_ref3","_ref4","paddingTop","paddingBottom","_bbox","_ref5","_ref6","_ref7","_ref8","_ref9","_ref0","_ref1","_ref10","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","process","frameData","frameloop","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","postRender","processBatch","useManualTiming","performance","now","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","Array","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","visualElement","getValue","removeNonTranslationalTransform","measureInitialState","restore","_element$getValue","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","keyframes","_keyframes$i","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","isZeroValueString","isNone","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","substring","parseInt","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_v$match","_v$match2","isNaN","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","int","transformValueTypes","scaleZ","perspective","transformPerspective","opacity","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","jump","_this$removedTransfor","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isMotionValue","getVelocity","clearTime","time","newTime","queueMicrotask","addUniqueItem","arr","item","removeItem","index","SubscriptionManager","subscriptions","handler","notify","numSubscriptions","getSize","velocityPerSecond","velocity","frameDuration","collectMotionValues","MotionValue","options","canTrackVelocity","events","updateAndNotify","currentTime","_this$events$change","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","endAnimation","_this$events$change2","addDependent","removeDependent","getPrevious","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","_this$dependents","_this$events$destroy","valueTypes","microtask","cancelMicrotask","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","some","createBox","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","isAnimationControls","isVariantLabel","isArray","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","variants","getValueState","resolveVariantFromProps","definition","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","shouldReduceMotion","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","variantChildren","manuallyAnimateOnMount","_this$scrapeMotionVal","willChange","initialMotionValues","_excluded","mount","_this$parent","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addEventListener","initPrefersReducedMotion","addChild","unmount","_this$parent2","remove","feature","isMounted","_this$enteringChildre","enteringChildren","valueIsTransform","onBindTransform","removeOnChange","latestValue","onUpdate","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevPresenceContext","listener","next","nextValue","prevValue","addValue","hasValue","existingValue","liveStyle","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getProps","getVariant","getDefaultTransition","transition","getTransformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","_this$getBaseTargetFr","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","_this$presenceContext","variant","_len","args","_key","scheduleRenderMicrotask","DOMVisualElement","compareDocumentPosition","vars","childSubscription","latest","textContent","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","transformOrigin","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","renderHTML","styleProp","elementStyle","applyProjectionStyles","setProperty","scaleCorrectors","isForcedMotionValue","layoutId","newValues","_visualElement$getVal","HTMLVisualElement","_this$projection","isProjecting","readTransformValue","computedStyle","camelToDash","str","toLowerCase","dashKeys","offset","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","_attrs$transformOrigi","_styleProp$transformB","spacing","useDashCase","buildSVGPath","camelCaseAttributes","tag","scrapeMotionValuesFromProps$1","charAt","toUpperCase","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","tagName","lowercaseSVGElements","isSVGComponent","Component","createDomVisualElement","allowProjection","LazyContext","strict","MotionContext","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_unused","useRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","resolveMotionValue","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","config","make","createRenderState","makeState","useHTMLVisualState","useSVGVisualState","motionComponentSymbol","for","isRefObject","useMotionRef","externalRef","useCallback","onMount","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","_window$MotionHandoff","_window","_window$MotionHasOpti","_window2","lazyContext","visualElementRef","renderer","initialLayoutGroupConfig","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","animationState","animateChanges","_window$MotionHandoff2","_window3","MotionHandoffMarkAsComplete","createMotionComponent","_Component$displayNam","preloadedFeatures","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","createMotionProxy","Proxy","componentCache","factory","deprecatedFactoryFunction","_target","resolveVariant","getValueTransition","_transition$key","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","addValueToWillChange","WillChange","newWillChange","getOptimisedAppearId","makeAnimationInstant","duration","combineFunctions","pipe","transformers","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","mainThread","waapi","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","_origin$values$origin","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","repeat","repeatType","speed","resolvedKeyframes","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","startTime","isStopped","holdTime","playbackSpeed","_this$options$onStop","_this$options","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","_this$driver","driver","newSpeed","hasChanged","_this$options$onPlay","_this$options2","onPlay","_this$options$onCompl","_this$options3","_this$options$onCance","_this$options4","onCancel","stopDriver","sampleTime","attachTimeline","timeline","_this$driver2","allowFlatten","observe","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","_supportsFlags$suppor","supportsLinearEasing","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","_options$duration","_options$ease","applyGeneratorOptions","onfinish","updateMotionValue","isCSSVar","setStyle","_this$animation$finis","_this$animation","commitStyles","_this$animation$commi","_this$animation2","_this$animation$effec","_this$animation$effec2","effect","getComputedTiming","playbackRate","playState","newStartTime","_this$animation$effec3","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","_this$finishedTime","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_this$keyframeResolve2","_this$keyframeResolve","_this$stopTimeline","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","_motionValue$owner","HTMLElement","supportsBrowserAnimation","catch","pendingTimeline","_onReject","_this$keyframeResolve3","_this$keyframeResolve4","underDampedSpring","keyframesTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","_visualElement$latest","MotionHandoffAnimation","appearId","all","setTarget","calcChildStagger","sort","numChildren","maxStaggerDuration","animateVariant","_visualElement$presen","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","_visualElement$varian","_child$animationState","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","_this$unmountControls","prevIsPresent","exitAnimation","isDragging","isDragActive","addDomEvent","passive","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","_this$getAxisMotionVa","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","_this$visualElement$p","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this$getAxisMotionVa2","_this$getAxisMotionVa3","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","isSVGElement","isObject","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","_this$scroll","checkNodeWasScrollRoot","_this$scroll2","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","_this$options$visualE","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","_lead$opacity","_follow$opacity","opacityExit","_follow$opacity2","_lead$opacity2","borderLabel","followRadius","leadRadius","mixValues","_this$currentAnimatio","_this$resumingFrom","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","_this$getStack","getPrevLead","_this$getStack2","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","_valuesToRender$opaci","corrected","num","resetTree","_node$currentAnimatio","_node$resumeFrom","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","_node$scroll","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","_selectorCache$elemen","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","motion"],"sourceRoot":""}