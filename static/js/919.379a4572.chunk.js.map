{"version":3,"file":"static/js/919.379a4572.chunk.js","mappings":"4yJAgBA,MAeMA,EAAWC,IAAiB,IAAhB,OAAEC,GAAQD,EAC1B,MAAOE,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GACvCC,EAA8B,cAAhBJ,EAAOK,KACrBC,EAA6B,aAAhBN,EAAOK,KAE1B,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAS,aAAAC,OAAeL,EAAc,YAAc,GAAE,KAAAK,OAAIH,EAAa,WAAa,IAAKI,SAAA,EAC5FH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUE,SAAA,CACrBT,GAOAU,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uBAAsBE,UACnCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,kBAAiBE,SAAEV,EAAOY,KAAKC,OAAO,GAAGC,mBAP1DH,EAAAA,EAAAA,KAAA,OACEI,IAAKf,EAAOgB,IACZC,IAAKjB,EAAOY,KACZM,QAASA,IAAMhB,GAAc,MAOjCS,EAAAA,EAAAA,KAAA,OAAKH,UAAU,YAAWE,SAAEV,EAAOK,WAErCE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWE,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAKV,EAAOY,QACZD,EAAAA,EAAAA,KAAA,KAAGH,UAAU,SAAQE,SAAEV,EAAOmB,OAAOC,KAAK,YAE5CT,EAAAA,EAAAA,KAAA,OAAKH,UAAU,eAAcE,UAC3BC,EAAAA,EAAAA,KAACU,EAAW,CAACC,QAAStB,EAAOsB,gBAiB/BC,GAAmBC,EAAAA,EAAAA,MAAK1B,GAExBuB,EAAcI,IAAkB,IAAjB,QAAEH,GAASG,EAC9B,MAAMC,EAAQ,CACZ,CAAEC,IAAK,SAAUC,KAAMC,EAAAA,IAAUC,KAAMR,EAAQS,QAC/C,CAAEJ,IAAK,WAAYC,KAAMI,EAAAA,IAAYF,KAAMR,EAAQW,UACnD,CAAEN,IAAK,UAAWC,KAAMM,EAAAA,IAAWJ,KAAMR,EAAQa,SACjD,CAAER,IAAK,WAAYC,KAAMQ,EAAAA,IAAYN,KAAMR,EAAQe,UACnD,CAAEV,IAAK,YAAaC,KAAMU,EAAAA,IAAaR,KAAMR,EAAQiB,WACrD,CAAEZ,IAAK,UAAWC,KAAMY,EAAAA,IAAWV,KAAMR,EAAQmB,UAGnD,OACE9B,EAAAA,EAAAA,KAAA+B,EAAAA,SAAA,CAAAhC,SACGgB,EAAMiB,IACLC,IAAA,IAAC,IAAEjB,EAAG,KAAEC,EAAI,KAAEE,GAAMc,EAAA,OAClBd,IACEvB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBE,SAAA,EAChCC,EAAAA,EAAAA,KAAA,KAAGmB,KAAMA,EAAMe,OAAO,SAASC,IAAI,sBAAqBpC,UACtDC,EAAAA,EAAAA,KAACiB,EAAI,OAEPjB,EAAAA,EAAAA,KAAA,QAAMH,UAAU,UAASE,SAAEiB,MAJWA,QAgBpD,EA3FaoB,KACX,MAAQC,EAAAA,GAASC,EAEjB,OACE1C,EAAAA,EAAAA,MAAA,WAASC,UAAU,YAAWE,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,qBAAoBE,SAAC,qBACnCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,YAAWE,SACvBsC,EAAKL,IAAK3C,IACTW,EAAAA,EAAAA,KAACY,EAAgB,CAAiBvB,OAAQA,GAAnBA,EAAOkD,U","sources":["components/Team/Team.js"],"sourcesContent":["import React, { useState, memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport teamData from \"../../data/team.json\";\r\nimport {\r\n  FaGithub,\r\n  FaLinkedin,\r\n  FaTwitter,\r\n  FaWhatsapp,\r\n  FaInstagram,\r\n  FaDiscord,\r\n} from \"react-icons/fa\";\r\nimport \"./Team.css\";\r\n\r\n// Cleaned up: Consolidated TeamCard, SocialIcons, and SkeletonCard components into this single file\r\n// Added React.memo for TeamCard performance optimization\r\n\r\nconst Team = () => {\r\n  const { core } = teamData;\r\n\r\n  return (\r\n    <section className=\"team-page\">\r\n      <h2 className=\"team-section-title\">Team CyferNauts</h2>\r\n      <div className=\"core-grid\">\r\n        {core.map((member) => (\r\n          <MemoizedTeamCard key={member.id} member={member} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst TeamCard = ({ member }) => {\r\n  const [imageError, setImageError] = useState(false);\r\n  const isPresident = member.role === \"President\";\r\n  const isDirector = member.role === \"Director\";\r\n\r\n  return (\r\n    <div className={`team-card ${isPresident ? 'president' : ''} ${isDirector ? 'director' : ''}`}>\r\n      <div className=\"team-img\">\r\n        {!imageError ? (\r\n          <img\r\n            src={member.img}\r\n            alt={member.name}\r\n            onError={() => setImageError(true)}\r\n          />\r\n        ) : (\r\n          <div className=\"image-error-fallback\">\r\n            <div className=\"fallback-avatar\">{member.name.charAt(0).toUpperCase()}</div>\r\n          </div>\r\n        )}\r\n        <div className=\"team-role\">{member.role}</div>\r\n      </div>\r\n      <div className=\"team-info\">\r\n        <h3>{member.name}</h3>\r\n        <p className=\"skills\">{member.skills.join(\", \")}</p>\r\n      </div>\r\n      <div className=\"team-socials\">\r\n        <SocialIcons socials={member.socials} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTeamCard.propTypes = {\r\n  member: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    role: PropTypes.string.isRequired,\r\n    skills: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    img: PropTypes.string.isRequired,\r\n    socials: PropTypes.object.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nconst MemoizedTeamCard = memo(TeamCard);\r\n\r\nconst SocialIcons = ({ socials }) => {\r\n  const links = [\r\n    { key: \"github\", Icon: FaGithub, href: socials.github },\r\n    { key: \"linkedin\", Icon: FaLinkedin, href: socials.linkedin },\r\n    { key: \"twitter\", Icon: FaTwitter, href: socials.twitter },\r\n    { key: \"whatsapp\", Icon: FaWhatsapp, href: socials.whatsapp },\r\n    { key: \"instagram\", Icon: FaInstagram, href: socials.instagram },\r\n    { key: \"discord\", Icon: FaDiscord, href: socials.discord },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {links.map(\r\n        ({ key, Icon, href }) =>\r\n          href && (\r\n            <div className=\"tooltip-container\" key={key}>\r\n              <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <Icon />\r\n              </a>\r\n              <span className=\"tooltip\">{key}</span>\r\n            </div>\r\n          )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nSocialIcons.propTypes = {\r\n  socials: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Team;\r\n"],"names":["TeamCard","_ref","member","imageError","setImageError","useState","isPresident","role","isDirector","_jsxs","className","concat","children","_jsx","name","charAt","toUpperCase","src","img","alt","onError","skills","join","SocialIcons","socials","MemoizedTeamCard","memo","_ref2","links","key","Icon","FaGithub","href","github","FaLinkedin","linkedin","FaTwitter","twitter","FaWhatsapp","whatsapp","FaInstagram","instagram","FaDiscord","discord","_Fragment","map","_ref3","target","rel","Team","core","teamData","id"],"sourceRoot":""}